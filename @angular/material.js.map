{"version":3,"file":"material.js","sources":["../../src/lib/index.ts","../../src/lib/tooltip/index.ts","../../src/lib/tooltip/tooltip.ts","../../src/lib/slider/index.ts","../../src/lib/slider/slider.ts","../../src/lib/select/index.ts","../../src/lib/select/select.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/select/select-errors.ts","../../src/lib/select/select-animations.ts","../../src/lib/dialog/index.ts","../../src/lib/dialog/dialog-content-directives.ts","../../src/lib/dialog/dialog.ts","../../src/lib/dialog/dialog-container.ts","../../src/lib/dialog/dialog-ref.ts","../../src/lib/dialog/dialog-config.ts","../../src/lib/core/portal/portal-injector.ts","../../src/lib/autocomplete/index.ts","../../src/lib/autocomplete/autocomplete-trigger.ts","../../src/lib/autocomplete/autocomplete.ts","../../src/lib/core/core.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/placeholder/placeholder-options.ts","../../src/lib/core/datetime/index.ts","../../src/lib/core/datetime/native-date-formats.ts","../../src/lib/core/datetime/date-formats.ts","../../src/lib/core/datetime/native-date-adapter.ts","../../src/lib/core/util/object-extend.ts","../../src/lib/core/datetime/date-adapter.ts","../../src/lib/core/animation/animation.ts","../../src/lib/core/style/index.ts","../../src/lib/core/style/apply-transform.ts","../../src/lib/core/style/focus-origin-monitor.ts","../../src/lib/core/coordination/unique-selection-dispatcher.ts","../../src/lib/core/selection/selection.ts","../../src/lib/core/gestures/gesture-config.ts","../../src/lib/core/option/index.ts","../../src/lib/core/option/option.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/ripple/index.ts","../../src/lib/core/ripple/ripple.ts","../../src/lib/core/ripple/ripple-renderer.ts","../../src/lib/core/ripple/ripple-ref.ts","../../src/lib/core/line/line.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/compatibility/compatibility.ts","../../src/lib/version.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {VERSION,coerceBooleanProperty,coerceNumberProperty,ObserversModule,ObserveContent,Dir,Direction,Directionality,BidiModule,Portal,PortalHost,BasePortalHost,ComponentPortal,TemplatePortal,PortalHostDirective,TemplatePortalDirective,PortalModule,DomPortalHost,GestureConfig,HammerInput,HammerManager,AriaLivePoliteness,LiveAnnouncer,LIVE_ANNOUNCER_ELEMENT_TOKEN,LIVE_ANNOUNCER_PROVIDER,InteractivityChecker,FocusTrap,FocusTrapFactory,FocusTrapDeprecatedDirective,FocusTrapDirective,isFakeMousedownFromScreenReader,A11yModule,UniqueSelectionDispatcher,UniqueSelectionDispatcherListener,UNIQUE_SELECTION_DISPATCHER_PROVIDER,MdLineModule,MdLine,MdLineSetter,CompatibilityModule,NoConflictStyleCompatibilityMode,MdCommonModule,MATERIAL_SANITY_CHECKS,FloatPlaceholderType,PlaceholderOptions,MD_PLACEHOLDER_GLOBAL_OPTIONS,ErrorStateMatcher,ErrorOptions,MD_ERROR_GLOBAL_OPTIONS,defaultErrorStateMatcher,showOnDirtyErrorStateMatcher,MdCoreModule,MdOptionModule,MdOptionSelectionChange,MdOption,MdOptgroupBase,_MdOptgroupMixinBase,MdOptgroup,PlatformModule,Platform,getSupportedInputTypes,OVERLAY_PROVIDERS,OverlayModule,Overlay,OverlayContainer,FullscreenOverlayContainer,OverlayRef,OverlayState,ConnectedOverlayDirective,OverlayOrigin,ViewportRuler,ComponentType,PositionStrategy,GlobalPositionStrategy,ConnectedPositionStrategy,VIEWPORT_RULER_PROVIDER,HorizontalConnectionPos,VerticalConnectionPos,OriginConnectionPosition,OverlayConnectionPosition,ConnectionPositionPair,ScrollableViewProperties,ConnectedOverlayPositionChange,Scrollable,ScrollDispatcher,ScrollStrategy,ScrollStrategyOptions,RepositionScrollStrategy,CloseScrollStrategy,NoopScrollStrategy,BlockScrollStrategy,ScrollDispatchModule,MdRipple,RippleGlobalOptions,MD_RIPPLE_GLOBAL_OPTIONS,RippleRef,RippleState,RippleConfig,RIPPLE_FADE_IN_DURATION,RIPPLE_FADE_OUT_DURATION,MdRippleModule,SelectionModel,SelectionChange,StyleModule,TOUCH_BUFFER_MS,FocusOrigin,FocusOriginMonitor,CdkMonitorFocus,FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY,FOCUS_ORIGIN_MONITOR_PROVIDER,applyCssTransform,UP_ARROW,DOWN_ARROW,RIGHT_ARROW,LEFT_ARROW,PAGE_UP,PAGE_DOWN,HOME,END,ENTER,SPACE,TAB,ESCAPE,BACKSPACE,DELETE,A,Z,MATERIAL_COMPATIBILITY_MODE,getMdCompatibilityInvalidPrefixError,MAT_ELEMENTS_SELECTOR,MD_ELEMENTS_SELECTOR,MatPrefixRejector,MdPrefixRejector,AnimationCurves,AnimationDurations,MdSelectionModule,MdPseudoCheckboxState,MdPseudoCheckbox,NativeDateModule,MdNativeDateModule,DateAdapter,MdDateFormats,MD_DATE_FORMATS,NativeDateAdapter,MD_NATIVE_DATE_FORMATS,MdAutocompleteModule,MdAutocomplete,AUTOCOMPLETE_OPTION_HEIGHT,AUTOCOMPLETE_PANEL_HEIGHT,MD_AUTOCOMPLETE_SCROLL_STRATEGY,MD_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER_FACTORY,MD_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER,MD_AUTOCOMPLETE_VALUE_ACCESSOR,getMdAutocompleteMissingPanelError,MdAutocompleteTrigger,MdDialogModule,MD_DIALOG_DATA,MD_DIALOG_SCROLL_STRATEGY,MD_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,MD_DIALOG_SCROLL_STRATEGY_PROVIDER,MdDialog,throwMdDialogContentAlreadyAttachedError,MdDialogContainer,MdDialogClose,MdDialogTitle,MdDialogContent,MdDialogActions,DialogRole,DialogPosition,MdDialogConfig,MdDialogRef,MdSelectModule,fadeInContent,transformPanel,transformPlaceholder,SELECT_ITEM_HEIGHT,SELECT_PANEL_MAX_HEIGHT,SELECT_MAX_OPTIONS_DISPLAYED,SELECT_TRIGGER_HEIGHT,SELECT_OPTION_HEIGHT_ADJUSTMENT,SELECT_PANEL_PADDING_X,SELECT_PANEL_INDENT_PADDING_X,SELECT_MULTIPLE_PANEL_PADDING_X,SELECT_PANEL_PADDING_Y,SELECT_PANEL_VIEWPORT_PADDING,MD_SELECT_SCROLL_STRATEGY,MD_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,MD_SELECT_SCROLL_STRATEGY_PROVIDER,MdSelectChange,MdSelectBase,_MdSelectMixinBase,MdSelectTrigger,MdSelect,MdSliderModule,MD_SLIDER_VALUE_ACCESSOR,MdSliderChange,MdSliderBase,_MdSliderMixinBase,MdSlider,MdTooltipModule,TooltipPosition,TOUCHEND_HIDE_DELAY,SCROLL_THROTTLE_MS,TOOLTIP_PANEL_CLASS,getMdTooltipInvalidPositionError,MD_TOOLTIP_SCROLL_STRATEGY,MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY,MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER,MdTooltip,TooltipVisibility,TooltipComponent} from './public_api';\n\nexport {mixinColor as ɵd} from './core/common-behaviors/color';\nexport {mixinDisabled as ɵc} from './core/common-behaviors/disabled';\nexport {UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY as ɵb} from './core/coordination/unique-selection-dispatcher';\nexport {RippleRenderer as ɵa} from './core/ripple/ripple-renderer';","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {MdCommonModule} from '../core';\nimport {MdTooltip, TooltipComponent, MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER} from './tooltip';\nexport class MdTooltipModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    OverlayModule,\n    MdCommonModule,\n    PlatformModule\n  ],\n  exports: [MdTooltip, TooltipComponent, MdCommonModule],\n  declarations: [MdTooltip, TooltipComponent],\n  entryComponents: [TooltipComponent],\n  providers: [MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdTooltipModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTooltipModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTooltipModule.ctorParameters;\n}\n\n\n\nexport {TooltipPosition,TOUCHEND_HIDE_DELAY,SCROLL_THROTTLE_MS,TOOLTIP_PANEL_CLASS,getMdTooltipInvalidPositionError,MD_TOOLTIP_SCROLL_STRATEGY,MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY,MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER,MdTooltip,TooltipVisibility,TooltipComponent} from './tooltip';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {animate, AnimationEvent, state, style, transition, trigger} from '@angular/animations';\nimport {ComponentPortal} from '@angular/cdk/portal';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\nimport {first} from '@angular/cdk/rxjs';\nimport {\n  OriginConnectionPosition,\n  Overlay,\n  OverlayConnectionPosition,\n  OverlayRef,\n  OverlayState,\n  RepositionScrollStrategy,\n  ScrollDispatcher,\n  // This import is only used to define a generic type. The current TypeScript version incorrectly\n  // considers such imports as unused (https://github.com/Microsoft/TypeScript/issues/14953)\n  // tslint:disable-next-line:no-unused-variable\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\n\nexport type TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\n/**\n * Time in ms to delay before changing the tooltip visibility to hidden\n */\nexport const TOUCHEND_HIDE_DELAY = 1500;\n/**\n * Time in ms to throttle repositioning after scroll events.\n */\nexport const SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n */\nexport const TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @param {?} position\n * @return {?}\n */\nexport function getMdTooltipInvalidPositionError(position: string) {\n  return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/**\n * Injection token that determines the scroll handling while a tooltip is visible.\n */\nexport const MD_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('md-tooltip-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nexport function MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n  return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/**\n * \\@docs-private\n */\nexport const MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER = {\n  provide: MD_TOOLTIP_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n * \n * https://material.google.com/components/tooltips.html\n */\nexport class MdTooltip implements OnDestroy {\n  _overlayRef: OverlayRef | null;\n  _tooltipInstance: TooltipComponent | null;\nprivate _position: TooltipPosition = 'below';\nprivate _disabled: boolean = false;\nprivate _tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n/**\n * Allows the user to define the position of the tooltip relative to the parent element\n * @return {?}\n */\nget position(): TooltipPosition { return this._position; }\n/**\n * @param {?} value\n * @return {?}\n */\nset position(value: TooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n\n      // TODO(andrewjs): When the overlay's position can be dynamically changed, do not destroy\n      // the tooltip.\n      if (this._tooltipInstance) {\n        this._disposeTooltip();\n      }\n    }\n  }\n/**\n * Disables the display of the tooltip.\n * @return {?}\n */\nget disabled(): boolean { return this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // If tooltip is disabled, hide immediately.\n    if (this._disabled) {\n      this.hide(0);\n    }\n  }\n/**\n * @deprecated\n * @return {?}\n */\nget _positionDeprecated(): TooltipPosition { return this._position; }\n/**\n * @param {?} value\n * @return {?}\n */\nset _positionDeprecated(value: TooltipPosition) { this._position = value; }\n/**\n * The default delay in ms before showing the tooltip after show is called\n */\nshowDelay = 0;\n/**\n * The default delay in ms before hiding the tooltip after hide is called\n */\nhideDelay = 0;\nprivate _message: string;\n/**\n * The message to be displayed in the tooltip\n * @return {?}\n */\nget message() { return this._message; }\n/**\n * @param {?} value\n * @return {?}\n */\nset message(value: string) {\n    this._message = value;\n    this._setTooltipMessage(this._message);\n  }\n/**\n * Classes to be passed to the tooltip. Supports the same syntax as `ngClass`.\n * @return {?}\n */\nget tooltipClass() { return this._tooltipClass; }\n/**\n * @param {?} value\n * @return {?}\n */\nset tooltipClass(value: string|string[]|Set<string>|{[key: string]: any}) {\n    this._tooltipClass = value;\n    if (this._tooltipInstance) {\n      this._setTooltipClass(this._tooltipClass);\n    }\n  }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedMessage(): string { return this.message; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _deprecatedMessage(v: string) { this.message = v; }\n/**\n * @return {?}\n */\nget _matMessage() { return this.message; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matMessage(v) { this.message = v; }\n/**\n * @return {?}\n */\nget _matPosition() { return this.position; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matPosition(v) { this.position = v; }\n/**\n * @return {?}\n */\nget _matDisabled() { return this.disabled; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matDisabled(v) { this.disabled = v; }\n/**\n * @return {?}\n */\nget _matHideDelay() { return this.hideDelay; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matHideDelay(v) { this.hideDelay = v; }\n/**\n * @return {?}\n */\nget _matShowDelay() { return this.showDelay; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matShowDelay(v) { this.showDelay = v; }\n/**\n * @return {?}\n */\nget _matClass() { return this.tooltipClass; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matClass(v) { this.tooltipClass = v; }\nprivate _enterListener: Function;\nprivate _leaveListener: Function;\n/**\n * @param {?} _overlay\n * @param {?} _elementRef\n * @param {?} _scrollDispatcher\n * @param {?} _viewContainerRef\n * @param {?} _ngZone\n * @param {?} _renderer\n * @param {?} _platform\n * @param {?} _scrollStrategy\n * @param {?} _dir\n */\nconstructor(\nprivate _overlay: Overlay,\nprivate _elementRef: ElementRef,\nprivate _scrollDispatcher: ScrollDispatcher,\nprivate _viewContainerRef: ViewContainerRef,\nprivate _ngZone: NgZone,\nprivate _renderer: Renderer2,\nprivate _platform: Platform,\nprivate _scrollStrategy,\nprivate _dir: Directionality) {\n\n    // The mouse events shouldn't be bound on iOS devices, because\n    // they can prevent the first tap from firing its click event.\n    if (!_platform.IOS) {\n      this._enterListener =\n        _renderer.listen(_elementRef.nativeElement, 'mouseenter', () => this.show());\n      this._leaveListener =\n        _renderer.listen(_elementRef.nativeElement, 'mouseleave', () => this.hide());\n    }\n  }\n/**\n * Dispose the tooltip when destroyed.\n * @return {?}\n */\nngOnDestroy() {\n    if (this._tooltipInstance) {\n      this._disposeTooltip();\n    }\n    // Clean up the event listeners set in the constructor\n    if (!this._platform.IOS) {\n      this._enterListener();\n      this._leaveListener();\n    }\n  }\n/**\n * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n * @param {?=} delay\n * @return {?}\n */\nshow(delay: number = this.showDelay): void {\n    if (this.disabled || !this._message || !this._message.trim()) { return; }\n\n    if (!this._tooltipInstance) {\n      this._createTooltip();\n    }\n\n    this._setTooltipClass(this._tooltipClass);\n    this._setTooltipMessage(this._message); /** @type {?} */((\n    this._tooltipInstance)).show(this._position, delay);\n  }\n/**\n * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n * @param {?=} delay\n * @return {?}\n */\nhide(delay: number = this.hideDelay): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.hide(delay);\n    }\n  }\n/**\n * Shows/hides the tooltip\n * @return {?}\n */\ntoggle(): void {\n    this._isTooltipVisible() ? this.hide() : this.show();\n  }\n/**\n * Returns true if the tooltip is currently visible to the user\n * @return {?}\n */\n_isTooltipVisible(): boolean {\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n/**\n * Create the tooltip to display\n * @return {?}\n */\nprivate _createTooltip(): void {\n    let /** @type {?} */ overlayRef = this._createOverlay();\n    let /** @type {?} */ portal = new ComponentPortal(TooltipComponent, this._viewContainerRef);\n\n    this._tooltipInstance = overlayRef.attach(portal).instance; /** @type {?} */((\n\n    // Dispose the overlay when finished the shown tooltip.\n    this._tooltipInstance)).afterHidden().subscribe(() => {\n      // Check first if the tooltip has already been removed through this components destroy.\n      if (this._tooltipInstance) {\n        this._disposeTooltip();\n      }\n    });\n  }\n/**\n * Create the overlay config and position strategy\n * @return {?}\n */\nprivate _createOverlay(): OverlayRef {\n    let /** @type {?} */ origin = this._getOrigin();\n    let /** @type {?} */ position = this._getOverlayPosition();\n\n    // Create connected position strategy that listens for scroll events to reposition.\n    // After position changes occur and the overlay is clipped by a parent scrollable then\n    // close the tooltip.\n    let /** @type {?} */ strategy = this._overlay.position().connectedTo(this._elementRef, origin, position);\n    strategy.withScrollableContainers(this._scrollDispatcher.getScrollContainers(this._elementRef));\n    strategy.onPositionChange.subscribe(change => {\n      if (change.scrollableViewProperties.isOverlayClipped &&\n          this._tooltipInstance && this._tooltipInstance.isVisible()) {\n        this.hide(0);\n      }\n    });\n\n    let /** @type {?} */ config = new OverlayState();\n\n    config.direction = this._dir ? this._dir.value : 'ltr';\n    config.positionStrategy = strategy;\n    config.panelClass = TOOLTIP_PANEL_CLASS;\n    config.scrollStrategy = this._scrollStrategy();\n\n    this._overlayRef = this._overlay.create(config);\n\n    return this._overlayRef;\n  }\n/**\n * Disposes the current tooltip and the overlay it is attached to\n * @return {?}\n */\nprivate _disposeTooltip(): void {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n\n    this._tooltipInstance = null;\n  }\n/**\n * Returns the origin position based on the user's position preference\n * @return {?}\n */\n_getOrigin(): OriginConnectionPosition {\n    if (this.position == 'above' || this.position == 'below') {\n      return {originX: 'center', originY: this.position == 'above' ? 'top' : 'bottom'};\n    }\n\n    const /** @type {?} */ isDirectionLtr = !this._dir || this._dir.value == 'ltr';\n    if (this.position == 'left' ||\n        this.position == 'before' && isDirectionLtr ||\n        this.position == 'after' && !isDirectionLtr) {\n      return {originX: 'start', originY: 'center'};\n    }\n\n    if (this.position == 'right' ||\n        this.position == 'after' && isDirectionLtr ||\n        this.position == 'before' && !isDirectionLtr) {\n      return {originX: 'end', originY: 'center'};\n    }\n\n    throw getMdTooltipInvalidPositionError(this.position);\n  }\n/**\n * Returns the overlay position based on the user's preference\n * @return {?}\n */\n_getOverlayPosition(): OverlayConnectionPosition {\n    if (this.position == 'above') {\n      return {overlayX: 'center', overlayY: 'bottom'};\n    }\n\n    if (this.position == 'below') {\n      return {overlayX: 'center', overlayY: 'top'};\n    }\n\n    const /** @type {?} */ isLtr = !this._dir || this._dir.value == 'ltr';\n    if (this.position == 'left' ||\n        this.position == 'before' && isLtr ||\n        this.position == 'after' && !isLtr) {\n      return {overlayX: 'end', overlayY: 'center'};\n    }\n\n    if (this.position == 'right' ||\n        this.position == 'after' && isLtr ||\n        this.position == 'before' && !isLtr) {\n      return {overlayX: 'start', overlayY: 'center'};\n    }\n\n    throw getMdTooltipInvalidPositionError(this.position);\n  }\n/**\n * Updates the tooltip message and repositions the overlay according to the new message length\n * @param {?} message\n * @return {?}\n */\nprivate _setTooltipMessage(message: string) {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    if (this._tooltipInstance) {\n      this._tooltipInstance.message = message;\n      this._tooltipInstance._markForCheck();\n\n      first.call(this._ngZone.onMicrotaskEmpty).subscribe(() => {\n        if (this._tooltipInstance) { /** @type {?} */((\n          this._overlayRef)).updatePosition();\n        }\n      });\n    }\n  }\n/**\n * Updates the tooltip class\n * @param {?} tooltipClass\n * @return {?}\n */\nprivate _setTooltipClass(tooltipClass: string|string[]|Set<string>|{[key: string]: any}) {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.tooltipClass = tooltipClass;\n      this._tooltipInstance._markForCheck();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-tooltip], [mdTooltip], [mat-tooltip], [matTooltip]',\n  host: {\n    '(longpress)': 'show()',\n    '(touchend)': 'hide(' + TOUCHEND_HIDE_DELAY + ')',\n  },\n  exportAs: 'mdTooltip',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n{type: ElementRef, },\n{type: ScrollDispatcher, },\n{type: ViewContainerRef, },\n{type: NgZone, },\n{type: Renderer2, },\n{type: Platform, },\n{type: undefined, decorators: [{ type: Inject, args: [MD_TOOLTIP_SCROLL_STRATEGY, ] }, ]},\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'position': [{ type: Input, args: ['mdTooltipPosition', ] },],\n'disabled': [{ type: Input, args: ['mdTooltipDisabled', ] },],\n'_positionDeprecated': [{ type: Input, args: ['tooltip-position', ] },],\n'showDelay': [{ type: Input, args: ['mdTooltipShowDelay', ] },],\n'hideDelay': [{ type: Input, args: ['mdTooltipHideDelay', ] },],\n'message': [{ type: Input, args: ['mdTooltip', ] },],\n'tooltipClass': [{ type: Input, args: ['mdTooltipClass', ] },],\n'_deprecatedMessage': [{ type: Input, args: ['md-tooltip', ] },],\n'_matMessage': [{ type: Input, args: ['matTooltip', ] },],\n'_matPosition': [{ type: Input, args: ['matTooltipPosition', ] },],\n'_matDisabled': [{ type: Input, args: ['matTooltipDisabled', ] },],\n'_matHideDelay': [{ type: Input, args: ['matTooltipHideDelay', ] },],\n'_matShowDelay': [{ type: Input, args: ['matTooltipShowDelay', ] },],\n'_matClass': [{ type: Input, args: ['matTooltipClass', ] },],\n};\n}\n\nfunction MdTooltip_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTooltip.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTooltip.ctorParameters;\n/** @type {?} */\nMdTooltip.propDecorators;\n/** @type {?} */\nMdTooltip.prototype._overlayRef;\n/** @type {?} */\nMdTooltip.prototype._tooltipInstance;\n/** @type {?} */\nMdTooltip.prototype._position;\n/** @type {?} */\nMdTooltip.prototype._disabled;\n/** @type {?} */\nMdTooltip.prototype._tooltipClass;\n/**\n * The default delay in ms before showing the tooltip after show is called\n * @type {?}\n */\nMdTooltip.prototype.showDelay;\n/**\n * The default delay in ms before hiding the tooltip after hide is called\n * @type {?}\n */\nMdTooltip.prototype.hideDelay;\n/** @type {?} */\nMdTooltip.prototype._message;\n/** @type {?} */\nMdTooltip.prototype._enterListener;\n/** @type {?} */\nMdTooltip.prototype._leaveListener;\n/** @type {?} */\nMdTooltip.prototype._overlay;\n/** @type {?} */\nMdTooltip.prototype._elementRef;\n/** @type {?} */\nMdTooltip.prototype._scrollDispatcher;\n/** @type {?} */\nMdTooltip.prototype._viewContainerRef;\n/** @type {?} */\nMdTooltip.prototype._ngZone;\n/** @type {?} */\nMdTooltip.prototype._renderer;\n/** @type {?} */\nMdTooltip.prototype._platform;\n/** @type {?} */\nMdTooltip.prototype._scrollStrategy;\n/** @type {?} */\nMdTooltip.prototype._dir;\n}\n\n\nexport type TooltipVisibility = 'initial' | 'visible' | 'hidden';\n/**\n * Internal component that wraps the tooltip's content.\n * \\@docs-private\n */\nexport class TooltipComponent {\n/**\n * Message to display in the tooltip\n */\nmessage: string;\n/**\n * Classes to be added to the tooltip. Supports the same syntax as `ngClass`.\n */\ntooltipClass: string|string[]|Set<string>|{[key: string]: any};\n/**\n * The timeout ID of any current timer set to show the tooltip\n */\n_showTimeoutId: number;\n/**\n * The timeout ID of any current timer set to hide the tooltip\n */\n_hideTimeoutId: number;\n/**\n * Property watched by the animation framework to show or hide the tooltip\n */\n_visibility: TooltipVisibility = 'initial';\n/**\n * Whether interactions on the page should close the tooltip\n */\n_closeOnInteraction: boolean = false;\n/**\n * The transform origin used in the animation for showing and hiding the tooltip\n */\n_transformOrigin: string = 'bottom';\n/**\n * Subject for notifying that the tooltip has been hidden from the view\n */\nprivate _onHide: Subject<any> = new Subject();\n/**\n * @param {?} _dir\n * @param {?} _changeDetectorRef\n */\nconstructor(\nprivate _dir: Directionality,\nprivate _changeDetectorRef: ChangeDetectorRef) {}\n/**\n * Shows the tooltip with an animation originating from the provided origin\n * @param {?} position Position of the tooltip.\n * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n * @return {?}\n */\nshow(position: TooltipPosition, delay: number): void {\n    // Cancel the delayed hide if it is scheduled\n    if (this._hideTimeoutId) {\n      clearTimeout(this._hideTimeoutId);\n    }\n\n    // Body interactions should cancel the tooltip if there is a delay in showing.\n    this._closeOnInteraction = true;\n\n    this._setTransformOrigin(position);\n    this._showTimeoutId = setTimeout(() => {\n      this._visibility = 'visible';\n\n      // If this was set to true immediately, then a body click that triggers show() would\n      // trigger interaction and close the tooltip right after it was displayed.\n      this._closeOnInteraction = false;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n      setTimeout(() => this._closeOnInteraction = true, 0);\n    }, delay);\n  }\n/**\n * Begins the animation to hide the tooltip after the provided delay in ms.\n * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n * @return {?}\n */\nhide(delay: number): void {\n    // Cancel the delayed show if it is scheduled\n    if (this._showTimeoutId) {\n      clearTimeout(this._showTimeoutId);\n    }\n\n    this._hideTimeoutId = setTimeout(() => {\n      this._visibility = 'hidden';\n      this._closeOnInteraction = false;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n/**\n * Returns an observable that notifies when the tooltip has been hidden from view\n * @return {?}\n */\nafterHidden(): Observable<void> {\n    return this._onHide.asObservable();\n  }\n/**\n * Whether the tooltip is being displayed\n * @return {?}\n */\nisVisible(): boolean {\n    return this._visibility === 'visible';\n  }\n/**\n * Sets the tooltip transform origin according to the tooltip position\n * @param {?} value\n * @return {?}\n */\n_setTransformOrigin(value: TooltipPosition) {\n    const /** @type {?} */ isLtr = !this._dir || this._dir.value == 'ltr';\n    switch (value) {\n      case 'before': this._transformOrigin = isLtr ? 'right' : 'left'; break;\n      case 'after':  this._transformOrigin = isLtr ? 'left' : 'right'; break;\n      case 'left':   this._transformOrigin = 'right'; break;\n      case 'right':  this._transformOrigin = 'left'; break;\n      case 'above':  this._transformOrigin = 'bottom'; break;\n      case 'below':  this._transformOrigin = 'top'; break;\n      default: throw getMdTooltipInvalidPositionError(value);\n    }\n  }\n/**\n * @param {?} e\n * @return {?}\n */\n_afterVisibilityAnimation(e: AnimationEvent): void {\n    if (e.toState === 'hidden' && !this.isVisible()) {\n      this._onHide.next();\n    }\n  }\n/**\n * Interactions on the HTML body should close the tooltip immediately as defined in the\n * material design spec.\n * https://material.google.com/components/tooltips.html#tooltips-interaction\n * @return {?}\n */\n_handleBodyInteraction(): void {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n/**\n * Marks that the tooltip needs to be checked in the next change detection run.\n * Mainly used for rendering the initial text before positioning a tooltip, which\n * can be problematic in components with OnPush change detection.\n * @return {?}\n */\n_markForCheck(): void {\n    this._changeDetectorRef.markForCheck();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-tooltip-component, mat-tooltip-component',\n  templateUrl: 'tooltip.html',\n  styleUrls: ['tooltip.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('state', [\n      state('void', style({transform: 'scale(0)'})),\n      state('initial', style({transform: 'scale(0)'})),\n      state('visible', style({transform: 'scale(1)'})),\n      state('hidden', style({transform: 'scale(0)'})),\n      transition('* => visible', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n      transition('* => hidden', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n    ])\n  ],\n  host: {\n    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n    '(body:click)': 'this._handleBodyInteraction()'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Directionality, decorators: [{ type: Optional }, ]},\n{type: ChangeDetectorRef, },\n];\n}\n\nfunction TooltipComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTooltipComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTooltipComponent.ctorParameters;\n/**\n * Message to display in the tooltip\n * @type {?}\n */\nTooltipComponent.prototype.message;\n/**\n * Classes to be added to the tooltip. Supports the same syntax as `ngClass`.\n * @type {?}\n */\nTooltipComponent.prototype.tooltipClass;\n/**\n * The timeout ID of any current timer set to show the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._showTimeoutId;\n/**\n * The timeout ID of any current timer set to hide the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._hideTimeoutId;\n/**\n * Property watched by the animation framework to show or hide the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._visibility;\n/**\n * Whether interactions on the page should close the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._closeOnInteraction;\n/**\n * The transform origin used in the animation for showing and hiding the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._transformOrigin;\n/**\n * Subject for notifying that the tooltip has been hidden from the view\n * @type {?}\n */\nTooltipComponent.prototype._onHide;\n/** @type {?} */\nTooltipComponent.prototype._dir;\n/** @type {?} */\nTooltipComponent.prototype._changeDetectorRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';\nimport {CommonModule} from '@angular/common';\nimport {MdCommonModule, GestureConfig, StyleModule} from '../core';\nimport {MdSlider} from './slider';\nimport {BidiModule} from '../core/bidi/index';\nexport class MdSliderModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule, MdCommonModule, StyleModule, BidiModule],\n  exports: [MdSlider, MdCommonModule],\n  declarations: [MdSlider],\n  providers: [{provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig}]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdSliderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSliderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSliderModule.ctorParameters;\n}\n\n\n\nexport {MD_SLIDER_VALUE_ACCESSOR,MdSliderChange,MdSliderBase,_MdSliderMixinBase,MdSlider} from './slider';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  Renderer2,\n  ViewEncapsulation,\n  ViewChild,\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  DOWN_ARROW,\n  END,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport {HammerInput} from '../core';\nimport {FocusOrigin, FocusOriginMonitor} from '../core/style/focus-origin-monitor';\nimport {CanDisable, mixinDisabled} from '../core/common-behaviors/disabled';\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/**\n * The thumb gap size for a disabled slider.\n */\nconst DISABLED_THUMB_GAP = 7;\n/**\n * The thumb gap size for a non-active slider at its minimum value.\n */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/**\n * The thumb gap size for an active slider at its minimum value.\n */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows md-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n */\nexport const MD_SLIDER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MdSlider),\n  multi: true\n};\n/**\n * A simple change event emitted by the MdSlider component.\n */\nexport class MdSliderChange {\n/**\n * The MdSlider that changed.\n */\nsource: MdSlider;\n/**\n * The new value of the source slider.\n */\nvalue: number | null;\n}\n\nfunction MdSliderChange_tsickle_Closure_declarations() {\n/**\n * The MdSlider that changed.\n * @type {?}\n */\nMdSliderChange.prototype.source;\n/**\n * The new value of the source slider.\n * @type {?}\n */\nMdSliderChange.prototype.value;\n}\n\n/**\n * \\@docs-private\n */\nexport class MdSliderBase { }\nexport const /** @type {?} */ _MdSliderMixinBase = mixinDisabled(MdSliderBase);\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nexport class MdSlider extends _MdSliderMixinBase\n    implements ControlValueAccessor, OnDestroy, CanDisable {\n/**\n * Whether the slider is inverted.\n * @return {?}\n */\nget invert() { return this._invert; }\n/**\n * @param {?} value\n * @return {?}\n */\nset invert(value: any) {\n    this._invert = coerceBooleanProperty(value);\n  }\nprivate _invert = false;\n/**\n * The maximum value that the slider can have.\n * @return {?}\n */\nget max() { return this._max; }\n/**\n * @param {?} v\n * @return {?}\n */\nset max(v: number) {\n    this._max = coerceNumberProperty(v, this._max);\n    this._percent = this._calculatePercentage(this._value);\n\n    // Since this also modifies the percentage, we need to let the change detection know.\n    this._changeDetectorRef.markForCheck();\n  }\nprivate _max: number = 100;\n/**\n * The minimum value that the slider can have.\n * @return {?}\n */\nget min() { return this._min; }\n/**\n * @param {?} v\n * @return {?}\n */\nset min(v: number) {\n    this._min = coerceNumberProperty(v, this._min);\n\n    // If the value wasn't explicitly set by the user, set it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n    this._percent = this._calculatePercentage(this._value);\n\n    // Since this also modifies the percentage, we need to let the change detection know.\n    this._changeDetectorRef.markForCheck();\n  }\nprivate _min: number = 0;\n/**\n * The values at which the thumb will snap.\n * @return {?}\n */\nget step() { return this._step; }\n/**\n * @param {?} v\n * @return {?}\n */\nset step(v) {\n    this._step = coerceNumberProperty(v, this._step);\n\n    if (this._step % 1 !== 0) {\n      this._roundLabelTo = /** @type {?} */(( this._step.toString().split('.').pop())).length;\n    }\n\n    // Since this could modify the label, we need to notify the change detection.\n    this._changeDetectorRef.markForCheck();\n  }\nprivate _step: number = 1;\n/**\n * Whether or not to show the thumb label.\n * @return {?}\n */\nget thumbLabel(): boolean { return this._thumbLabel; }\n/**\n * @param {?} value\n * @return {?}\n */\nset thumbLabel(value) { this._thumbLabel = coerceBooleanProperty(value); }\nprivate _thumbLabel: boolean = false;\n/**\n * @deprecated\n * @return {?}\n */\nget _thumbLabelDeprecated(): boolean { return this._thumbLabel; }\n/**\n * @param {?} value\n * @return {?}\n */\nset _thumbLabelDeprecated(value) { this._thumbLabel = value; }\n/**\n * How often to show ticks. Relative to the step so that a tick always appears on a step.\n * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n * @return {?}\n */\nget tickInterval() { return this._tickInterval; }\n/**\n * @param {?} value\n * @return {?}\n */\nset tickInterval(value) {\n    if (value === 'auto') {\n      this._tickInterval = 'auto';\n    } else if (typeof value === 'number' || typeof value === 'string') {\n      this._tickInterval = coerceNumberProperty(value, /** @type {?} */(( this._tickInterval as number)));\n    } else {\n      this._tickInterval = 0;\n    }\n  }\nprivate _tickInterval: 'auto' | number = 0;\n/**\n * @deprecated\n * @return {?}\n */\nget _tickIntervalDeprecated() { return this.tickInterval; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _tickIntervalDeprecated(v) { this.tickInterval = v; }\n/**\n * Value of the slider.\n * @return {?}\n */\nget value() {\n    // If the value needs to be read and it is still uninitialized, initialize it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n    return this._value;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset value(v: number | null) {\n    if (v !== this._value) {\n      this._value = coerceNumberProperty(v, this._value || 0);\n      this._percent = this._calculatePercentage(this._value);\n\n      // Since this also modifies the percentage, we need to let the change detection know.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\nprivate _value: number | null = null;\n/**\n * Whether the slider is vertical.\n * @return {?}\n */\nget vertical() { return this._vertical; }\n/**\n * @param {?} value\n * @return {?}\n */\nset vertical(value: any) {\n    this._vertical = coerceBooleanProperty(value);\n  }\nprivate _vertical = false;\n\n   color: 'primary' | 'accent' | 'warn' = 'accent';\n/**\n * Event emitted when the slider value has changed.\n */\nchange = new EventEmitter<MdSliderChange>();\n/**\n * Event emitted when the slider thumb moves.\n */\ninput = new EventEmitter<MdSliderChange>();\n/**\n * The value to be used for display purposes.\n * @return {?}\n */\nget displayValue(): string | number {\n    // Note that this could be improved further by rounding something like 0.999 to 1 or\n    // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n    // every change detection cycle.\n    if (this._roundLabelTo && this.value && this.value % 1 !== 0) {\n      return this.value.toFixed(this._roundLabelTo);\n    }\n\n    return this.value || 0;\n  }\n/**\n * onTouch function registered via registerOnTouch (ControlValueAccessor).\n */\nonTouched: () => any = () => {};\n/**\n * The percentage of the slider that coincides with the value.\n * @return {?}\n */\nget percent() { return this._clamp(this._percent); }\nprivate _percent: number = 0;\n/**\n * Whether or not the thumb is sliding.\n * Used to determine if there should be a transition for the thumb and fill track.\n */\n_isSliding: boolean = false;\n/**\n * Whether or not the slider is active (clicked or sliding).\n * Used to shrink and grow the thumb as according to the Material Design spec.\n */\n_isActive: boolean = false;\n/**\n * Whether the axis of the slider is inverted.\n * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n * @return {?}\n */\nget _invertAxis() {\n    // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n    // top. However from a y-axis standpoint this is inverted.\n    return this.vertical ? !this.invert : this.invert;\n  }\n/**\n * Whether the slider is at its minimum value.\n * @return {?}\n */\nget _isMinValue() {\n    return this.percent === 0;\n  }\n/**\n * The amount of space to leave between the slider thumb and the track fill & track background\n * elements.\n * @return {?}\n */\nget _thumbGap() {\n    if (this.disabled) {\n      return DISABLED_THUMB_GAP;\n    }\n    if (this._isMinValue && !this.thumbLabel) {\n      return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n    }\n    return 0;\n  }\n/**\n * CSS styles for the track background element.\n * @return {?}\n */\nget _trackBackgroundStyles(): { [key: string]: string } {\n    let /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n    let /** @type {?} */ sign = this._invertMouseCoords ? '-' : '';\n    return {\n      'transform': `translate${axis}(${sign}${this._thumbGap}px) scale${axis}(${1 - this.percent})`\n    };\n  }\n/**\n * CSS styles for the track fill element.\n * @return {?}\n */\nget _trackFillStyles(): { [key: string]: string } {\n    let /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n    let /** @type {?} */ sign = this._invertMouseCoords ? '' : '-';\n    return {\n      'transform': `translate${axis}(${sign}${this._thumbGap}px) scale${axis}(${this.percent})`\n    };\n  }\n/**\n * CSS styles for the ticks container element.\n * @return {?}\n */\nget _ticksContainerStyles(): { [key: string]: string } {\n    let /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n    // For a horizontal slider in RTL languages we push the ticks container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n    let /** @type {?} */ sign = !this.vertical && this._direction == 'rtl' ? '' : '-';\n    let /** @type {?} */ offset = this._tickIntervalPercent / 2 * 100;\n    return {\n      'transform': `translate${axis}(${sign}${offset}%)`\n    };\n  }\n/**\n * CSS styles for the ticks element.\n * @return {?}\n */\nget _ticksStyles(): { [key: string]: string } {\n    let /** @type {?} */ tickSize = this._tickIntervalPercent * 100;\n    let /** @type {?} */ backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n    let /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n    // Depending on the direction we pushed the ticks container, push the ticks the opposite\n    // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n    // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n    let /** @type {?} */ sign = !this.vertical && this._direction == 'rtl' ? '-' : '';\n    let /** @type {?} */ rotate = !this.vertical && this._direction == 'rtl' ? ' rotate(180deg)' : '';\n    let /** @type {?} */ styles: { [key: string]: string } = {\n      'backgroundSize': backgroundSize,\n      // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n      'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n    };\n\n    if (this._isMinValue && this._thumbGap) {\n      let /** @type {?} */ side = this.vertical ?\n          (this._invertAxis ? 'Bottom' : 'Top') :\n          (this._invertAxis ? 'Right' : 'Left');\n      styles[`padding${side}`] = `${this._thumbGap}px`;\n    }\n\n    return styles;\n  }\n/**\n * @return {?}\n */\nget _thumbContainerStyles(): { [key: string]: string } {\n    let /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n    // For a horizontal slider in RTL languages we push the thumb container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n    let /** @type {?} */ invertOffset =\n        (this._direction == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n    let /** @type {?} */ offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n    return {\n      'transform': `translate${axis}(-${offset}%)`\n    };\n  }\n/**\n * The size of a tick interval as a percentage of the size of the track.\n */\nprivate _tickIntervalPercent: number = 0;\n/**\n * The dimensions of the slider.\n */\nprivate _sliderDimensions: ClientRect | null = null;\nprivate _controlValueAccessorChangeFn: (value: any) => void = () => {};\n/**\n * Decimal places to round to, based on the step amount.\n */\nprivate _roundLabelTo: number;\n/**\n * The value of the slider when the slide start event fires.\n */\nprivate _valueOnSlideStart: number | null;\n/**\n * Reference to the inner slider wrapper element.\n */\nprivate _sliderWrapper: ElementRef;\n/**\n * Whether mouse events should be converted to a slider position by calculating their distance\n * from the right or bottom edge of the slider as opposed to the top or left.\n * @return {?}\n */\nprivate get _invertMouseCoords() {\n    return (this._direction == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n  }\n/**\n * The language direction for this slider element.\n * @return {?}\n */\nprivate get _direction() {\n    return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n  }\n/**\n * @param {?} renderer\n * @param {?} _elementRef\n * @param {?} _focusOriginMonitor\n * @param {?} _changeDetectorRef\n * @param {?} _dir\n */\nconstructor(renderer: Renderer2,\nprivate _elementRef: ElementRef,\nprivate _focusOriginMonitor: FocusOriginMonitor,\nprivate _changeDetectorRef: ChangeDetectorRef,\nprivate _dir: Directionality) {\n    super();\n    this._focusOriginMonitor\n        .monitor(this._elementRef.nativeElement, renderer, true)\n        .subscribe((origin: FocusOrigin) => this._isActive = !!origin && origin !== 'keyboard');\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._focusOriginMonitor.stopMonitoring(this._elementRef.nativeElement);\n  }\n/**\n * @return {?}\n */\n_onMouseenter() {\n    if (this.disabled) {\n      return;\n    }\n\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_onClick(event: MouseEvent) {\n    if (this.disabled) {\n      return;\n    }\n\n    let /** @type {?} */ oldValue = this.value;\n    this._isSliding = false;\n    this._focusHostElement();\n    this._updateValueFromPosition({x: event.clientX, y: event.clientY});\n\n    /* Emit a change and input event if the value changed. */\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n      this._emitChangeEvent();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_onSlide(event: HammerInput) {\n    if (this.disabled) {\n      return;\n    }\n\n    // The slide start event sometimes fails to fire on iOS, so if we're not already in the sliding\n    // state, call the slide start handler manually.\n    if (!this._isSliding) {\n      this._onSlideStart(null);\n    }\n\n    // Prevent the slide from selecting anything else.\n    event.preventDefault();\n\n    let /** @type {?} */ oldValue = this.value;\n    this._updateValueFromPosition({x: event.center.x, y: event.center.y});\n\n    // Native range elements always emit `input` events when the value changed while sliding.\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_onSlideStart(event: HammerInput | null) {\n    if (this.disabled) {\n      return;\n    }\n\n    // Simulate mouseenter in case this is a mobile device.\n    this._onMouseenter();\n\n    this._isSliding = true;\n    this._focusHostElement();\n    this._valueOnSlideStart = this.value;\n\n    if (event) {\n      this._updateValueFromPosition({x: event.center.x, y: event.center.y});\n      event.preventDefault();\n    }\n  }\n/**\n * @return {?}\n */\n_onSlideEnd() {\n    this._isSliding = false;\n\n    if (this._valueOnSlideStart != this.value) {\n      this._emitChangeEvent();\n    }\n    this._valueOnSlideStart = null;\n  }\n/**\n * @return {?}\n */\n_onFocus() {\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n/**\n * @return {?}\n */\n_onBlur() {\n    this.onTouched();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_onKeydown(event: KeyboardEvent) {\n    if (this.disabled) { return; }\n\n    let /** @type {?} */ oldValue = this.value;\n\n    switch (event.keyCode) {\n      case PAGE_UP:\n        this._increment(10);\n        break;\n      case PAGE_DOWN:\n        this._increment(-10);\n        break;\n      case END:\n        this.value = this.max;\n        break;\n      case HOME:\n        this.value = this.min;\n        break;\n      case LEFT_ARROW:\n        // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n        // inverted slider the thumb moves in that direction. However for a blind user, nothing\n        // about the slider indicates that it is inverted. They will expect left to be decrement,\n        // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n        // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n        // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n        // sighted users, therefore we do not swap the meaning.\n        this._increment(this._direction == 'rtl' ? 1 : -1);\n        break;\n      case UP_ARROW:\n        this._increment(1);\n        break;\n      case RIGHT_ARROW:\n        // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n        this._increment(this._direction == 'rtl' ? -1 : 1);\n        break;\n      case DOWN_ARROW:\n        this._increment(-1);\n        break;\n      default:\n        // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n        // it.\n        return;\n    }\n\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n      this._emitChangeEvent();\n    }\n\n    this._isSliding = true;\n    event.preventDefault();\n  }\n/**\n * @return {?}\n */\n_onKeyup() {\n    this._isSliding = false;\n  }\n/**\n * Increments the slider by the given number of steps (negative number decrements).\n * @param {?} numSteps\n * @return {?}\n */\nprivate _increment(numSteps: number) {\n    this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n  }\n/**\n * Calculate the new value from the new physical location. The value will always be snapped.\n * @param {?} pos\n * @return {?}\n */\nprivate _updateValueFromPosition(pos: {x: number, y: number}) {\n    if (!this._sliderDimensions) {\n      return;\n    }\n\n    let /** @type {?} */ offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n    let /** @type {?} */ size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n    let /** @type {?} */ posComponent = this.vertical ? pos.y : pos.x;\n\n    // The exact value is calculated from the event and used to find the closest snap value.\n    let /** @type {?} */ percent = this._clamp((posComponent - offset) / size);\n    if (this._invertMouseCoords) {\n      percent = 1 - percent;\n    }\n    let /** @type {?} */ exactValue = this._calculateValue(percent);\n\n    // This calculation finds the closest step by finding the closest whole number divisible by the\n    // step relative to the min.\n    let /** @type {?} */ closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n    // The value needs to snap to the min and max.\n    this.value = this._clamp(closestValue, this.min, this.max);\n  }\n/**\n * Emits a change event if the current value is different from the last emitted value.\n * @return {?}\n */\nprivate _emitChangeEvent() {\n    this._controlValueAccessorChangeFn(this.value);\n    this.change.emit(this._createChangeEvent());\n  }\n/**\n * Emits an input event when the current value is different from the last emitted value.\n * @return {?}\n */\nprivate _emitInputEvent() {\n    this.input.emit(this._createChangeEvent());\n  }\n/**\n * Updates the amount of space between ticks as a percentage of the width of the slider.\n * @return {?}\n */\nprivate _updateTickIntervalPercent() {\n    if (!this.tickInterval || !this._sliderDimensions) {\n      return;\n    }\n\n    if (this.tickInterval == 'auto') {\n      let /** @type {?} */ trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n      let /** @type {?} */ pixelsPerStep = trackSize * this.step / (this.max - this.min);\n      let /** @type {?} */ stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n      let /** @type {?} */ pixelsPerTick = stepsPerTick * this.step;\n      this._tickIntervalPercent = pixelsPerTick / trackSize;\n    } else {\n      this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n    }\n  }\n/**\n * Creates a slider change object from the specified value.\n * @param {?=} value\n * @return {?}\n */\nprivate _createChangeEvent(value = this.value): MdSliderChange {\n    let /** @type {?} */ event = new MdSliderChange();\n\n    event.source = this;\n    event.value = value;\n\n    return event;\n  }\n/**\n * Calculates the percentage of the slider that a value is.\n * @param {?} value\n * @return {?}\n */\nprivate _calculatePercentage(value: number | null) {\n    return ((value || 0) - this.min) / (this.max - this.min);\n  }\n/**\n * Calculates the value a percentage of the slider corresponds to.\n * @param {?} percentage\n * @return {?}\n */\nprivate _calculateValue(percentage: number) {\n    return this.min + percentage * (this.max - this.min);\n  }\n/**\n * Return a number between two numbers.\n * @param {?} value\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nprivate _clamp(value: number, min = 0, max = 1) {\n    return Math.max(min, Math.min(value, max));\n  }\n/**\n * Get the bounding client rect of the slider track element.\n * The track is used rather than the native element to ignore the extra space that the thumb can\n * take up.\n * @return {?}\n */\nprivate _getSliderDimensions() {\n    return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n  }\n/**\n * Focuses the native element.\n * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n * @return {?}\n */\nprivate _focusHostElement() {\n    this._elementRef.nativeElement.focus();\n  }\n/**\n * Sets the model value. Implemented as part of ControlValueAccessor.\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any) {\n    this.value = value;\n  }\n/**\n * Registers a callback to eb triggered when the value has changed.\n * Implemented as part of ControlValueAccessor.\n * @param {?} fn Callback to be registered.\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n/**\n * Registers a callback to be triggered when the component is touched.\n * Implemented as part of ControlValueAccessor.\n * @param {?} fn Callback to be registered.\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n/**\n * Sets whether the component should be disabled.\n * Implemented as part of ControlValueAccessor.\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-slider, mat-slider',\n  providers: [MD_SLIDER_VALUE_ACCESSOR],\n  host: {\n    '(focus)': '_onFocus()',\n    '(blur)': '_onBlur()',\n    '(click)': '_onClick($event)',\n    '(keydown)': '_onKeydown($event)',\n    '(keyup)': '_onKeyup()',\n    '(mouseenter)': '_onMouseenter()',\n    '(slide)': '_onSlide($event)',\n    '(slideend)': '_onSlideEnd()',\n    '(slidestart)': '_onSlideStart($event)',\n    'class': 'mat-slider',\n    'role': 'slider',\n    'tabindex': '0',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuemin]': 'min',\n    '[attr.aria-valuenow]': 'value',\n    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n    '[class.mat-primary]': 'color == \"primary\"',\n    '[class.mat-accent]': 'color != \"primary\" && color != \"warn\"',\n    '[class.mat-warn]': 'color == \"warn\"',\n    '[class.mat-slider-disabled]': 'disabled',\n    '[class.mat-slider-has-ticks]': 'tickInterval',\n    '[class.mat-slider-horizontal]': '!vertical',\n    '[class.mat-slider-axis-inverted]': '_invertAxis',\n    '[class.mat-slider-sliding]': '_isSliding',\n    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n    '[class.mat-slider-vertical]': 'vertical',\n    '[class.mat-slider-min-value]': '_isMinValue',\n    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n  },\n  templateUrl: 'slider.html',\n  styleUrls: ['slider.css'],\n  inputs: ['disabled'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: FocusOriginMonitor, },\n{type: ChangeDetectorRef, },\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'invert': [{ type: Input },],\n'max': [{ type: Input },],\n'min': [{ type: Input },],\n'step': [{ type: Input },],\n'thumbLabel': [{ type: Input },],\n'_thumbLabelDeprecated': [{ type: Input, args: ['thumb-label', ] },],\n'tickInterval': [{ type: Input },],\n'_tickIntervalDeprecated': [{ type: Input, args: ['tick-interval', ] },],\n'value': [{ type: Input },],\n'vertical': [{ type: Input },],\n'color': [{ type: Input },],\n'change': [{ type: Output },],\n'input': [{ type: Output },],\n'_sliderWrapper': [{ type: ViewChild, args: ['sliderWrapper', ] },],\n};\n}\n\nfunction MdSlider_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSlider.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSlider.ctorParameters;\n/** @type {?} */\nMdSlider.propDecorators;\n/** @type {?} */\nMdSlider.prototype._invert;\n/** @type {?} */\nMdSlider.prototype._max;\n/** @type {?} */\nMdSlider.prototype._min;\n/** @type {?} */\nMdSlider.prototype._step;\n/** @type {?} */\nMdSlider.prototype._thumbLabel;\n/** @type {?} */\nMdSlider.prototype._tickInterval;\n/** @type {?} */\nMdSlider.prototype._value;\n/** @type {?} */\nMdSlider.prototype._vertical;\n/** @type {?} */\nMdSlider.prototype.color;\n/**\n * Event emitted when the slider value has changed.\n * @type {?}\n */\nMdSlider.prototype.change;\n/**\n * Event emitted when the slider thumb moves.\n * @type {?}\n */\nMdSlider.prototype.input;\n/**\n * onTouch function registered via registerOnTouch (ControlValueAccessor).\n * @type {?}\n */\nMdSlider.prototype.onTouched;\n/** @type {?} */\nMdSlider.prototype._percent;\n/**\n * Whether or not the thumb is sliding.\n * Used to determine if there should be a transition for the thumb and fill track.\n * @type {?}\n */\nMdSlider.prototype._isSliding;\n/**\n * Whether or not the slider is active (clicked or sliding).\n * Used to shrink and grow the thumb as according to the Material Design spec.\n * @type {?}\n */\nMdSlider.prototype._isActive;\n/**\n * The size of a tick interval as a percentage of the size of the track.\n * @type {?}\n */\nMdSlider.prototype._tickIntervalPercent;\n/**\n * The dimensions of the slider.\n * @type {?}\n */\nMdSlider.prototype._sliderDimensions;\n/** @type {?} */\nMdSlider.prototype._controlValueAccessorChangeFn;\n/**\n * Decimal places to round to, based on the step amount.\n * @type {?}\n */\nMdSlider.prototype._roundLabelTo;\n/**\n * The value of the slider when the slide start event fires.\n * @type {?}\n */\nMdSlider.prototype._valueOnSlideStart;\n/**\n * Reference to the inner slider wrapper element.\n * @type {?}\n */\nMdSlider.prototype._sliderWrapper;\n/** @type {?} */\nMdSlider.prototype._elementRef;\n/** @type {?} */\nMdSlider.prototype._focusOriginMonitor;\n/** @type {?} */\nMdSlider.prototype._changeDetectorRef;\n/** @type {?} */\nMdSlider.prototype._dir;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MdSelect, MdSelectTrigger, MD_SELECT_SCROLL_STRATEGY_PROVIDER} from './select';\nimport {MdCommonModule, MdOptionModule} from '../core';\nimport {OverlayModule} from '@angular/cdk/overlay';\nexport class MdSelectModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    OverlayModule,\n    MdOptionModule,\n    MdCommonModule,\n  ],\n  exports: [MdSelect, MdSelectTrigger, MdOptionModule, MdCommonModule],\n  declarations: [MdSelect, MdSelectTrigger],\n  providers: [MD_SELECT_SCROLL_STRATEGY_PROVIDER]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdSelectModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSelectModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSelectModule.ctorParameters;\n}\n\n\n\nexport {SELECT_ITEM_HEIGHT,SELECT_PANEL_MAX_HEIGHT,SELECT_MAX_OPTIONS_DISPLAYED,SELECT_TRIGGER_HEIGHT,SELECT_OPTION_HEIGHT_ADJUSTMENT,SELECT_PANEL_PADDING_X,SELECT_PANEL_INDENT_PADDING_X,SELECT_MULTIPLE_PANEL_PADDING_X,SELECT_PANEL_PADDING_Y,SELECT_PANEL_VIEWPORT_PADDING,MD_SELECT_SCROLL_STRATEGY,MD_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,MD_SELECT_SCROLL_STRATEGY_PROVIDER,MdSelectChange,MdSelectBase,_MdSelectMixinBase,MdSelectTrigger,MdSelect} from './select';\nexport {fadeInContent, transformPanel, transformPlaceholder} from './select-animations';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Renderer2,\n  Self,\n  ViewChild,\n  ViewEncapsulation,\n  Directive,\n} from '@angular/core';\nimport {ControlValueAccessor, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {DOWN_ARROW, END, ENTER, HOME, SPACE, UP_ARROW} from '@angular/cdk/keycodes';\nimport {FocusKeyManager} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {filter, startWith} from '@angular/cdk/rxjs';\nimport {\n  ConnectedOverlayDirective,\n  Overlay,\n  RepositionScrollStrategy,\n  // This import is only used to define a generic type. The current TypeScript version incorrectly\n  // considers such imports as unused (https://github.com/Microsoft/TypeScript/issues/14953)\n  // tslint:disable-next-line:no-unused-variable\n  ScrollStrategy,\n  ViewportRuler\n} from '@angular/cdk/overlay';\nimport {merge} from 'rxjs/observable/merge';\nimport {Observable} from 'rxjs/Observable';\nimport {Subscription} from 'rxjs/Subscription';\nimport {fadeInContent, transformPanel, transformPlaceholder} from './select-animations';\nimport {SelectionModel} from '../core/selection/selection';\nimport {getMdSelectDynamicMultipleError, getMdSelectNonArrayValueError} from './select-errors';\nimport {CanColor, mixinColor} from '../core/common-behaviors/color';\nimport {CanDisable, mixinDisabled} from '../core/common-behaviors/disabled';\nimport {MdOptgroup, MdOption, MdOptionSelectionChange} from '../core/option/index';\nimport {\n  FloatPlaceholderType,\n  MD_PLACEHOLDER_GLOBAL_OPTIONS,\n  PlaceholderOptions\n} from '../core/placeholder/placeholder-options';\nimport {Platform} from '@angular/cdk/platform';\n/**\n * The fixed height of every option element (option, group header etc.).\n */\nexport const SELECT_ITEM_HEIGHT = 48;\n/**\n * The max height of the select's overlay panel\n */\nexport const SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The max number of options visible at once in the select panel.\n */\nexport const SELECT_MAX_OPTIONS_DISPLAYED =\n    Math.floor(SELECT_PANEL_MAX_HEIGHT / SELECT_ITEM_HEIGHT);\n/**\n * The fixed height of the select's trigger element.\n */\nexport const SELECT_TRIGGER_HEIGHT = 30;\n/**\n * Must adjust for the difference in height between the option and the trigger,\n * so the text will align on the y axis.\n */\nexport const SELECT_OPTION_HEIGHT_ADJUSTMENT = (SELECT_ITEM_HEIGHT - SELECT_TRIGGER_HEIGHT) / 2;\n/**\n * The panel's padding on the x-axis\n */\nexport const SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n * \n * (SELECT_PADDING * 1.75) + 20 = 48\n * The padding is multiplied by 1.75 because the checkbox's margin is half the padding, and\n * the browser adds ~4px, because we're using inline elements.\n * The checkbox width is 20px.\n */\nexport const SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.75 + 20;\n/**\n * The panel's padding on the y-axis. This padding indicates there are more\n * options available if you scroll.\n */\nexport const SELECT_PANEL_PADDING_Y = 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Default minimum width of the trigger based on the CSS.\n * Used as a fallback for server-side rendering.\n * \\@docs-private\n */\nconst SELECT_TRIGGER_MIN_WIDTH = 112;\n/**\n * Injection token that determines the scroll handling while a select is open.\n */\nexport const MD_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('md-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nexport function MD_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n/**\n * \\@docs-private\n */\nexport const MD_SELECT_SCROLL_STRATEGY_PROVIDER = {\n  provide: MD_SELECT_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MD_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nexport class MdSelectChange {\n/**\n * @param {?} source\n * @param {?} value\n */\nconstructor(public source: MdSelect,\npublic value: any) { }\n}\n\nfunction MdSelectChange_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSelectChange.prototype.source;\n/** @type {?} */\nMdSelectChange.prototype.value;\n}\n\n/**\n * \\@docs-private\n */\nexport class MdSelectBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\n}\n\nfunction MdSelectBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSelectBase.prototype._renderer;\n/** @type {?} */\nMdSelectBase.prototype._elementRef;\n}\n\nexport const /** @type {?} */ _MdSelectMixinBase = mixinColor(mixinDisabled(MdSelectBase), 'primary');\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nexport class MdSelectTrigger {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-select-trigger, mat-select-trigger'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdSelectTrigger_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSelectTrigger.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSelectTrigger.ctorParameters;\n}\n\nexport class MdSelect extends _MdSelectMixinBase implements AfterContentInit, OnDestroy, OnInit,\n    ControlValueAccessor, CanColor, CanDisable {\n/**\n * Whether or not the overlay panel is open.\n */\nprivate _panelOpen = false;\n/**\n * Subscriptions to option events.\n */\nprivate _optionSubscription: Subscription | null;\n/**\n * Subscription to changes in the option list.\n */\nprivate _changeSubscription: Subscription;\n/**\n * Subscription to tab events while overlay is focused.\n */\nprivate _tabSubscription: Subscription;\n/**\n * Whether filling out the select is required in the form.\n */\nprivate _required: boolean = false;\n/**\n * The scroll position of the overlay panel, calculated to center the selected option.\n */\nprivate _scrollTop = 0;\n/**\n * The placeholder displayed in the trigger of the select.\n */\nprivate _placeholder: string;\n/**\n * Whether the component is in multiple selection mode.\n */\nprivate _multiple: boolean = false;\n/**\n * Deals with the selection logic.\n */\n_selectionModel: SelectionModel<MdOption>;\n/**\n * The animation state of the placeholder.\n */\nprivate _placeholderState = '';\n/**\n * Tab index for the element.\n */\nprivate _tabIndex: number;\n/**\n * Deals with configuring placeholder options\n */\nprivate _placeholderOptions: PlaceholderOptions;\n/**\n * The width of the trigger. Must be saved to set the min width of the overlay panel\n * and the width of the selected value.\n */\n_triggerWidth: number;\n/**\n * Manages keyboard events for options in the panel.\n */\n_keyManager: FocusKeyManager<MdOption>;\n/**\n * The width of the selected option's value. Must be set programmatically\n * to ensure its overflow is clipped, as it's absolutely positioned.\n */\n_selectedValueWidth: number;\n/**\n * View -> model callback called when value changes\n */\n_onChange: (value: any) => void = () => {};\n/**\n * View -> model callback called when select has been touched\n */\n_onTouched = () => {};\n/**\n * The IDs of child options to be passed to the aria-owns attribute.\n */\n_optionIds: string = '';\n/**\n * The value of the select panel's transform-origin property.\n */\n_transformOrigin: string = 'top';\n/**\n * Whether the panel's animation is done.\n */\n_panelDoneAnimating: boolean = false;\n/**\n * Strategy that will be used to handle scrolling while the select panel is open.\n */\n_scrollStrategy = this._scrollStrategyFactory();\n/**\n * The y-offset of the overlay panel in relation to the trigger's top start corner.\n * This must be adjusted to align the selected option text over the trigger text.\n * when the panel opens. Will change based on the y-position of the selected option.\n */\n_offsetY = 0;\n/**\n * This position config ensures that the top \"start\" corner of the overlay\n * is aligned with with the top \"start\" of the origin by default (overlapping\n * the trigger completely). If the panel cannot fit below the trigger, it\n * will fall back to a position above the trigger.\n */\n_positions = [\n    {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n    },\n    {\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'bottom',\n    },\n  ];\n/**\n * Trigger that opens the select.\n */\ntrigger: ElementRef;\n/**\n * Overlay pane containing the options.\n */\noverlayDir: ConnectedOverlayDirective;\n/**\n * All of the defined select options.\n */\noptions: QueryList<MdOption>;\n/**\n * All of the defined groups of options.\n */\noptionGroups: QueryList<MdOptgroup>;\n/**\n * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n */\npanelClass: string|string[]|Set<string>|{[key: string]: any};\n/**\n * User-supplied override of the trigger element.\n */\ncustomTrigger: MdSelectTrigger;\n/**\n * Placeholder to be shown if no value has been selected.\n * @return {?}\n */\nget placeholder() { return this._placeholder; }\n/**\n * @param {?} value\n * @return {?}\n */\nset placeholder(value: string) {\n    this._placeholder = value;\n\n    // Must wait to record the trigger width to ensure placeholder width is included.\n    Promise.resolve(null).then(() => this._setTriggerWidth());\n  }\n/**\n * Whether the component is required.\n * @return {?}\n */\nget required() { return this._required; }\n/**\n * @param {?} value\n * @return {?}\n */\nset required(value: any) { this._required = coerceBooleanProperty(value); }\n/**\n * Whether the user should be allowed to select multiple options.\n * @return {?}\n */\nget multiple(): boolean { return this._multiple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset multiple(value: boolean) {\n    if (this._selectionModel) {\n      throw getMdSelectDynamicMultipleError();\n    }\n\n    this._multiple = coerceBooleanProperty(value);\n  }\n/**\n * Whether to float the placeholder text.\n * @return {?}\n */\nget floatPlaceholder(): FloatPlaceholderType { return this._floatPlaceholder; }\n/**\n * @param {?} value\n * @return {?}\n */\nset floatPlaceholder(value: FloatPlaceholderType) {\n    this._floatPlaceholder = value || this._placeholderOptions.float || 'auto';\n  }\nprivate _floatPlaceholder: FloatPlaceholderType;\n/**\n * Tab index for the select element.\n * @return {?}\n */\nget tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\n/**\n * @param {?} value\n * @return {?}\n */\nset tabIndex(value: number) {\n    if (typeof value !== 'undefined') {\n      this._tabIndex = value;\n    }\n  }\n/**\n * Value of the select control.\n * @return {?}\n */\nget value() { return this._value; }\n/**\n * @param {?} newValue\n * @return {?}\n */\nset value(newValue: any) {\n    this.writeValue(newValue);\n    this._value = newValue;\n  }\nprivate _value: any;\n/**\n * Whether ripples for all options in the select are disabled.\n * @return {?}\n */\nget disableRipple(): boolean { return this._disableRipple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disableRipple(value: boolean) {\n    this._disableRipple = coerceBooleanProperty(value);\n    this._setOptionDisableRipple();\n  }\nprivate _disableRipple: boolean = false;\n/**\n * Aria label of the select. If not specified, the placeholder will be used as label.\n */\nariaLabel: string = '';\n/**\n * Input that can be used to specify the `aria-labelledby` attribute.\n */\nariaLabelledby: string = '';\n/**\n * Combined stream of all of the child options' change events.\n * @return {?}\n */\nget optionSelectionChanges(): Observable<MdOptionSelectionChange> {\n    return merge(...this.options.map(option => option.onSelectionChange));\n  }\n/**\n * Event emitted when the select has been opened.\n */\nonOpen: EventEmitter<void> = new EventEmitter<void>();\n/**\n * Event emitted when the select has been closed.\n */\nonClose: EventEmitter<void> = new EventEmitter<void>();\n/**\n * Event emitted when the selected value has been changed by the user.\n */\nchange: EventEmitter<MdSelectChange> = new EventEmitter<MdSelectChange>();\n/**\n * Event that emits whenever the raw value of the select changes. This is here primarily\n * to facilitate the two-way binding for the `value` input.\n * \\@docs-private\n */\nvalueChange = new EventEmitter<any>();\n/**\n * @param {?} _viewportRuler\n * @param {?} _changeDetectorRef\n * @param {?} _overlay\n * @param {?} _platform\n * @param {?} renderer\n * @param {?} elementRef\n * @param {?} _dir\n * @param {?} _parentForm\n * @param {?} _parentFormGroup\n * @param {?} _control\n * @param {?} tabIndex\n * @param {?} placeholderOptions\n * @param {?} _scrollStrategyFactory\n */\nconstructor(\nprivate _viewportRuler: ViewportRuler,\nprivate _changeDetectorRef: ChangeDetectorRef,\nprivate _overlay: Overlay,\nprivate _platform: Platform,\n    renderer: Renderer2,\n    elementRef: ElementRef,\nprivate _dir: Directionality,\nprivate _parentForm: NgForm,\nprivate _parentFormGroup: FormGroupDirective,\npublic _control: NgControl,\n     tabIndex: string,\n      placeholderOptions: PlaceholderOptions,\nprivate _scrollStrategyFactory) {\n\n    super(renderer, elementRef);\n\n    if (this._control) {\n      this._control.valueAccessor = this;\n    }\n\n    this._tabIndex = parseInt(tabIndex) || 0;\n    this._placeholderOptions = placeholderOptions ? placeholderOptions : {};\n    this.floatPlaceholder = this._placeholderOptions.float || 'auto';\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this._selectionModel = new SelectionModel<MdOption>(this.multiple, undefined, false);\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._initKeyManager();\n\n    this._changeSubscription = startWith.call(this.options.changes, null).subscribe(() => {\n      this._resetOptions();\n\n      // Defer setting the value in order to avoid the \"Expression\n      // has changed after it was checked\" errors from Angular.\n      Promise.resolve().then(() => {\n        this._setSelectionByValue(this._control ? this._control.value : this._value);\n      });\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._dropSubscriptions();\n\n    if (this._changeSubscription) {\n      this._changeSubscription.unsubscribe();\n    }\n\n    if (this._tabSubscription) {\n      this._tabSubscription.unsubscribe();\n    }\n  }\n/**\n * Toggles the overlay panel open or closed.\n * @return {?}\n */\ntoggle(): void {\n    this.panelOpen ? this.close() : this.open();\n  }\n/**\n * Opens the overlay panel.\n * @return {?}\n */\nopen(): void {\n    if (this.disabled || !this.options.length) {\n      return;\n    }\n\n    if (!this._triggerWidth) {\n      this._setTriggerWidth();\n    }\n\n    this._calculateOverlayPosition();\n    this._placeholderState = this._floatPlaceholderState();\n    this._panelOpen = true;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Closes the overlay panel and focuses the host element.\n * @return {?}\n */\nclose(): void {\n    if (this._panelOpen) {\n      this._panelOpen = false;\n\n      if (this._selectionModel.isEmpty()) {\n        this._placeholderState = '';\n      }\n\n      this._changeDetectorRef.markForCheck();\n      this.focus();\n    }\n  }\n/**\n * Sets the select's value. Part of the ControlValueAccessor interface\n * required to integrate with Angular's core forms API.\n * \n * @param {?} value New value to be written to the model.\n * @return {?}\n */\nwriteValue(value: any): void {\n    if (this.options) {\n      this._setSelectionByValue(value);\n    }\n  }\n/**\n * Saves a callback function to be invoked when the select's value\n * changes from user input. Part of the ControlValueAccessor interface\n * required to integrate with Angular's core forms API.\n * \n * @param {?} fn Callback to be triggered when the value changes.\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => void): void {\n    this._onChange = fn;\n  }\n/**\n * Saves a callback function to be invoked when the select is blurred\n * by the user. Part of the ControlValueAccessor interface required\n * to integrate with Angular's core forms API.\n * \n * @param {?} fn Callback to be triggered when the component has been touched.\n * @return {?}\n */\nregisterOnTouched(fn: () => {}): void {\n    this._onTouched = fn;\n  }\n/**\n * Disables the select. Part of the ControlValueAccessor interface required\n * to integrate with Angular's core forms API.\n * \n * @param {?} isDisabled Sets whether the component is disabled.\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Whether or not the overlay panel is open.\n * @return {?}\n */\nget panelOpen(): boolean {\n    return this._panelOpen;\n  }\n/**\n * The currently selected option.\n * @return {?}\n */\nget selected(): MdOption | MdOption[] {\n    return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n  }\n/**\n * The value displayed in the trigger.\n * @return {?}\n */\nget triggerValue(): string {\n    if (this._multiple) {\n      let /** @type {?} */ selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n\n      if (this._isRtl()) {\n        selectedOptions.reverse();\n      }\n\n      // TODO(crisbeto): delimiter should be configurable for proper localization.\n      return selectedOptions.join(', ');\n    }\n\n    return this._selectionModel.selected[0].viewValue;\n  }\n/**\n * Whether the element is in RTL mode.\n * @return {?}\n */\n_isRtl(): boolean {\n    return this._dir ? this._dir.value === 'rtl' : false;\n  }\n/**\n * Sets the width of the trigger element. This is necessary to match\n * the overlay width to the trigger width.\n * @return {?}\n */\nprivate _setTriggerWidth(): void {\n    this._triggerWidth = this._platform.isBrowser ? this._getTriggerRect().width :\n        SELECT_TRIGGER_MIN_WIDTH;\n\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Handles the keyboard interactions of a closed select.\n * @param {?} event\n * @return {?}\n */\n_handleClosedKeydown(event: KeyboardEvent): void {\n    if (!this.disabled) {\n      if (event.keyCode === ENTER || event.keyCode === SPACE) {\n        event.preventDefault(); // prevents the page from scrolling down when pressing space\n        this.open();\n      } else if (event.keyCode === UP_ARROW || event.keyCode === DOWN_ARROW) {\n        this._handleArrowKey(event);\n      }\n    }\n  }\n/**\n * Handles keypresses inside the panel.\n * @param {?} event\n * @return {?}\n */\n_handlePanelKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === HOME || event.keyCode === END) {\n      event.preventDefault();\n      event.keyCode === HOME ? this._keyManager.setFirstItemActive() :\n                               this._keyManager.setLastItemActive();\n    } else {\n      this._keyManager.onKeydown(event);\n    }\n  }\n/**\n * When the panel element is finished transforming in (though not fading in), it\n * emits an event and focuses an option if the panel is open.\n * @return {?}\n */\n_onPanelDone(): void {\n    if (this.panelOpen) {\n      this._focusCorrectOption();\n      this.onOpen.emit();\n    } else {\n      this.onClose.emit();\n      this._panelDoneAnimating = false;\n      this.overlayDir.offsetX = 0;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * When the panel content is done fading in, the _panelDoneAnimating property is\n * set so the proper class can be added to the panel.\n * @return {?}\n */\n_onFadeInDone(): void {\n    this._panelDoneAnimating = this.panelOpen;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n * \"blur\" to the panel when it opens, causing a false positive.\n * @return {?}\n */\n_onBlur() {\n    if (!this.disabled && !this.panelOpen) {\n      this._onTouched();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * Callback that is invoked when the overlay panel has been attached.\n * @return {?}\n */\n_onAttached(): void {\n    this._calculateOverlayOffsetX();\n    this._setScrollTop();\n  }\n/**\n * Whether the select has a value.\n * @return {?}\n */\n_hasValue(): boolean {\n    return this._selectionModel && this._selectionModel.hasValue();\n  }\n/**\n * Whether the select is in an error state.\n * @return {?}\n */\n_isErrorState(): boolean {\n    const /** @type {?} */ isInvalid = this._control && this._control.invalid;\n    const /** @type {?} */ isTouched = this._control && this._control.touched;\n    const /** @type {?} */ isSubmitted = (this._parentFormGroup && this._parentFormGroup.submitted) ||\n        (this._parentForm && this._parentForm.submitted);\n\n    return !!(isInvalid && (isTouched || isSubmitted));\n  }\n/**\n * Sets the scroll position of the scroll container. This must be called after\n * the overlay pane is attached or the scroll container element will not yet be\n * present in the DOM.\n * @return {?}\n */\nprivate _setScrollTop(): void {\n    const /** @type {?} */ scrollContainer =\n        this.overlayDir.overlayRef.overlayElement.querySelector('.mat-select-panel'); /** @type {?} */((\n    scrollContainer)).scrollTop = this._scrollTop;\n  }\n/**\n * Sets the selected option based on a value. If no option can be\n * found with the designated value, the select trigger is cleared.\n * @param {?} value\n * @param {?=} isUserInput\n * @return {?}\n */\nprivate _setSelectionByValue(value: any | any[], isUserInput = false): void {\n    const /** @type {?} */ isArray = Array.isArray(value);\n\n    if (this.multiple && value && !isArray) {\n      throw getMdSelectNonArrayValueError();\n    }\n\n    this._clearSelection();\n\n    if (isArray) {\n      value.forEach((currentValue: any) => this._selectValue(currentValue, isUserInput));\n      this._sortValues();\n    } else {\n      const /** @type {?} */ correspondingOption = this._selectValue(value, isUserInput);\n\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\n      // mode, because we don't know what option the user interacted with last.\n      if (correspondingOption) {\n        this._keyManager.setActiveItem(this.options.toArray().indexOf(correspondingOption));\n      }\n    }\n\n    this._setValueWidth();\n\n    if (this._selectionModel.isEmpty()) {\n      this._placeholderState = '';\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Finds and selects and option based on its value.\n * @param {?} value\n * @param {?=} isUserInput\n * @return {?} Option that has the corresponding value.\n */\nprivate _selectValue(value: any, isUserInput = false): MdOption | undefined {\n    let /** @type {?} */ correspondingOption = this.options.find(option => {\n      return option.value != null && option.value === value;\n    });\n\n    if (correspondingOption) {\n      isUserInput ? correspondingOption._selectViaInteraction() : correspondingOption.select();\n      this._selectionModel.select(correspondingOption);\n    }\n\n    return correspondingOption;\n  }\n/**\n * Clears the select trigger and deselects every option in the list.\n * @param {?=} skip Option that should not be deselected.\n * @return {?}\n */\nprivate _clearSelection(skip?: MdOption): void {\n    this._selectionModel.clear();\n    this.options.forEach(option => {\n      if (option !== skip) {\n        option.deselect();\n      }\n    });\n  }\n/**\n * @return {?}\n */\nprivate _getTriggerRect(): ClientRect {\n    return this.trigger.nativeElement.getBoundingClientRect();\n  }\n/**\n * Sets up a key manager to listen to keyboard events on the overlay panel.\n * @return {?}\n */\nprivate _initKeyManager() {\n    this._keyManager = new FocusKeyManager<MdOption>(this.options).withTypeAhead();\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.close());\n  }\n/**\n * Drops current option subscriptions and IDs and resets from scratch.\n * @return {?}\n */\nprivate _resetOptions(): void {\n    this._dropSubscriptions();\n    this._listenToOptions();\n    this._setOptionIds();\n    this._setOptionMultiple();\n    this._setOptionDisableRipple();\n  }\n/**\n * Listens to user-generated selection events on each option.\n * @return {?}\n */\nprivate _listenToOptions(): void {\n    this._optionSubscription = filter.call(this.optionSelectionChanges,\n      event => event.isUserInput).subscribe(event => {\n        this._onSelect(event.source);\n        this._setValueWidth();\n\n        if (!this.multiple) {\n          this.close();\n        }\n      });\n  }\n/**\n * Invoked when an option is clicked.\n * @param {?} option\n * @return {?}\n */\nprivate _onSelect(option: MdOption): void {\n    const /** @type {?} */ wasSelected = this._selectionModel.isSelected(option);\n\n    // TODO(crisbeto): handle blank/null options inside multi-select.\n    if (this.multiple) {\n      this._selectionModel.toggle(option);\n      wasSelected ? option.deselect() : option.select();\n      this._sortValues();\n    } else {\n      this._clearSelection(option.value == null ? undefined : option);\n\n      if (option.value == null) {\n        this._propagateChanges(option.value);\n      } else {\n        this._selectionModel.select(option);\n      }\n    }\n\n    if (wasSelected !== this._selectionModel.isSelected(option)) {\n      this._propagateChanges();\n    }\n  }\n/**\n * Sorts the model values, ensuring that they keep the same\n * order that they have in the panel.\n * @return {?}\n */\nprivate _sortValues(): void {\n    if (this._multiple) {\n      this._selectionModel.clear();\n\n      this.options.forEach(option => {\n        if (option.selected) {\n          this._selectionModel.select(option);\n        }\n      });\n    }\n  }\n/**\n * Unsubscribes from all option subscriptions.\n * @return {?}\n */\nprivate _dropSubscriptions(): void {\n    if (this._optionSubscription) {\n      this._optionSubscription.unsubscribe();\n      this._optionSubscription = null;\n    }\n  }\n/**\n * Emits change event to set the model value.\n * @param {?=} fallbackValue\n * @return {?}\n */\nprivate _propagateChanges(fallbackValue?: any): void {\n    let /** @type {?} */ valueToEmit: any = null;\n\n    if (Array.isArray(this.selected)) {\n      valueToEmit = this.selected.map(option => option.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : fallbackValue;\n    }\n\n    this._value = valueToEmit;\n    this._onChange(valueToEmit);\n    this.change.emit(new MdSelectChange(this, valueToEmit));\n    this.valueChange.emit(valueToEmit);\n  }\n/**\n * Records option IDs to pass to the aria-owns property.\n * @return {?}\n */\nprivate _setOptionIds() {\n    this._optionIds = this.options.map(option => option.id).join(' ');\n  }\n/**\n * Sets the `multiple` property on each option. The promise is necessary\n * in order to avoid Angular errors when modifying the property after init.\n * @return {?}\n */\nprivate _setOptionMultiple() {\n    if (this.multiple) {\n      Promise.resolve(null).then(() => {\n        this.options.forEach(option => option.multiple = this.multiple);\n      });\n    }\n  }\n/**\n * Sets the `disableRipple` property on each option.\n * @return {?}\n */\nprivate _setOptionDisableRipple() {\n    if (this.options) {\n      this.options.forEach(option => option.disableRipple = this.disableRipple);\n    }\n  }\n/**\n * Must set the width of the selected option's value programmatically\n * because it is absolutely positioned and otherwise will not clip\n * overflow. The selection arrow is 9px wide, add 4px of padding = 13\n * @return {?}\n */\nprivate _setValueWidth() {\n    this._selectedValueWidth = this._triggerWidth - 13;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Focuses the selected item. If no option is selected, it will focus\n * the first item instead.\n * @return {?}\n */\nprivate _focusCorrectOption(): void {\n    if (this._selectionModel.isEmpty()) {\n      this._keyManager.setFirstItemActive();\n    } else {\n      this._keyManager.setActiveItem( /** @type {?} */((this._getOptionIndex(this._selectionModel.selected[0]))));\n    }\n  }\n/**\n * Focuses the select element.\n * @return {?}\n */\nfocus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n/**\n * Gets the index of the provided option in the option list.\n * @param {?} option\n * @return {?}\n */\nprivate _getOptionIndex(option: MdOption): number | undefined {\n    return this.options.reduce((result: number, current: MdOption, index: number) => {\n      return result === undefined ? (option === current ? index : undefined) : result;\n    }, undefined);\n  }\n/**\n * Calculates the scroll position and x- and y-offsets of the overlay panel.\n * @return {?}\n */\nprivate _calculateOverlayPosition(): void {\n    const /** @type {?} */ items = this._getItemCount();\n    const /** @type {?} */ panelHeight = Math.min(items * SELECT_ITEM_HEIGHT, SELECT_PANEL_MAX_HEIGHT);\n    const /** @type {?} */ scrollContainerHeight = items * SELECT_ITEM_HEIGHT;\n\n    // The farthest the panel can be scrolled before it hits the bottom\n    const /** @type {?} */ maxScroll = scrollContainerHeight - panelHeight;\n\n    if (this._hasValue()) {\n      let /** @type {?} */ selectedOptionOffset = /** @type {?} */(( this._getOptionIndex(this._selectionModel.selected[0])));\n\n      selectedOptionOffset += this._getLabelCountBeforeOption(selectedOptionOffset);\n\n      // We must maintain a scroll buffer so the selected option will be scrolled to the\n      // center of the overlay panel rather than the top.\n      const /** @type {?} */ scrollBuffer = panelHeight / 2;\n      this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n      this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n    } else {\n      // If no option is selected, the panel centers on the first option. In this case,\n      // we must only adjust for the height difference between the option element\n      // and the trigger element, then multiply it by -1 to ensure the panel moves\n      // in the correct direction up the page.\n      this._offsetY = (SELECT_ITEM_HEIGHT - SELECT_TRIGGER_HEIGHT) / 2 * -1 -\n          (this._getLabelCountBeforeOption(0) * SELECT_ITEM_HEIGHT);\n    }\n\n    this._checkOverlayWithinViewport(maxScroll);\n  }\n/**\n * Calculates the scroll position of the select's overlay panel.\n * \n * Attempts to center the selected option in the panel. If the option is\n * too high or too low in the panel to be scrolled to the center, it clamps the\n * scroll position to the min or max scroll positions respectively.\n * @param {?} selectedIndex\n * @param {?} scrollBuffer\n * @param {?} maxScroll\n * @return {?}\n */\n_calculateOverlayScroll(selectedIndex: number, scrollBuffer: number,\n                          maxScroll: number): number {\n    const /** @type {?} */ optionOffsetFromScrollTop = SELECT_ITEM_HEIGHT * selectedIndex;\n    const /** @type {?} */ halfOptionHeight = SELECT_ITEM_HEIGHT / 2;\n\n    // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n    // scroll container, then subtracts the scroll buffer to scroll the option down to\n    // the center of the overlay panel. Half the option height must be re-added to the\n    // scrollTop so the option is centered based on its middle, not its top edge.\n    const /** @type {?} */ optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n    return clampValue(0, optimalScrollPosition, maxScroll);\n  }\n/**\n * Figures out the appropriate animation state for the placeholder.\n * @return {?}\n */\n_getPlaceholderAnimationState(): string {\n    if (this.floatPlaceholder === 'never') {\n      return '';\n    }\n\n    if (this.floatPlaceholder === 'always') {\n      return this._floatPlaceholderState();\n    }\n\n    return this._placeholderState;\n  }\n/**\n * Determines the CSS `opacity` of the placeholder element.\n * @return {?}\n */\n_getPlaceholderOpacity(): string {\n    return (this.floatPlaceholder !== 'never' || this._selectionModel.isEmpty()) ? '1' : '0';\n  }\n/**\n * Returns the aria-label of the select component.\n * @return {?}\n */\nget _ariaLabel(): string | null {\n    // If an ariaLabelledby value has been set, the select should not overwrite the\n    // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n    return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n  }\n/**\n * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n * This must be adjusted to align the selected option text over the trigger text when\n * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n * can't be calculated until the panel has been attached, because we need to know the\n * content width in order to constrain the panel within the viewport.\n * @return {?}\n */\nprivate _calculateOverlayOffsetX(): void {\n    const /** @type {?} */ overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n    const /** @type {?} */ viewportRect = this._viewportRuler.getViewportRect();\n    const /** @type {?} */ isRtl = this._isRtl();\n    const /** @type {?} */ paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n                                         SELECT_PANEL_PADDING_X * 2;\n    let /** @type {?} */ offsetX: number;\n\n    // Adjust the offset, depending on the option padding.\n    if (this.multiple) {\n      offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n    } else {\n      let /** @type {?} */ selected = this._selectionModel.selected[0] || this.options.first;\n      offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n    }\n\n    // Invert the offset in LTR.\n    if (!isRtl) {\n      offsetX *= -1;\n    }\n\n    // Determine how much the select overflows on each side.\n    const /** @type {?} */ leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n    const /** @type {?} */ rightOverflow = overlayRect.right + offsetX - viewportRect.width\n                          + (isRtl ? 0 : paddingWidth);\n\n    // If the element overflows on either side, reduce the offset to allow it to fit.\n    if (leftOverflow > 0) {\n      offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n    } else if (rightOverflow > 0) {\n      offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n    }\n\n    // Set the offset directly in order to avoid having to go through change detection and\n    // potentially triggering \"changed after it was checked\" errors.\n    this.overlayDir.offsetX = offsetX;\n    this.overlayDir.overlayRef.updatePosition();\n  }\n/**\n * Calculates the y-offset of the select's overlay panel in relation to the\n * top start corner of the trigger. It has to be adjusted in order for the\n * selected option to be aligned over the trigger when the panel opens.\n * @param {?} selectedIndex\n * @param {?} scrollBuffer\n * @param {?} maxScroll\n * @return {?}\n */\nprivate _calculateOverlayOffsetY(selectedIndex: number, scrollBuffer: number,\n                                  maxScroll: number): number {\n    let /** @type {?} */ optionOffsetFromPanelTop: number;\n\n    if (this._scrollTop === 0) {\n      optionOffsetFromPanelTop = selectedIndex * SELECT_ITEM_HEIGHT;\n    } else if (this._scrollTop === maxScroll) {\n      const /** @type {?} */ firstDisplayedIndex = this._getItemCount() - SELECT_MAX_OPTIONS_DISPLAYED;\n      const /** @type {?} */ selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n\n      // Because the panel height is longer than the height of the options alone,\n      // there is always extra padding at the top or bottom of the panel. When\n      // scrolled to the very bottom, this padding is at the top of the panel and\n      // must be added to the offset.\n      optionOffsetFromPanelTop =\n          selectedDisplayIndex * SELECT_ITEM_HEIGHT + SELECT_PANEL_PADDING_Y;\n    } else {\n      // If the option was scrolled to the middle of the panel using a scroll buffer,\n      // its offset will be the scroll buffer minus the half height that was added to\n      // center it.\n      optionOffsetFromPanelTop = scrollBuffer - SELECT_ITEM_HEIGHT / 2;\n    }\n\n    // The final offset is the option's offset from the top, adjusted for the height\n    // difference, multiplied by -1 to ensure that the overlay moves in the correct\n    // direction up the page.\n    return optionOffsetFromPanelTop * -1 - SELECT_OPTION_HEIGHT_ADJUSTMENT;\n  }\n/**\n * Checks that the attempted overlay position will fit within the viewport.\n * If it will not fit, tries to adjust the scroll position and the associated\n * y-offset so the panel can open fully on-screen. If it still won't fit,\n * sets the offset back to 0 to allow the fallback position to take over.\n * @param {?} maxScroll\n * @return {?}\n */\nprivate _checkOverlayWithinViewport(maxScroll: number): void {\n    const /** @type {?} */ viewportRect = this._viewportRuler.getViewportRect();\n    const /** @type {?} */ triggerRect = this._getTriggerRect();\n\n    const /** @type {?} */ topSpaceAvailable = triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n    const /** @type {?} */ bottomSpaceAvailable =\n        viewportRect.height - triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n    const /** @type {?} */ panelHeightTop = Math.abs(this._offsetY);\n    const /** @type {?} */ totalPanelHeight =\n        Math.min(this._getItemCount() * SELECT_ITEM_HEIGHT, SELECT_PANEL_MAX_HEIGHT);\n    const /** @type {?} */ panelHeightBottom = totalPanelHeight - panelHeightTop - triggerRect.height;\n\n    if (panelHeightBottom > bottomSpaceAvailable) {\n      this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n    } else if (panelHeightTop > topSpaceAvailable) {\n     this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n    } else {\n      this._transformOrigin = this._getOriginBasedOnOption();\n    }\n  }\n/**\n * Adjusts the overlay panel up to fit in the viewport.\n * @param {?} panelHeightBottom\n * @param {?} bottomSpaceAvailable\n * @return {?}\n */\nprivate _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n    const /** @type {?} */ distanceBelowViewport = panelHeightBottom - bottomSpaceAvailable;\n\n    // Scrolls the panel up by the distance it was extending past the boundary, then\n    // adjusts the offset by that amount to move the panel up into the viewport.\n    this._scrollTop -= distanceBelowViewport;\n    this._offsetY -= distanceBelowViewport;\n    this._transformOrigin = this._getOriginBasedOnOption();\n\n    // If the panel is scrolled to the very top, it won't be able to fit the panel\n    // by scrolling, so set the offset to 0 to allow the fallback position to take\n    // effect.\n    if (this._scrollTop <= 0) {\n      this._scrollTop = 0;\n      this._offsetY = 0;\n      this._transformOrigin = `50% bottom 0px`;\n    }\n  }\n/**\n * Adjusts the overlay panel down to fit in the viewport.\n * @param {?} panelHeightTop\n * @param {?} topSpaceAvailable\n * @param {?} maxScroll\n * @return {?}\n */\nprivate _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number,\n                           maxScroll: number) {\n    const /** @type {?} */ distanceAboveViewport = panelHeightTop - topSpaceAvailable;\n\n    // Scrolls the panel down by the distance it was extending past the boundary, then\n    // adjusts the offset by that amount to move the panel down into the viewport.\n    this._scrollTop += distanceAboveViewport;\n    this._offsetY += distanceAboveViewport;\n    this._transformOrigin = this._getOriginBasedOnOption();\n\n    // If the panel is scrolled to the very bottom, it won't be able to fit the\n    // panel by scrolling, so set the offset to 0 to allow the fallback position\n    // to take effect.\n    if (this._scrollTop >= maxScroll) {\n      this._scrollTop = maxScroll;\n      this._offsetY = 0;\n      this._transformOrigin = `50% top 0px`;\n      return;\n    }\n  }\n/**\n * Sets the transform origin point based on the selected option.\n * @return {?}\n */\nprivate _getOriginBasedOnOption(): string {\n    const /** @type {?} */ originY =\n        Math.abs(this._offsetY) - SELECT_OPTION_HEIGHT_ADJUSTMENT + SELECT_ITEM_HEIGHT / 2;\n    return `50% ${originY}px 0px`;\n  }\n/**\n * Figures out the floating placeholder state value.\n * @return {?}\n */\nprivate _floatPlaceholderState(): string {\n    return this._isRtl() ? 'floating-rtl' : 'floating-ltr';\n  }\n/**\n * Handles the user pressing the arrow keys on a closed select.\n * @param {?} event\n * @return {?}\n */\nprivate _handleArrowKey(event: KeyboardEvent): void {\n    if (this._multiple) {\n      event.preventDefault();\n      this.open();\n    } else {\n      const /** @type {?} */ prevActiveItem = this._keyManager.activeItem;\n\n      // Cycle though the select options even when the select is closed,\n      // matching the behavior of the native select element.\n      // TODO(crisbeto): native selects also cycle through the options with left/right arrows,\n      // however the key manager only supports up/down at the moment.\n      this._keyManager.onKeydown(event);\n\n      const /** @type {?} */ currentActiveItem = /** @type {?} */(( this._keyManager.activeItem as MdOption));\n\n      if (currentActiveItem !== prevActiveItem) {\n        this._clearSelection();\n        this._setSelectionByValue(currentActiveItem.value, true);\n        this._propagateChanges();\n      }\n    }\n  }\n/**\n * Calculates the amount of items in the select. This includes options and group labels.\n * @return {?}\n */\nprivate _getItemCount(): number {\n    return this.options.length + this.optionGroups.length;\n  }\n/**\n * Calculates the amount of option group labels that precede the specified option.\n * Useful when positioning the panel, because the labels will offset the index of the\n * currently-selected option.\n * @param {?} optionIndex\n * @return {?}\n */\nprivate _getLabelCountBeforeOption(optionIndex: number): number {\n    if (this.optionGroups.length) {\n      let /** @type {?} */ options = this.options.toArray();\n      let /** @type {?} */ groups = this.optionGroups.toArray();\n      let /** @type {?} */ groupCounter = 0;\n\n      for (let /** @type {?} */ i = 0; i < optionIndex + 1; i++) {\n        if (options[i].group && options[i].group === groups[groupCounter]) {\n          groupCounter++;\n        }\n      }\n\n      return groupCounter;\n    }\n\n    return 0;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-select, mat-select',\n  templateUrl: 'select.html',\n  styleUrls: ['select.css'],\n  inputs: ['color', 'disabled'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'role': 'listbox',\n    '[attr.tabindex]': 'tabIndex',\n    '[attr.aria-label]': '_ariaLabel',\n    '[attr.aria-labelledby]': 'ariaLabelledby',\n    '[attr.aria-required]': 'required.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-invalid]': '_isErrorState()',\n    '[attr.aria-owns]': '_optionIds',\n    '[attr.aria-multiselectable]': 'multiple',\n    '[class.mat-select-disabled]': 'disabled',\n    '[class.mat-select-invalid]': '_isErrorState()',\n    '[class.mat-select-required]': 'required',\n    'class': 'mat-select',\n    '(keydown)': '_handleClosedKeydown($event)',\n    '(blur)': '_onBlur()',\n  },\n  animations: [\n    transformPlaceholder,\n    transformPanel,\n    fadeInContent\n  ],\n  exportAs: 'mdSelect',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewportRuler, },\n{type: ChangeDetectorRef, },\n{type: Overlay, },\n{type: Platform, },\n{type: Renderer2, },\n{type: ElementRef, },\n{type: Directionality, decorators: [{ type: Optional }, ]},\n{type: NgForm, decorators: [{ type: Optional }, ]},\n{type: FormGroupDirective, decorators: [{ type: Optional }, ]},\n{type: NgControl, decorators: [{ type: Self }, { type: Optional }, ]},\n{type: undefined, decorators: [{ type: Attribute, args: ['tabindex', ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_PLACEHOLDER_GLOBAL_OPTIONS, ] }, ]},\n{type: undefined, decorators: [{ type: Inject, args: [MD_SELECT_SCROLL_STRATEGY, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'trigger': [{ type: ViewChild, args: ['trigger', ] },],\n'overlayDir': [{ type: ViewChild, args: [ConnectedOverlayDirective, ] },],\n'options': [{ type: ContentChildren, args: [MdOption, { descendants: true }, ] },],\n'optionGroups': [{ type: ContentChildren, args: [MdOptgroup, ] },],\n'panelClass': [{ type: Input },],\n'customTrigger': [{ type: ContentChild, args: [MdSelectTrigger, ] },],\n'placeholder': [{ type: Input },],\n'required': [{ type: Input },],\n'multiple': [{ type: Input },],\n'floatPlaceholder': [{ type: Input },],\n'tabIndex': [{ type: Input },],\n'value': [{ type: Input },],\n'disableRipple': [{ type: Input },],\n'ariaLabel': [{ type: Input, args: ['aria-label', ] },],\n'ariaLabelledby': [{ type: Input, args: ['aria-labelledby', ] },],\n'onOpen': [{ type: Output },],\n'onClose': [{ type: Output },],\n'change': [{ type: Output },],\n'valueChange': [{ type: Output },],\n};\n}\n\nfunction MdSelect_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSelect.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSelect.ctorParameters;\n/** @type {?} */\nMdSelect.propDecorators;\n/**\n * Whether or not the overlay panel is open.\n * @type {?}\n */\nMdSelect.prototype._panelOpen;\n/**\n * Subscriptions to option events.\n * @type {?}\n */\nMdSelect.prototype._optionSubscription;\n/**\n * Subscription to changes in the option list.\n * @type {?}\n */\nMdSelect.prototype._changeSubscription;\n/**\n * Subscription to tab events while overlay is focused.\n * @type {?}\n */\nMdSelect.prototype._tabSubscription;\n/**\n * Whether filling out the select is required in the form.\n * @type {?}\n */\nMdSelect.prototype._required;\n/**\n * The scroll position of the overlay panel, calculated to center the selected option.\n * @type {?}\n */\nMdSelect.prototype._scrollTop;\n/**\n * The placeholder displayed in the trigger of the select.\n * @type {?}\n */\nMdSelect.prototype._placeholder;\n/**\n * Whether the component is in multiple selection mode.\n * @type {?}\n */\nMdSelect.prototype._multiple;\n/**\n * Deals with the selection logic.\n * @type {?}\n */\nMdSelect.prototype._selectionModel;\n/**\n * The animation state of the placeholder.\n * @type {?}\n */\nMdSelect.prototype._placeholderState;\n/**\n * Tab index for the element.\n * @type {?}\n */\nMdSelect.prototype._tabIndex;\n/**\n * Deals with configuring placeholder options\n * @type {?}\n */\nMdSelect.prototype._placeholderOptions;\n/**\n * The width of the trigger. Must be saved to set the min width of the overlay panel\n * and the width of the selected value.\n * @type {?}\n */\nMdSelect.prototype._triggerWidth;\n/**\n * Manages keyboard events for options in the panel.\n * @type {?}\n */\nMdSelect.prototype._keyManager;\n/**\n * The width of the selected option's value. Must be set programmatically\n * to ensure its overflow is clipped, as it's absolutely positioned.\n * @type {?}\n */\nMdSelect.prototype._selectedValueWidth;\n/**\n * View -> model callback called when value changes\n * @type {?}\n */\nMdSelect.prototype._onChange;\n/**\n * View -> model callback called when select has been touched\n * @type {?}\n */\nMdSelect.prototype._onTouched;\n/**\n * The IDs of child options to be passed to the aria-owns attribute.\n * @type {?}\n */\nMdSelect.prototype._optionIds;\n/**\n * The value of the select panel's transform-origin property.\n * @type {?}\n */\nMdSelect.prototype._transformOrigin;\n/**\n * Whether the panel's animation is done.\n * @type {?}\n */\nMdSelect.prototype._panelDoneAnimating;\n/**\n * Strategy that will be used to handle scrolling while the select panel is open.\n * @type {?}\n */\nMdSelect.prototype._scrollStrategy;\n/**\n * The y-offset of the overlay panel in relation to the trigger's top start corner.\n * This must be adjusted to align the selected option text over the trigger text.\n * when the panel opens. Will change based on the y-position of the selected option.\n * @type {?}\n */\nMdSelect.prototype._offsetY;\n/**\n * This position config ensures that the top \"start\" corner of the overlay\n * is aligned with with the top \"start\" of the origin by default (overlapping\n * the trigger completely). If the panel cannot fit below the trigger, it\n * will fall back to a position above the trigger.\n * @type {?}\n */\nMdSelect.prototype._positions;\n/**\n * Trigger that opens the select.\n * @type {?}\n */\nMdSelect.prototype.trigger;\n/**\n * Overlay pane containing the options.\n * @type {?}\n */\nMdSelect.prototype.overlayDir;\n/**\n * All of the defined select options.\n * @type {?}\n */\nMdSelect.prototype.options;\n/**\n * All of the defined groups of options.\n * @type {?}\n */\nMdSelect.prototype.optionGroups;\n/**\n * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n * @type {?}\n */\nMdSelect.prototype.panelClass;\n/**\n * User-supplied override of the trigger element.\n * @type {?}\n */\nMdSelect.prototype.customTrigger;\n/** @type {?} */\nMdSelect.prototype._floatPlaceholder;\n/** @type {?} */\nMdSelect.prototype._value;\n/** @type {?} */\nMdSelect.prototype._disableRipple;\n/**\n * Aria label of the select. If not specified, the placeholder will be used as label.\n * @type {?}\n */\nMdSelect.prototype.ariaLabel;\n/**\n * Input that can be used to specify the `aria-labelledby` attribute.\n * @type {?}\n */\nMdSelect.prototype.ariaLabelledby;\n/**\n * Event emitted when the select has been opened.\n * @type {?}\n */\nMdSelect.prototype.onOpen;\n/**\n * Event emitted when the select has been closed.\n * @type {?}\n */\nMdSelect.prototype.onClose;\n/**\n * Event emitted when the selected value has been changed by the user.\n * @type {?}\n */\nMdSelect.prototype.change;\n/**\n * Event that emits whenever the raw value of the select changes. This is here primarily\n * to facilitate the two-way binding for the `value` input.\n * \\@docs-private\n * @type {?}\n */\nMdSelect.prototype.valueChange;\n/** @type {?} */\nMdSelect.prototype._viewportRuler;\n/** @type {?} */\nMdSelect.prototype._changeDetectorRef;\n/** @type {?} */\nMdSelect.prototype._overlay;\n/** @type {?} */\nMdSelect.prototype._platform;\n/** @type {?} */\nMdSelect.prototype._dir;\n/** @type {?} */\nMdSelect.prototype._parentForm;\n/** @type {?} */\nMdSelect.prototype._parentFormGroup;\n/** @type {?} */\nMdSelect.prototype._control;\n/** @type {?} */\nMdSelect.prototype._scrollStrategyFactory;\n}\n\n/**\n * Clamps a value n between min and max values.\n * @param {?} min\n * @param {?} n\n * @param {?} max\n * @return {?}\n */\nfunction clampValue(min: number, n: number, max: number): number {\n  return Math.min(Math.max(min, n), max);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Constructor} from './constructor';\nimport {ElementRef, Renderer2} from '@angular/core';\n\n/** @docs-private */\nexport interface CanColor {\n  color: ThemePalette;\n}\n\n/** @docs-private */\nexport interface HasRenderer {\n  _renderer: Renderer2;\n  _elementRef: ElementRef;\n}\n\n/** Possible color palette values.  */\nexport type ThemePalette = 'primary' | 'accent' | 'warn' | undefined;\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nexport function mixinColor<T extends Constructor<HasRenderer>>(base: T, defaultColor?: ThemePalette)\n    : Constructor<CanColor> & T {\n  return class extends base {\nprivate _color: ThemePalette;\n/**\n * @return {?}\n */\nget color(): ThemePalette { return this._color; }\n/**\n * @param {?} value\n * @return {?}\n */\nset color(value: ThemePalette) {\n      const /** @type {?} */ colorPalette = value || defaultColor;\n\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._renderer.removeClass(this._elementRef.nativeElement, `mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._renderer.addClass(this._elementRef.nativeElement, `mat-${colorPalette}`);\n        }\n\n        this._color = colorPalette;\n      }\n    }\n/**\n * @param {...?} args\n */\nconstructor(...args: any[]) {\n      super(...args);\n\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\n\n","\n/**\n * Returns an exception to be thrown when attempting to change a s\n * elect's `multiple` option after initialization.\n * \\@docs-private\n * @return {?}\n */\nexport function getMdSelectDynamicMultipleError(): Error {\n  return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nexport function getMdSelectNonArrayValueError(): Error {\n  return Error('Cannot assign truthy non-array value to select in `multiple` mode.');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  animate,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n/**\n * This animation shrinks the placeholder text to 75% of its normal size and translates\n * it to either the top left corner (ltr) or top right corner (rtl) of the trigger,\n * depending on the text direction of the application.\n */\nexport const transformPlaceholder: AnimationTriggerMetadata = trigger('transformPlaceholder', [\n  state('floating-ltr', style({\n    top: '-22px',\n    left: '-2px',\n    transform: 'scale(0.75)'\n  })),\n  state('floating-rtl', style({\n    top: '-22px',\n    left: '2px',\n    transform: 'scale(0.75)'\n  })),\n  transition('* => *', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n]);\n/**\n * This animation transforms the select's overlay panel on and off the page.\n * \n * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n * side to ensure the option text correctly overlaps the trigger text.\n * \n * When the panel is removed from the DOM, it simply fades out linearly.\n */\nexport const transformPanel: AnimationTriggerMetadata = trigger('transformPanel', [\n  state('showing', style({\n    opacity: 1,\n    minWidth: 'calc(100% + 32px)', // 32px = 2 * 16px padding\n    transform: 'scaleY(1)'\n  })),\n  state('showing-multiple', style({\n    opacity: 1,\n    minWidth: 'calc(100% + 64px)', // 64px = 48px padding on the left + 16px padding on the right\n    transform: 'scaleY(1)'\n  })),\n  transition('void => *', [\n    style({\n      opacity: 0,\n      minWidth: '100%',\n      transform: 'scaleY(0)'\n    }),\n    animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n  ]),\n  transition('* => void', [\n    animate('250ms 100ms linear', style({opacity: 0}))\n  ])\n]);\n/**\n * This animation fades in the background color and text content of the\n * select's options. It is time delayed to occur 100ms after the overlay\n * panel has transformed in.\n */\nexport const fadeInContent: AnimationTriggerMetadata = trigger('fadeInContent', [\n  state('showing', style({opacity: 1})),\n  transition('void => showing', [\n    style({opacity: 0}),\n    animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n  ])\n]);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {MdCommonModule} from '../core';\nimport {MdDialog, MD_DIALOG_SCROLL_STRATEGY_PROVIDER} from './dialog';\nimport {MdDialogContainer} from './dialog-container';\nimport {\n  MdDialogClose,\n  MdDialogContent,\n  MdDialogTitle,\n  MdDialogActions\n} from './dialog-content-directives';\nexport class MdDialogModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    OverlayModule,\n    PortalModule,\n    A11yModule,\n    MdCommonModule,\n  ],\n  exports: [\n    MdDialogContainer,\n    MdDialogClose,\n    MdDialogTitle,\n    MdDialogContent,\n    MdDialogActions,\n    MdCommonModule,\n  ],\n  declarations: [\n    MdDialogContainer,\n    MdDialogClose,\n    MdDialogTitle,\n    MdDialogActions,\n    MdDialogContent,\n  ],\n  providers: [\n    MdDialog,\n    MD_DIALOG_SCROLL_STRATEGY_PROVIDER,\n  ],\n  entryComponents: [MdDialogContainer],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdDialogModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDialogModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDialogModule.ctorParameters;\n}\n\n\nexport {MD_DIALOG_DATA,MD_DIALOG_SCROLL_STRATEGY,MD_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,MD_DIALOG_SCROLL_STRATEGY_PROVIDER,MdDialog} from './dialog';\nexport {throwMdDialogContentAlreadyAttachedError,MdDialogContainer} from './dialog-container';\nexport {MdDialogClose,MdDialogTitle,MdDialogContent,MdDialogActions} from './dialog-content-directives';\nexport {DialogRole,DialogPosition,MdDialogConfig} from './dialog-config';\nexport {MdDialogRef} from './dialog-ref';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, Input, OnChanges, OnInit, Optional, SimpleChanges} from '@angular/core';\nimport {MdDialogRef} from './dialog-ref';\nimport {MdDialogContainer} from './dialog-container';\n/**\n * Counter used to generate unique IDs for dialog elements.\n */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nexport class MdDialogClose implements OnChanges {\n/**\n * Screenreader label for the button.\n */\nariaLabel: string = 'Close dialog';\n/**\n * Dialog close input.\n */\ndialogResult: any;\n\n   _matDialogClose: any;\n   _mdDialogClose: any;\n   _matDialogCloseResult: any;\n/**\n * @param {?} dialogRef\n */\nconstructor(public dialogRef: MdDialogRef<any>) { }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    const /** @type {?} */ proxiedChange = changes._matDialogClose || changes._mdDialogClose ||\n        changes._matDialogCloseResult;\n\n    if (proxiedChange) {\n      this.dialogResult = proxiedChange.currentValue;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `button[md-dialog-close], button[mat-dialog-close],\n             button[mdDialogClose], button[matDialogClose]`,\n  host: {\n    '(click)': 'dialogRef.close(dialogResult)',\n    '[attr.aria-label]': 'ariaLabel',\n    'type': 'button', // Prevents accidental form submits.\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdDialogRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ariaLabel': [{ type: Input, args: ['aria-label', ] },],\n'dialogResult': [{ type: Input, args: ['md-dialog-close', ] },],\n'_matDialogClose': [{ type: Input, args: ['matDialogClose', ] },],\n'_mdDialogClose': [{ type: Input, args: ['mdDialogClose', ] },],\n'_matDialogCloseResult': [{ type: Input, args: ['mat-dialog-close', ] },],\n};\n}\n\nfunction MdDialogClose_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDialogClose.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDialogClose.ctorParameters;\n/** @type {?} */\nMdDialogClose.propDecorators;\n/**\n * Screenreader label for the button.\n * @type {?}\n */\nMdDialogClose.prototype.ariaLabel;\n/**\n * Dialog close input.\n * @type {?}\n */\nMdDialogClose.prototype.dialogResult;\n/** @type {?} */\nMdDialogClose.prototype._matDialogClose;\n/** @type {?} */\nMdDialogClose.prototype._mdDialogClose;\n/** @type {?} */\nMdDialogClose.prototype._matDialogCloseResult;\n/** @type {?} */\nMdDialogClose.prototype.dialogRef;\n}\n\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nexport class MdDialogTitle implements OnInit {\n   id = `md-dialog-title-${dialogElementUid++}`;\n/**\n * @param {?} _container\n */\nconstructor(\nprivate _container: MdDialogContainer) { }\n/**\n * @return {?}\n */\nngOnInit() {\n    if (this._container && !this._container._ariaLabelledBy) {\n      Promise.resolve().then(() => this._container._ariaLabelledBy = this.id);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-dialog-title], [mat-dialog-title], [mdDialogTitle], [matDialogTitle]',\n  host: {\n    'class': 'mat-dialog-title',\n    '[id]': 'id',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdDialogContainer, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n};\n}\n\nfunction MdDialogTitle_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDialogTitle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDialogTitle.ctorParameters;\n/** @type {?} */\nMdDialogTitle.propDecorators;\n/** @type {?} */\nMdDialogTitle.prototype.id;\n/** @type {?} */\nMdDialogTitle.prototype._container;\n}\n\n/**\n * Scrollable content container of a dialog.\n */\nexport class MdDialogContent { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `[md-dialog-content], md-dialog-content, [mat-dialog-content], mat-dialog-content,\n             [mdDialogContent], [matDialogContent]`,\n  host: {'class': 'mat-dialog-content'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdDialogContent_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDialogContent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDialogContent.ctorParameters;\n}\n\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nexport class MdDialogActions { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `[md-dialog-actions], md-dialog-actions, [mat-dialog-actions], mat-dialog-actions,\n             [mdDialogActions], [matDialogActions]`,\n  host: {'class': 'mat-dialog-actions'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdDialogActions_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDialogActions.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDialogActions.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ComponentRef,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  Optional,\n  SkipSelf,\n  TemplateRef,\n} from '@angular/core';\nimport {Location} from '@angular/common';\nimport {ComponentPortal, ComponentType, TemplatePortal} from '@angular/cdk/portal';\nimport {\n  BlockScrollStrategy,\n  Overlay,\n  OverlayRef,\n  OverlayState,\n  // This import is only used to define a generic type. The current TypeScript version incorrectly\n  // considers such imports as unused (https://github.com/Microsoft/TypeScript/issues/14953)\n  // tslint:disable-next-line:no-unused-variable\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {ESCAPE} from '@angular/cdk/keycodes';\nimport {startWith} from '@angular/cdk/rxjs';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {defer} from 'rxjs/observable/defer';\nimport {PortalInjector} from '../core/portal/portal-injector';\nimport {extendObject} from '../core/util/object-extend';\nimport {MdDialogConfig} from './dialog-config';\nimport {MdDialogRef} from './dialog-ref';\nimport {MdDialogContainer} from './dialog-container';\n\nexport const /** @type {?} */ MD_DIALOG_DATA = new InjectionToken<any>('MdDialogData');\n/**\n * Injection token that determines the scroll handling while the dialog is open.\n */\nexport const MD_DIALOG_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('md-dialog-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nexport function MD_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => BlockScrollStrategy {\n  return () => overlay.scrollStrategies.block();\n}\n/**\n * \\@docs-private\n */\nexport const MD_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n  provide: MD_DIALOG_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MD_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Service to open Material Design modal dialogs.\n */\nexport class MdDialog {\nprivate _openDialogsAtThisLevel: MdDialogRef<any>[] = [];\nprivate _afterAllClosedAtThisLevel = new Subject<void>();\nprivate _afterOpenAtThisLevel = new Subject<MdDialogRef<any>>();\nprivate _boundKeydown = this._handleKeydown.bind(this);\n/**\n * Keeps track of the currently-open dialogs.\n * @return {?}\n */\nget openDialogs(): MdDialogRef<any>[] {\n    return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n  }\n/**\n * Stream that emits when a dialog has been opened.\n * @return {?}\n */\nget afterOpen(): Subject<MdDialogRef<any>> {\n    return this._parentDialog ? this._parentDialog.afterOpen : this._afterOpenAtThisLevel;\n  }\n/**\n * @return {?}\n */\nget _afterAllClosed() {\n    const /** @type {?} */ parent = this._parentDialog;\n    return parent ? parent._afterAllClosed : this._afterAllClosedAtThisLevel;\n  }\n/**\n * Stream that emits when all open dialog have finished closing.\n * Will emit on subscribe if there are no open dialogs to begin with.\n */\nafterAllClosed: Observable<void> = defer<void>(() => this.openDialogs.length ?\n      this._afterAllClosed :\n      startWith.call(this._afterAllClosed, undefined));\n/**\n * @param {?} _overlay\n * @param {?} _injector\n * @param {?} _scrollStrategy\n * @param {?} _location\n * @param {?} _parentDialog\n */\nconstructor(\nprivate _overlay: Overlay,\nprivate _injector: Injector,\nprivate _scrollStrategy,\nprivate _location: Location,\nprivate _parentDialog: MdDialog) {\n\n    // Close all of the dialogs when the user goes forwards/backwards in history or when the\n    // location hash changes. Note that this usually doesn't include clicking on links (unless\n    // the user is using the `HashLocationStrategy`).\n    if (!_parentDialog && _location) {\n      _location.subscribe(() => this.closeAll());\n    }\n  }\n/**\n * Opens a modal dialog containing the given component.\n * @template T\n * @param {?} componentOrTemplateRef Type of the component to load into the dialog,\n *     or a TemplateRef to instantiate as the dialog content.\n * @param {?=} config Extra configuration options.\n * @return {?} Reference to the newly-opened dialog.\n */\nopen<T>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n          config?: MdDialogConfig): MdDialogRef<T> {\n\n    const /** @type {?} */ inProgressDialog = this.openDialogs.find(dialog => dialog._isAnimating());\n\n    // If there's a dialog that is in the process of being opened, return it instead.\n    if (inProgressDialog) {\n      return inProgressDialog;\n    }\n\n    config = _applyConfigDefaults(config);\n\n    if (config.id && this.getDialogById(config.id)) {\n      throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n    }\n\n    const /** @type {?} */ overlayRef = this._createOverlay(config);\n    const /** @type {?} */ dialogContainer = this._attachDialogContainer(overlayRef, config);\n    const /** @type {?} */ dialogRef =\n        this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n\n    if (!this.openDialogs.length) {\n      document.addEventListener('keydown', this._boundKeydown);\n    }\n\n    this.openDialogs.push(dialogRef);\n    dialogRef.afterClosed().subscribe(() => this._removeOpenDialog(dialogRef));\n    this.afterOpen.next(dialogRef);\n\n    return dialogRef;\n  }\n/**\n * Closes all of the currently-open dialogs.\n * @return {?}\n */\ncloseAll(): void {\n    let /** @type {?} */ i = this.openDialogs.length;\n\n    while (i--) {\n      // The `_openDialogs` property isn't updated after close until the rxjs subscription\n      // runs on the next microtask, in addition to modifying the array as we're going\n      // through it. We loop through all of them and call close without assuming that\n      // they'll be removed from the list instantaneously.\n      this.openDialogs[i].close();\n    }\n  }\n/**\n * Finds an open dialog by its id.\n * @param {?} id ID to use when looking up the dialog.\n * @return {?}\n */\ngetDialogById(id: string): MdDialogRef<any> | undefined {\n    return this.openDialogs.find(dialog => dialog.id === id);\n  }\n/**\n * Creates the overlay into which the dialog will be loaded.\n * @param {?} config The dialog configuration.\n * @return {?} A promise resolving to the OverlayRef for the created overlay.\n */\nprivate _createOverlay(config: MdDialogConfig): OverlayRef {\n    const /** @type {?} */ overlayState = this._getOverlayState(config);\n    return this._overlay.create(overlayState);\n  }\n/**\n * Creates an overlay state from a dialog config.\n * @param {?} dialogConfig The dialog configuration.\n * @return {?} The overlay configuration.\n */\nprivate _getOverlayState(dialogConfig: MdDialogConfig): OverlayState {\n    const /** @type {?} */ overlayState = new OverlayState();\n    overlayState.panelClass = dialogConfig.panelClass;\n    overlayState.hasBackdrop = dialogConfig.hasBackdrop;\n    overlayState.scrollStrategy = this._scrollStrategy();\n    overlayState.direction = dialogConfig.direction;\n    if (dialogConfig.backdropClass) {\n      overlayState.backdropClass = dialogConfig.backdropClass;\n    }\n    overlayState.positionStrategy = this._overlay.position().global();\n\n    return overlayState;\n  }\n/**\n * Attaches an MdDialogContainer to a dialog's already-created overlay.\n * @param {?} overlay Reference to the dialog's underlying overlay.\n * @param {?} config The dialog configuration.\n * @return {?} A promise resolving to a ComponentRef for the attached container.\n */\nprivate _attachDialogContainer(overlay: OverlayRef, config: MdDialogConfig): MdDialogContainer {\n    let /** @type {?} */ containerPortal = new ComponentPortal(MdDialogContainer, config.viewContainerRef);\n    let /** @type {?} */ containerRef: ComponentRef<MdDialogContainer> = overlay.attach(containerPortal);\n    containerRef.instance._config = config;\n\n    return containerRef.instance;\n  }\n/**\n * Attaches the user-provided component to the already-created MdDialogContainer.\n * @template T\n * @param {?} componentOrTemplateRef The type of component being loaded into the dialog,\n *     or a TemplateRef to instantiate as the content.\n * @param {?} dialogContainer Reference to the wrapping MdDialogContainer.\n * @param {?} overlayRef Reference to the overlay in which the dialog resides.\n * @param {?} config The dialog configuration.\n * @return {?} A promise resolving to the MdDialogRef that should be returned to the user.\n */\nprivate _attachDialogContent<T>(\n      componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n      dialogContainer: MdDialogContainer,\n      overlayRef: OverlayRef,\n      config: MdDialogConfig): MdDialogRef<T> {\n\n    // Create a reference to the dialog we're creating in order to give the user a handle\n    // to modify and close it.\n    const /** @type {?} */ dialogRef = new MdDialogRef<T>(overlayRef, dialogContainer, config.id);\n\n    // When the dialog backdrop is clicked, we want to close it.\n    if (config.hasBackdrop) {\n      overlayRef.backdropClick().subscribe(() => {\n        if (!dialogRef.disableClose) {\n          dialogRef.close();\n        }\n      });\n    }\n\n    if (componentOrTemplateRef instanceof TemplateRef) {\n      dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, /** @type {?} */(( null))));\n    } else {\n      const /** @type {?} */ injector = this._createInjector<T>(config, dialogRef, dialogContainer);\n      const /** @type {?} */ contentRef = dialogContainer.attachComponentPortal(\n          new ComponentPortal(componentOrTemplateRef, undefined, injector));\n      dialogRef.componentInstance = contentRef.instance;\n    }\n\n    dialogRef\n      .updateSize(config.width, config.height)\n      .updatePosition(config.position);\n\n    return dialogRef;\n  }\n/**\n * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n * of a dialog to close itself and, optionally, to return a value.\n * @template T\n * @param {?} config Config object that is used to construct the dialog.\n * @param {?} dialogRef Reference to the dialog.\n * @param {?} dialogContainer\n * @return {?} The custom injector that can be used inside the dialog.\n */\nprivate _createInjector<T>(\n      config: MdDialogConfig,\n      dialogRef: MdDialogRef<T>,\n      dialogContainer: MdDialogContainer): PortalInjector {\n\n    const /** @type {?} */ userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const /** @type {?} */ injectionTokens = new WeakMap();\n\n    injectionTokens.set(MdDialogRef, dialogRef);\n    injectionTokens.set(MdDialogContainer, dialogContainer);\n    injectionTokens.set(MD_DIALOG_DATA, config.data);\n\n    return new PortalInjector(userInjector || this._injector, injectionTokens);\n  }\n/**\n * Removes a dialog from the array of open dialogs.\n * @param {?} dialogRef Dialog to be removed.\n * @return {?}\n */\nprivate _removeOpenDialog(dialogRef: MdDialogRef<any>) {\n    const /** @type {?} */ index = this.openDialogs.indexOf(dialogRef);\n\n    if (index > -1) {\n      this.openDialogs.splice(index, 1);\n\n      // no open dialogs are left, call next on afterAllClosed Subject\n      if (!this.openDialogs.length) {\n        this._afterAllClosed.next();\n        document.removeEventListener('keydown', this._boundKeydown);\n      }\n    }\n  }\n/**\n * Handles global key presses while there are open dialogs. Closes the\n * top dialog when the user presses escape.\n * @param {?} event\n * @return {?}\n */\nprivate _handleKeydown(event: KeyboardEvent): void {\n    const /** @type {?} */ topDialog = this.openDialogs[this.openDialogs.length - 1];\n    const /** @type {?} */ canClose = topDialog ? !topDialog.disableClose : false;\n\n    if (event.keyCode === ESCAPE && canClose) {\n      topDialog.close();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n{type: Injector, },\n{type: undefined, decorators: [{ type: Inject, args: [MD_DIALOG_SCROLL_STRATEGY, ] }, ]},\n{type: Location, decorators: [{ type: Optional }, ]},\n{type: MdDialog, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n];\n}\n\nfunction MdDialog_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDialog.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDialog.ctorParameters;\n/** @type {?} */\nMdDialog.prototype._openDialogsAtThisLevel;\n/** @type {?} */\nMdDialog.prototype._afterAllClosedAtThisLevel;\n/** @type {?} */\nMdDialog.prototype._afterOpenAtThisLevel;\n/** @type {?} */\nMdDialog.prototype._boundKeydown;\n/**\n * Stream that emits when all open dialog have finished closing.\n * Will emit on subscribe if there are no open dialogs to begin with.\n * @type {?}\n */\nMdDialog.prototype.afterAllClosed;\n/** @type {?} */\nMdDialog.prototype._overlay;\n/** @type {?} */\nMdDialog.prototype._injector;\n/** @type {?} */\nMdDialog.prototype._scrollStrategy;\n/** @type {?} */\nMdDialog.prototype._location;\n/** @type {?} */\nMdDialog.prototype._parentDialog;\n}\n\n/**\n * Applies default options to the dialog config.\n * @param {?=} config Config to be modified.\n * @return {?} The new configuration object.\n */\nfunction _applyConfigDefaults(config?: MdDialogConfig): MdDialogConfig {\n  return extendObject(new MdDialogConfig(), config);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Component,\n  ComponentRef,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  NgZone,\n  Optional,\n  ChangeDetectorRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {animate, AnimationEvent, state, style, transition, trigger} from '@angular/animations';\nimport {DOCUMENT} from '@angular/platform-browser';\nimport {\n  BasePortalHost,\n  ComponentPortal,\n  PortalHostDirective,\n  TemplatePortal\n} from '@angular/cdk/portal';\nimport {FocusTrap, FocusTrapFactory} from '@angular/cdk/a11y';\nimport {MdDialogConfig} from './dialog-config';\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalHost without an origin.\n * \\@docs-private\n * @return {?}\n */\nexport function throwMdDialogContentAlreadyAttachedError() {\n  throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * \\@docs-private\n */\nexport class MdDialogContainer extends BasePortalHost {\n/**\n * The portal host inside of this container into which the dialog content will be loaded.\n */\n_portalHost: PortalHostDirective;\n/**\n * The class that traps and manages focus within the dialog.\n */\nprivate _focusTrap: FocusTrap;\n/**\n * Element that was focused before the dialog was opened. Save this to restore upon close.\n */\nprivate _elementFocusedBeforeDialogWasOpened: HTMLElement | null = null;\n/**\n * The dialog configuration.\n */\n_config: MdDialogConfig;\n/**\n * State of the dialog animation.\n */\n_state: 'void' | 'enter' | 'exit' = 'enter';\n/**\n * Emits when an animation state changes.\n */\n_animationStateChanged = new EventEmitter<AnimationEvent>();\n/**\n * ID of the element that should be considered as the dialog's label.\n */\n_ariaLabelledBy: string | null = null;\n/**\n * Whether the container is currently mid-animation.\n */\n_isAnimating = false;\n/**\n * @param {?} _ngZone\n * @param {?} _elementRef\n * @param {?} _focusTrapFactory\n * @param {?} _changeDetectorRef\n * @param {?} _document\n */\nconstructor(\nprivate _ngZone: NgZone,\nprivate _elementRef: ElementRef,\nprivate _focusTrapFactory: FocusTrapFactory,\nprivate _changeDetectorRef: ChangeDetectorRef,\nprivate _document: any) {\n\n    super();\n  }\n/**\n * Attach a ComponentPortal as content to this dialog container.\n * @template T\n * @param {?} portal Portal to be attached as the dialog content.\n * @return {?}\n */\nattachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    if (this._portalHost.hasAttached()) {\n      throwMdDialogContentAlreadyAttachedError();\n    }\n\n    this._savePreviouslyFocusedElement();\n    return this._portalHost.attachComponentPortal(portal);\n  }\n/**\n * Attach a TemplatePortal as content to this dialog container.\n * @param {?} portal Portal to be attached as the dialog content.\n * @return {?}\n */\nattachTemplatePortal(portal: TemplatePortal): Map<string, any> {\n    if (this._portalHost.hasAttached()) {\n      throwMdDialogContentAlreadyAttachedError();\n    }\n\n    this._savePreviouslyFocusedElement();\n    return this._portalHost.attachTemplatePortal(portal);\n  }\n/**\n * Moves the focus inside the focus trap.\n * @return {?}\n */\nprivate _trapFocus() {\n    if (!this._focusTrap) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n\n    // If were to attempt to focus immediately, then the content of the dialog would not yet be\n    // ready in instances where change detection has to run first. To deal with this, we simply\n    // wait for the microtask queue to be empty.\n    this._focusTrap.focusInitialElementWhenReady();\n  }\n/**\n * Restores focus to the element that was focused before the dialog opened.\n * @return {?}\n */\nprivate _restoreFocus() {\n    const /** @type {?} */ toFocus = this._elementFocusedBeforeDialogWasOpened;\n\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (toFocus && typeof toFocus.focus === 'function') {\n      toFocus.focus();\n    }\n\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n/**\n * Saves a reference to the element that was focused before the dialog was opened.\n * @return {?}\n */\nprivate _savePreviouslyFocusedElement() {\n    if (this._document) {\n      this._elementFocusedBeforeDialogWasOpened = /** @type {?} */(( this._document.activeElement as HTMLElement));\n    }\n  }\n/**\n * Callback, invoked whenever an animation on the host completes.\n * @param {?} event\n * @return {?}\n */\n_onAnimationDone(event: AnimationEvent) {\n    if (event.toState === 'enter') {\n      this._trapFocus();\n    } else if (event.toState === 'exit') {\n      this._restoreFocus();\n    }\n\n    this._animationStateChanged.emit(event);\n    this._isAnimating = false;\n  }\n/**\n * Callback, invoked when an animation on the host starts.\n * @param {?} event\n * @return {?}\n */\n_onAnimationStart(event: AnimationEvent) {\n    this._isAnimating = true;\n    this._animationStateChanged.emit(event);\n  }\n/**\n * Starts the dialog exit animation.\n * @return {?}\n */\n_startExitAnimation(): void {\n    this._state = 'exit';\n\n    // Mark the container for check so it can react if the\n    // view container is using OnPush change detection.\n    this._changeDetectorRef.markForCheck();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-dialog-container, mat-dialog-container',\n  templateUrl: 'dialog-container.html',\n  styleUrls: ['dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('slideDialog', [\n      // Note: The `enter` animation doesn't transition to something like `translate3d(0, 0, 0)\n      // scale(1)`, because for some reason specifying the transform explicitly, causes IE both\n      // to blur the dialog content and decimate the animation performance. Leaving it as `none`\n      // solves both issues.\n      state('enter', style({ transform: 'none', opacity: 1 })),\n      state('void', style({ transform: 'translate3d(0, 25%, 0) scale(0.9)', opacity: 0 })),\n      state('exit', style({ transform: 'translate3d(0, 25%, 0)', opacity: 0 })),\n      transition('* => *', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n    ])\n  ],\n  host: {\n    'class': 'mat-dialog-container',\n    '[attr.role]': '_config?.role',\n    '[attr.aria-labelledby]': '_ariaLabelledBy',\n    '[attr.aria-describedby]': '_config?.ariaDescribedBy || null',\n    '[@slideDialog]': '_state',\n    '(@slideDialog.start)': '_onAnimationStart($event)',\n    '(@slideDialog.done)': '_onAnimationDone($event)',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n{type: ElementRef, },\n{type: FocusTrapFactory, },\n{type: ChangeDetectorRef, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_portalHost': [{ type: ViewChild, args: [PortalHostDirective, ] },],\n};\n}\n\nfunction MdDialogContainer_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDialogContainer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDialogContainer.ctorParameters;\n/** @type {?} */\nMdDialogContainer.propDecorators;\n/**\n * The portal host inside of this container into which the dialog content will be loaded.\n * @type {?}\n */\nMdDialogContainer.prototype._portalHost;\n/**\n * The class that traps and manages focus within the dialog.\n * @type {?}\n */\nMdDialogContainer.prototype._focusTrap;\n/**\n * Element that was focused before the dialog was opened. Save this to restore upon close.\n * @type {?}\n */\nMdDialogContainer.prototype._elementFocusedBeforeDialogWasOpened;\n/**\n * The dialog configuration.\n * @type {?}\n */\nMdDialogContainer.prototype._config;\n/**\n * State of the dialog animation.\n * @type {?}\n */\nMdDialogContainer.prototype._state;\n/**\n * Emits when an animation state changes.\n * @type {?}\n */\nMdDialogContainer.prototype._animationStateChanged;\n/**\n * ID of the element that should be considered as the dialog's label.\n * @type {?}\n */\nMdDialogContainer.prototype._ariaLabelledBy;\n/**\n * Whether the container is currently mid-animation.\n * @type {?}\n */\nMdDialogContainer.prototype._isAnimating;\n/** @type {?} */\nMdDialogContainer.prototype._ngZone;\n/** @type {?} */\nMdDialogContainer.prototype._elementRef;\n/** @type {?} */\nMdDialogContainer.prototype._focusTrapFactory;\n/** @type {?} */\nMdDialogContainer.prototype._changeDetectorRef;\n/** @type {?} */\nMdDialogContainer.prototype._document;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {OverlayRef, GlobalPositionStrategy} from '@angular/cdk/overlay';\nimport {filter, first, RxChain} from '@angular/cdk/rxjs';\nimport {DialogPosition} from './dialog-config';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {MdDialogContainer} from './dialog-container';\n\n\n// TODO(jelbourn): resizing\n// TODO(jelbourn): afterOpen and beforeClose\n\n// Counter for unique dialog ids.\nlet /** @type {?} */ uniqueId = 0;\n/**\n * Reference to a dialog opened via the MdDialog service.\n */\nexport class MdDialogRef<T> {\n/**\n * The instance of component opened into the dialog.\n */\ncomponentInstance: T;\n/**\n * Whether the user is allowed to close the dialog.\n */\ndisableClose = this._containerInstance._config.disableClose;\n/**\n * Subject for notifying the user that the dialog has finished closing.\n */\nprivate _afterClosed: Subject<any> = new Subject();\n/**\n * Result to be passed to afterClosed.\n */\nprivate _result: any;\n/**\n * @param {?} _overlayRef\n * @param {?} _containerInstance\n * @param {?=} id\n */\nconstructor(\nprivate _overlayRef: OverlayRef,\nprivate _containerInstance: MdDialogContainer,\npublic readonly id: string = `md-dialog-${uniqueId++}`) {\n\n    RxChain.from(_containerInstance._animationStateChanged)\n      .call(filter, event => event.phaseName === 'done' && event.toState === 'exit')\n      .call(first)\n      .subscribe(() => {\n        this._overlayRef.dispose();\n        this._afterClosed.next(this._result);\n        this._afterClosed.complete();\n        this.componentInstance = null!;\n      });\n  }\n/**\n * Close the dialog.\n * @param {?=} dialogResult Optional result to return to the dialog opener.\n * @return {?}\n */\nclose(dialogResult?: any): void {\n    this._result = dialogResult;\n\n    // Transition the backdrop in parallel to the dialog.\n    RxChain.from(this._containerInstance._animationStateChanged)\n      .call(filter, event => event.phaseName === 'start')\n      .call(first)\n      .subscribe(() => this._overlayRef.detachBackdrop());\n\n    this._containerInstance._startExitAnimation();\n  }\n/**\n * Gets an observable that is notified when the dialog is finished closing.\n * @return {?}\n */\nafterClosed(): Observable<any> {\n    return this._afterClosed.asObservable();\n  }\n/**\n * Updates the dialog's position.\n * @param {?=} position New dialog position.\n * @return {?}\n */\nupdatePosition(position?: DialogPosition): this {\n    let /** @type {?} */ strategy = this._getPositionStrategy();\n\n    if (position && (position.left || position.right)) {\n      position.left ? strategy.left(position.left) : strategy.right(position.right);\n    } else {\n      strategy.centerHorizontally();\n    }\n\n    if (position && (position.top || position.bottom)) {\n      position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n    } else {\n      strategy.centerVertically();\n    }\n\n    this._overlayRef.updatePosition();\n\n    return this;\n  }\n/**\n * Updates the dialog's width and height.\n * @param {?=} width New width of the dialog.\n * @param {?=} height New height of the dialog.\n * @return {?}\n */\nupdateSize(width = 'auto', height = 'auto'): this {\n    this._getPositionStrategy().width(width).height(height);\n    this._overlayRef.updatePosition();\n    return this;\n  }\n/**\n * Returns whether the dialog is animating.\n * @return {?}\n */\n_isAnimating(): boolean {\n    return this._containerInstance._isAnimating;\n  }\n/**\n * Fetches the position strategy object from the overlay ref.\n * @return {?}\n */\nprivate _getPositionStrategy(): GlobalPositionStrategy {\n    return /** @type {?} */(( this._overlayRef.getState().positionStrategy as GlobalPositionStrategy));\n  }\n}\n\nfunction MdDialogRef_tsickle_Closure_declarations() {\n/**\n * The instance of component opened into the dialog.\n * @type {?}\n */\nMdDialogRef.prototype.componentInstance;\n/**\n * Whether the user is allowed to close the dialog.\n * @type {?}\n */\nMdDialogRef.prototype.disableClose;\n/**\n * Subject for notifying the user that the dialog has finished closing.\n * @type {?}\n */\nMdDialogRef.prototype._afterClosed;\n/**\n * Result to be passed to afterClosed.\n * @type {?}\n */\nMdDialogRef.prototype._result;\n/** @type {?} */\nMdDialogRef.prototype._overlayRef;\n/** @type {?} */\nMdDialogRef.prototype._containerInstance;\n/** @type {?} */\nMdDialogRef.prototype.id;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ViewContainerRef} from '@angular/core';\nimport {Direction} from '@angular/cdk/bidi';\n\n/** Valid ARIA roles for a dialog element. */\nexport type DialogRole = 'dialog' | 'alertdialog';\n\n/** Possible overrides for a dialog's position. */\nexport interface DialogPosition {\n  top?: string;\n  bottom?: string;\n  left?: string;\n  right?: string;\n}\n/**\n * Configuration for opening a modal dialog with the MdDialog service.\n */\nexport class MdDialogConfig {\n/**\n * Where the attached component should live in Angular's *logical* component tree.\n * This affects what is available for injection and the change detection order for the\n * component instantiated inside of the dialog. This does not affect where the dialog\n * content will be rendered.\n */\nviewContainerRef?: ViewContainerRef;\n/**\n * ID for the dialog. If omitted, a unique one will be generated.\n */\nid?: string;\n/**\n * The ARIA role of the dialog element.\n */\nrole?: DialogRole = 'dialog';\n/**\n * Custom class for the overlay pane.\n */\npanelClass?: string | string[] = '';\n/**\n * Whether the dialog has a backdrop.\n */\nhasBackdrop?: boolean = true;\n/**\n * Custom class for the backdrop,\n */\nbackdropClass?: string = '';\n/**\n * Whether the user can use escape or clicking outside to close a modal.\n */\ndisableClose?: boolean = false;\n/**\n * Width of the dialog.\n */\nwidth?: string = '';\n/**\n * Height of the dialog.\n */\nheight?: string = '';\n/**\n * Position overrides.\n */\nposition?: DialogPosition;\n/**\n * Data being injected into the child component.\n */\ndata?: any = null;\n/**\n * Layout direction for the dialog's content.\n */\ndirection?: Direction = 'ltr';\n/**\n * ID of the element that describes the dialog.\n */\nariaDescribedBy?: string | null = null;\n\n  // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n}\n\nfunction MdDialogConfig_tsickle_Closure_declarations() {\n/**\n * Where the attached component should live in Angular's *logical* component tree.\n * This affects what is available for injection and the change detection order for the\n * component instantiated inside of the dialog. This does not affect where the dialog\n * content will be rendered.\n * @type {?}\n */\nMdDialogConfig.prototype.viewContainerRef;\n/**\n * ID for the dialog. If omitted, a unique one will be generated.\n * @type {?}\n */\nMdDialogConfig.prototype.id;\n/**\n * The ARIA role of the dialog element.\n * @type {?}\n */\nMdDialogConfig.prototype.role;\n/**\n * Custom class for the overlay pane.\n * @type {?}\n */\nMdDialogConfig.prototype.panelClass;\n/**\n * Whether the dialog has a backdrop.\n * @type {?}\n */\nMdDialogConfig.prototype.hasBackdrop;\n/**\n * Custom class for the backdrop,\n * @type {?}\n */\nMdDialogConfig.prototype.backdropClass;\n/**\n * Whether the user can use escape or clicking outside to close a modal.\n * @type {?}\n */\nMdDialogConfig.prototype.disableClose;\n/**\n * Width of the dialog.\n * @type {?}\n */\nMdDialogConfig.prototype.width;\n/**\n * Height of the dialog.\n * @type {?}\n */\nMdDialogConfig.prototype.height;\n/**\n * Position overrides.\n * @type {?}\n */\nMdDialogConfig.prototype.position;\n/**\n * Data being injected into the child component.\n * @type {?}\n */\nMdDialogConfig.prototype.data;\n/**\n * Layout direction for the dialog's content.\n * @type {?}\n */\nMdDialogConfig.prototype.direction;\n/**\n * ID of the element that describes the dialog.\n * @type {?}\n */\nMdDialogConfig.prototype.ariaDescribedBy;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '@angular/core';\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * \\@docs-private\n */\nexport class PortalInjector implements Injector {\n/**\n * @param {?} _parentInjector\n * @param {?} _customTokens\n */\nconstructor(\nprivate _parentInjector: Injector,\nprivate _customTokens: WeakMap<any, any>) { }\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue?: any): any {\n    const /** @type {?} */ value = this._customTokens.get(token);\n\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n\n    return this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n\nfunction PortalInjector_tsickle_Closure_declarations() {\n/** @type {?} */\nPortalInjector.prototype._parentInjector;\n/** @type {?} */\nPortalInjector.prototype._customTokens;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {MdOptionModule, MdCommonModule} from '../core';\nimport {MdAutocomplete} from './autocomplete';\nimport {\n  MdAutocompleteTrigger,\n  MD_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER,\n} from './autocomplete-trigger';\nexport class MdAutocompleteModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdOptionModule, OverlayModule, MdCommonModule, CommonModule],\n  exports: [MdAutocomplete, MdOptionModule, MdAutocompleteTrigger, MdCommonModule],\n  declarations: [MdAutocomplete, MdAutocompleteTrigger],\n  providers: [MD_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdAutocompleteModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdAutocompleteModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdAutocompleteModule.ctorParameters;\n}\n\n\n\nexport {MdAutocomplete} from './autocomplete';\nexport {AUTOCOMPLETE_OPTION_HEIGHT,AUTOCOMPLETE_PANEL_HEIGHT,MD_AUTOCOMPLETE_SCROLL_STRATEGY,MD_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER_FACTORY,MD_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER,MD_AUTOCOMPLETE_VALUE_ACCESSOR,getMdAutocompleteMissingPanelError,MdAutocompleteTrigger} from './autocomplete-trigger';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Host,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  ViewContainerRef,\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DOCUMENT} from '@angular/platform-browser';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {filter, first, map, RxChain, switchMap} from '@angular/cdk/rxjs';\nimport {\n  ConnectedPositionStrategy,\n  Overlay,\n  OverlayRef,\n  OverlayState,\n  PositionStrategy,\n  RepositionScrollStrategy,\n  // This import is only used to define a generic type. The current TypeScript version incorrectly\n  // considers such imports as unused (https://github.com/Microsoft/TypeScript/issues/14953)\n  // tslint:disable-next-line:no-unused-variable\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {DOWN_ARROW, ENTER, ESCAPE, UP_ARROW} from '@angular/cdk/keycodes';\nimport {Observable} from 'rxjs/Observable';\n// import {MdFormField} from '../form-field/index';\n\nimport {Subscription} from 'rxjs/Subscription';\nimport {merge} from 'rxjs/observable/merge';\nimport {fromEvent} from 'rxjs/observable/fromEvent';\nimport {of as observableOf} from 'rxjs/observable/of';\nimport {MdOption, MdOptionSelectionChange} from '../core/option/option';\nimport {MdAutocomplete} from './autocomplete';\n/**\n * The height of each autocomplete option.\n */\nexport const AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n */\nexport const AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/**\n * Injection token that determines the scroll handling while the autocomplete panel is open.\n */\nexport const MD_AUTOCOMPLETE_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('md-autocomplete-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nexport function MD_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n/**\n * \\@docs-private\n */\nexport const MD_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER = {\n  provide: MD_AUTOCOMPLETE_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MD_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * \\@docs-private\n */\nexport const MD_AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MdAutocompleteTrigger),\n  multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @return {?}\n */\nexport function getMdAutocompleteMissingPanelError(): Error {\n  return Error('Attempting to open an undefined instance of `md-autocomplete`. ' +\n               'Make sure that the id passed to the `mdAutocomplete` is correct and that ' +\n               'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\nexport class MdAutocompleteTrigger implements ControlValueAccessor, OnDestroy {\nprivate _formField;\nprivate _overlayRef: OverlayRef | null;\nprivate _portal: TemplatePortal;\nprivate _panelOpen: boolean = false;\n/**\n * Strategy that is used to position the panel.\n */\nprivate _positionStrategy: ConnectedPositionStrategy;\n/**\n * Whether or not the placeholder state is being overridden.\n */\nprivate _manuallyFloatingPlaceholder = false;\n/**\n * The subscription for closing actions (some are bound to document).\n */\nprivate _closingActionsSubscription: Subscription;\n/**\n * View -> model callback called when value changes\n */\n_onChange: (value: any) => void = () => {};\n/**\n * View -> model callback called when autocomplete has been touched\n */\n_onTouched = () => {};\n\n  /* The autocomplete panel to be attached to this trigger. */\n   autocomplete: MdAutocomplete;\n/**\n * Property with mat- prefix for no-conflict mode.\n * @return {?}\n */\nget _matAutocomplete(): MdAutocomplete {\n    return this.autocomplete;\n  }\n/**\n * @param {?} autocomplete\n * @return {?}\n */\nset _matAutocomplete(autocomplete: MdAutocomplete) {\n    this.autocomplete = autocomplete;\n  }\n/**\n * @param {?} _element\n * @param {?} _overlay\n * @param {?} _viewContainerRef\n * @param {?} _zone\n * @param {?} _changeDetectorRef\n * @param {?} _scrollStrategy\n * @param {?} _dir\n * @param {?} _document\n */\nconstructor(private _element: ElementRef,\nprivate _overlay: Overlay,\nprivate _viewContainerRef: ViewContainerRef,\nprivate _zone: NgZone,\nprivate _changeDetectorRef: ChangeDetectorRef,\nprivate _scrollStrategy,\nprivate _dir: Directionality,\nprivate _document: any) {}\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._destroyPanel();\n  }\n/**\n * @return {?}\n */\nget panelOpen(): boolean {\n    return this._panelOpen && this.autocomplete.showPanel;\n  }\n/**\n * Opens the autocomplete suggestion panel.\n * @return {?}\n */\nopenPanel(): void {\n    if (!this.autocomplete) {\n      throw getMdAutocompleteMissingPanelError();\n    }\n\n    if (!this._overlayRef) {\n      this._createOverlay();\n    } else {\n      /** Update the panel width, in case the host width has changed */\n      this._overlayRef.getState().width = this._getHostWidth();\n      this._overlayRef.updateSize();\n    }\n\n    if (this._overlayRef && !this._overlayRef.hasAttached()) {\n      this._overlayRef.attach(this._portal);\n      this._closingActionsSubscription = this._subscribeToClosingActions();\n    }\n\n    this.autocomplete._setVisibility();\n    this._floatPlaceholder();\n    this._panelOpen = true;\n  }\n/**\n * Closes the autocomplete suggestion panel.\n * @return {?}\n */\nclosePanel(): void {\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n      this._closingActionsSubscription.unsubscribe();\n    }\n\n    this._resetPlaceholder();\n\n    if (this._panelOpen) {\n      this._panelOpen = false;\n\n      // We need to trigger change detection manually, because\n      // `fromEvent` doesn't seem to do it at the proper time.\n      // This ensures that the placeholder is reset when the\n      // user clicks outside.\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n/**\n * A stream of actions that should close the autocomplete panel, including\n * when an option is selected, on blur, and when TAB is pressed.\n * @return {?}\n */\nget panelClosingActions(): Observable<MdOptionSelectionChange> {\n    return merge(\n      this.optionSelections,\n      this.autocomplete._keyManager.tabOut,\n      this._outsideClickStream\n    );\n  }\n/**\n * Stream of autocomplete option selections.\n * @return {?}\n */\nget optionSelections(): Observable<MdOptionSelectionChange> {\n    return merge(...this.autocomplete.options.map(option => option.onSelectionChange));\n  }\n/**\n * The currently active option, coerced to MdOption type.\n * @return {?}\n */\nget activeOption(): MdOption | null {\n    if (this.autocomplete && this.autocomplete._keyManager) {\n      return this.autocomplete._keyManager.activeItem;\n    }\n\n    return null;\n  }\n/**\n * Stream of clicks outside of the autocomplete panel.\n * @return {?}\n */\nprivate get _outsideClickStream(): Observable<any> {\n    if (!this._document) {\n      return observableOf(null);\n    }\n\n    return RxChain.from(merge(\n      fromEvent(this._document, 'click'),\n      fromEvent(this._document, 'touchend')\n    )).call(filter, (event: MouseEvent | TouchEvent) => {\n      const /** @type {?} */ clickTarget = /** @type {?} */(( event.target as HTMLElement));\n      const /** @type {?} */ formField = this._formField ?\n          this._formField._elementRef.nativeElement : null;\n\n      return this._panelOpen &&\n             clickTarget !== this._element.nativeElement &&\n             (!formField || !formField.contains(clickTarget)) &&\n             (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n    }).result();\n  }\n/**\n * Sets the autocomplete's value. Part of the ControlValueAccessor interface\n * required to integrate with Angular's core forms API.\n * \n * @param {?} value New value to be written to the model.\n * @return {?}\n */\nwriteValue(value: any): void {\n    Promise.resolve(null).then(() => this._setTriggerValue(value));\n  }\n/**\n * Saves a callback function to be invoked when the autocomplete's value\n * changes from user input. Part of the ControlValueAccessor interface\n * required to integrate with Angular's core forms API.\n * \n * @param {?} fn Callback to be triggered when the value changes.\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => {}): void {\n    this._onChange = fn;\n  }\n/**\n * Saves a callback function to be invoked when the autocomplete is blurred\n * by the user. Part of the ControlValueAccessor interface required\n * to integrate with Angular's core forms API.\n * \n * @param {?} fn Callback to be triggered when the component has been touched.\n * @return {?}\n */\nregisterOnTouched(fn: () => {}) {\n    this._onTouched = fn;\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === ESCAPE && this.panelOpen) {\n      this._resetActiveItem();\n      this.closePanel();\n      event.stopPropagation();\n    } else if (this.activeOption && event.keyCode === ENTER && this.panelOpen) {\n      this.activeOption._selectViaInteraction();\n      this._resetActiveItem();\n      event.preventDefault();\n    } else {\n      const /** @type {?} */ prevActiveItem = this.autocomplete._keyManager.activeItem;\n      const /** @type {?} */ isArrowKey = event.keyCode === UP_ARROW || event.keyCode === DOWN_ARROW;\n\n      if (this.panelOpen) {\n        this.autocomplete._keyManager.onKeydown(event);\n      } else if (isArrowKey) {\n        this.openPanel();\n      }\n\n      Promise.resolve().then(() => {\n        if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n          this._scrollToOption();\n        }\n      });\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_handleInput(event: KeyboardEvent): void {\n    // We need to ensure that the input is focused, because IE will fire the `input`\n    // event on focus/blur/load if the input has a placeholder. See:\n    // https://connect.microsoft.com/IE/feedback/details/885747/\n    if (document.activeElement === event.target) {\n      this._onChange(( /** @type {?} */((event.target as HTMLInputElement))).value);\n      this.openPanel();\n    }\n  }\n/**\n * In \"auto\" mode, the placeholder will animate down as soon as focus is lost.\n * This causes the value to jump when selecting an option with the mouse.\n * This method manually floats the placeholder until the panel can be closed.\n * @return {?}\n */\nprivate _floatPlaceholder(): void {\n    if (this._formField && this._formField.floatPlaceholder === 'auto') {\n      this._formField.floatPlaceholder = 'always';\n      this._manuallyFloatingPlaceholder = true;\n    }\n  }\n/**\n * If the placeholder has been manually elevated, return it to its normal state.\n * @return {?}\n */\nprivate _resetPlaceholder(): void  {\n    if (this._manuallyFloatingPlaceholder) {\n      this._formField.floatPlaceholder = 'auto';\n      this._manuallyFloatingPlaceholder = false;\n    }\n  }\n/**\n * Given that we are not actually focusing active options, we must manually adjust scroll\n * to reveal options below the fold. First, we find the offset of the option from the top\n * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n * the panel height + the option height, so the active option will be just visible at the\n * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n * will become the offset. If that offset is visible within the panel already, the scrollTop is\n * not adjusted.\n * @return {?}\n */\nprivate _scrollToOption(): void {\n    const /** @type {?} */ optionOffset = this.autocomplete._keyManager.activeItemIndex ?\n        this.autocomplete._keyManager.activeItemIndex * AUTOCOMPLETE_OPTION_HEIGHT : 0;\n    const /** @type {?} */ panelTop = this.autocomplete._getScrollTop();\n\n    if (optionOffset < panelTop) {\n      // Scroll up to reveal selected option scrolled above the panel top\n      this.autocomplete._setScrollTop(optionOffset);\n    } else if (optionOffset + AUTOCOMPLETE_OPTION_HEIGHT > panelTop + AUTOCOMPLETE_PANEL_HEIGHT) {\n      // Scroll down to reveal selected option scrolled below the panel bottom\n      const /** @type {?} */ newScrollTop =\n          Math.max(0, optionOffset - AUTOCOMPLETE_PANEL_HEIGHT + AUTOCOMPLETE_OPTION_HEIGHT);\n      this.autocomplete._setScrollTop(newScrollTop);\n    }\n  }\n/**\n * This method listens to a stream of panel closing actions and resets the\n * stream every time the option list changes.\n * @return {?}\n */\nprivate _subscribeToClosingActions(): Subscription {\n    const /** @type {?} */ firstStable = first.call(this._zone.onStable);\n    const /** @type {?} */ optionChanges = map.call(this.autocomplete.options.changes, () =>\n      this._positionStrategy.recalculateLastPosition());\n\n    // When the zone is stable initially, and when the option list changes...\n    return RxChain.from(merge(firstStable, optionChanges))\n      // create a new stream of panelClosingActions, replacing any previous streams\n      // that were created, and flatten it so our stream only emits closing events...\n      .call(switchMap, () => {\n        this._resetActiveItem();\n        this.autocomplete._setVisibility();\n        return this.panelClosingActions;\n      })\n      // when the first closing event occurs...\n      .call(first)\n      // set the value, close the panel, and complete.\n      .subscribe(event => this._setValueAndClose(event));\n  }\n/**\n * Destroys the autocomplete suggestion panel.\n * @return {?}\n */\nprivate _destroyPanel(): void {\n    if (this._overlayRef) {\n      this.closePanel();\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _setTriggerValue(value: any): void {\n    const /** @type {?} */ toDisplay = this.autocomplete.displayWith ? this.autocomplete.displayWith(value) : value;\n\n    // Simply falling back to an empty string if the display value is falsy does not work properly.\n    // The display value can also be the number zero and shouldn't fall back to an empty string.\n    const /** @type {?} */ inputValue = toDisplay != null ? toDisplay : '';\n\n    // If it's used within a `MdFormField`, we should set it through the property so it can go\n    // through change detection.\n    if (this._formField) {\n      this._formField._control.value = inputValue;\n    } else {\n      this._element.nativeElement.value = inputValue;\n    }\n  }\n/**\n * This method closes the panel, and if a value is specified, also sets the associated\n * control to that value. It will also mark the control as dirty if this interaction\n * stemmed from the user.\n * @param {?} event\n * @return {?}\n */\nprivate _setValueAndClose(event: MdOptionSelectionChange | null): void {\n    if (event && event.source) {\n      this._clearPreviousSelectedOption(event.source);\n      this._setTriggerValue(event.source.value);\n      this._onChange(event.source.value);\n      this._element.nativeElement.focus();\n    }\n\n    this.closePanel();\n  }\n/**\n * Clear any previous selected option and emit a selection change event for this option\n * @param {?} skip\n * @return {?}\n */\nprivate _clearPreviousSelectedOption(skip: MdOption) {\n    this.autocomplete.options.forEach(option => {\n      if (option != skip && option.selected) {\n        option.deselect();\n      }\n    });\n  }\n/**\n * @return {?}\n */\nprivate _createOverlay(): void {\n    this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n    this._overlayRef = this._overlay.create(this._getOverlayConfig());\n  }\n/**\n * @return {?}\n */\nprivate _getOverlayConfig(): OverlayState {\n    const /** @type {?} */ overlayState = new OverlayState();\n    overlayState.positionStrategy = this._getOverlayPosition();\n    overlayState.width = this._getHostWidth();\n    overlayState.direction = this._dir ? this._dir.value : 'ltr';\n    overlayState.scrollStrategy = this._scrollStrategy();\n    return overlayState;\n  }\n/**\n * @return {?}\n */\nprivate _getOverlayPosition(): PositionStrategy {\n    this._positionStrategy =  this._overlay.position().connectedTo(\n        this._getConnectedElement(),\n        {originX: 'start', originY: 'bottom'}, {overlayX: 'start', overlayY: 'top'})\n        .withFallbackPosition(\n            {originX: 'start', originY: 'top'}, {overlayX: 'start', overlayY: 'bottom'}\n        );\n    return this._positionStrategy;\n  }\n/**\n * @return {?}\n */\nprivate _getConnectedElement(): ElementRef {\n    return this._formField ? this._formField._connectionContainerRef : this._element;\n  }\n/**\n * Returns the width of the input element, so the panel width can match it.\n * @return {?}\n */\nprivate _getHostWidth(): number {\n    return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n  }\n/**\n * Reset active item to -1 so arrow events will activate the correct options.\n * @return {?}\n */\nprivate _resetActiveItem(): void {\n    this.autocomplete._keyManager.setActiveItem(-1);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `input[mdAutocomplete], input[matAutocomplete],\n             textarea[mdAutocomplete], textarea[matAutocomplete]`,\n  host: {\n    'role': 'combobox',\n    'autocomplete': 'off',\n    'aria-autocomplete': 'list',\n    'aria-multiline': 'false',\n    '[attr.aria-activedescendant]': 'activeOption?.id',\n    '[attr.aria-expanded]': 'panelOpen.toString()',\n    '[attr.aria-owns]': 'autocomplete?.id',\n    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n    // a little earlier. This avoids issues where IE delays the focusing of the input.\n    '(focusin)': 'openPanel()',\n    '(input)': '_handleInput($event)',\n    '(blur)': '_onTouched()',\n    '(keydown)': '_handleKeydown($event)',\n  },\n  providers: [MD_AUTOCOMPLETE_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Overlay, },\n{type: ViewContainerRef, },\n{type: NgZone, },\n{type: ChangeDetectorRef, },\n{type: undefined, decorators: [{ type: Inject, args: [MD_AUTOCOMPLETE_SCROLL_STRATEGY, ] }, ]},\n{type: Directionality, decorators: [{ type: Optional }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'autocomplete': [{ type: Input, args: ['mdAutocomplete', ] },],\n'_matAutocomplete': [{ type: Input, args: ['matAutocomplete', ] },],\n};\n}\n\nfunction MdAutocompleteTrigger_tsickle_Closure_declarations() {\n/** @type {?} */\nMdAutocompleteTrigger.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdAutocompleteTrigger.ctorParameters;\n/** @type {?} */\nMdAutocompleteTrigger.propDecorators;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._formField;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._overlayRef;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._portal;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._panelOpen;\n/**\n * Strategy that is used to position the panel.\n * @type {?}\n */\nMdAutocompleteTrigger.prototype._positionStrategy;\n/**\n * Whether or not the placeholder state is being overridden.\n * @type {?}\n */\nMdAutocompleteTrigger.prototype._manuallyFloatingPlaceholder;\n/**\n * The subscription for closing actions (some are bound to document).\n * @type {?}\n */\nMdAutocompleteTrigger.prototype._closingActionsSubscription;\n/**\n * View -> model callback called when value changes\n * @type {?}\n */\nMdAutocompleteTrigger.prototype._onChange;\n/**\n * View -> model callback called when autocomplete has been touched\n * @type {?}\n */\nMdAutocompleteTrigger.prototype._onTouched;\n/** @type {?} */\nMdAutocompleteTrigger.prototype.autocomplete;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._element;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._overlay;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._viewContainerRef;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._zone;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._changeDetectorRef;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._scrollStrategy;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._dir;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._document;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Input,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {MdOption} from '../core';\nimport {ActiveDescendantKeyManager} from '@angular/cdk/a11y';\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueAutocompleteIdCounter = 0;\nexport class MdAutocomplete implements AfterContentInit {\n/**\n * Manages active item in option list based on key events.\n */\n_keyManager: ActiveDescendantKeyManager<MdOption>;\n/**\n * Whether the autocomplete panel should be visible, depending on option length.\n */\nshowPanel = false;\n/**\n * \\@docs-private\n */\ntemplate: TemplateRef<any>;\n/**\n * Element for the panel containing the autocomplete options.\n */\npanel: ElementRef;\n/**\n * \\@docs-private\n */\noptions: QueryList<MdOption>;\n/**\n * Function that maps an option's control value to its display value in the trigger.\n */\ndisplayWith: ((value: any) => string) | null = null;\n/**\n * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n */\nid: string = `md-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n/**\n * @param {?} _changeDetectorRef\n */\nconstructor(private _changeDetectorRef: ChangeDetectorRef) { }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._keyManager = new ActiveDescendantKeyManager<MdOption>(this.options).withWrap();\n  }\n/**\n * Sets the panel scrollTop. This allows us to manually scroll to display options\n * above or below the fold, as they are not actually being focused when active.\n * @param {?} scrollTop\n * @return {?}\n */\n_setScrollTop(scrollTop: number): void {\n    if (this.panel) {\n      this.panel.nativeElement.scrollTop = scrollTop;\n    }\n  }\n/**\n * Returns the panel's scrollTop.\n * @return {?}\n */\n_getScrollTop(): number {\n    return this.panel ? this.panel.nativeElement.scrollTop : 0;\n  }\n/**\n * Panel should hide itself when the option list is empty.\n * @return {?}\n */\n_setVisibility() {\n    Promise.resolve().then(() => {\n      this.showPanel = !!this.options.length;\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n/**\n * Sets a class on the panel based on whether it is visible.\n * @return {?}\n */\n_getClassList() {\n    return {\n      'mat-autocomplete-visible': this.showPanel,\n      'mat-autocomplete-hidden': !this.showPanel\n    };\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-autocomplete, mat-autocomplete',\n  templateUrl: 'autocomplete.html',\n  styleUrls: ['autocomplete.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'mdAutocomplete',\n  host: {\n    'class': 'mat-autocomplete'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'template': [{ type: ViewChild, args: [TemplateRef, ] },],\n'panel': [{ type: ViewChild, args: ['panel', ] },],\n'options': [{ type: ContentChildren, args: [MdOption, ] },],\n'displayWith': [{ type: Input },],\n};\n}\n\nfunction MdAutocomplete_tsickle_Closure_declarations() {\n/** @type {?} */\nMdAutocomplete.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdAutocomplete.ctorParameters;\n/** @type {?} */\nMdAutocomplete.propDecorators;\n/**\n * Manages active item in option list based on key events.\n * @type {?}\n */\nMdAutocomplete.prototype._keyManager;\n/**\n * Whether the autocomplete panel should be visible, depending on option length.\n * @type {?}\n */\nMdAutocomplete.prototype.showPanel;\n/**\n * \\@docs-private\n * @type {?}\n */\nMdAutocomplete.prototype.template;\n/**\n * Element for the panel containing the autocomplete options.\n * @type {?}\n */\nMdAutocomplete.prototype.panel;\n/**\n * \\@docs-private\n * @type {?}\n */\nMdAutocomplete.prototype.options;\n/**\n * Function that maps an option's control value to its display value in the trigger.\n * @type {?}\n */\nMdAutocomplete.prototype.displayWith;\n/**\n * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n * @type {?}\n */\nMdAutocomplete.prototype.id;\n/** @type {?} */\nMdAutocomplete.prototype._changeDetectorRef;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {MdLineModule} from './line/line';\nimport {MdOptionModule} from './option/index';\nimport {MdSelectionModule} from './selection/index';\nimport {MdRippleModule} from './ripple/index';\n\n// Re-exports of the CDK to avoid breaking changes.\nexport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@angular/cdk/coercion';\n\nexport {\n  ObserversModule,\n  ObserveContent,\n} from '@angular/cdk/observers';\n\n// RTL\nexport {Dir, Direction, Directionality, BidiModule} from './bidi/index';\n\nexport {MdOptionModule,MdOptionSelectionChange,MdOption,MdOptgroupBase,_MdOptgroupMixinBase,MdOptgroup} from './option/index';\n\n// Portals\nexport {\n  Portal,\n  PortalHost,\n  BasePortalHost,\n  ComponentPortal,\n  TemplatePortal\n} from './portal/portal';\nexport {\n  PortalHostDirective,\n  TemplatePortalDirective,\n  PortalModule,\n} from './portal/portal-directives';\nexport {DomPortalHost} from './portal/dom-portal-host';\n\n// Platform\nexport {PlatformModule,Platform,getSupportedInputTypes} from '@angular/cdk/platform';\n\n// Overlay\nexport {OVERLAY_PROVIDERS,OverlayModule,Overlay,OverlayContainer,FullscreenOverlayContainer,OverlayRef,OverlayState,ConnectedOverlayDirective,OverlayOrigin,ViewportRuler,ComponentType,PositionStrategy,GlobalPositionStrategy,ConnectedPositionStrategy,VIEWPORT_RULER_PROVIDER,HorizontalConnectionPos,VerticalConnectionPos,OriginConnectionPosition,OverlayConnectionPosition,ConnectionPositionPair,ScrollableViewProperties,ConnectedOverlayPositionChange,Scrollable,ScrollDispatcher,ScrollStrategy,ScrollStrategyOptions,RepositionScrollStrategy,CloseScrollStrategy,NoopScrollStrategy,BlockScrollStrategy,ScrollDispatchModule} from '@angular/cdk/overlay';\n\n// Gestures\nexport {GestureConfig} from './gestures/gesture-config';\n// Explicitly specify the interfaces which should be re-exported, because if everything\n// is re-exported, module bundlers may run into issues with treeshaking.\nexport {HammerInput, HammerManager} from './gestures/gesture-annotations';\n\n// Ripple\nexport {MdRipple,RippleGlobalOptions,MD_RIPPLE_GLOBAL_OPTIONS,RippleRef,RippleState,RippleConfig,RIPPLE_FADE_IN_DURATION,RIPPLE_FADE_OUT_DURATION,MdRippleModule} from './ripple/index';\n\n// Selection\nexport {SelectionModel,SelectionChange} from './selection/selection';\n\n// a11y\nexport {\n  AriaLivePoliteness,\n  LiveAnnouncer,\n  LIVE_ANNOUNCER_ELEMENT_TOKEN,\n  LIVE_ANNOUNCER_PROVIDER,\n  InteractivityChecker,\n  FocusTrap,\n  FocusTrapFactory,\n  FocusTrapDeprecatedDirective,\n  FocusTrapDirective,\n  isFakeMousedownFromScreenReader,\n  A11yModule,\n} from '@angular/cdk/a11y';\n\nexport {\n  UniqueSelectionDispatcher,\n  UniqueSelectionDispatcherListener,\n  UNIQUE_SELECTION_DISPATCHER_PROVIDER,\n} from './coordination/unique-selection-dispatcher';\n\nexport {MdLineModule, MdLine, MdLineSetter} from './line/line';\n\n// Style\nexport {StyleModule,TOUCH_BUFFER_MS,FocusOrigin,FocusOriginMonitor,CdkMonitorFocus,FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY,FOCUS_ORIGIN_MONITOR_PROVIDER,applyCssTransform} from './style/index';\n\n// Keybindings\nexport {UP_ARROW,DOWN_ARROW,RIGHT_ARROW,LEFT_ARROW,PAGE_UP,PAGE_DOWN,HOME,END,ENTER,SPACE,TAB,ESCAPE,BACKSPACE,DELETE,A,Z} from './keyboard/keycodes';\n\nexport {MATERIAL_COMPATIBILITY_MODE,getMdCompatibilityInvalidPrefixError,MAT_ELEMENTS_SELECTOR,MD_ELEMENTS_SELECTOR,MatPrefixRejector,MdPrefixRejector} from './compatibility/compatibility';\n\n// Animation\nexport {AnimationCurves,AnimationDurations} from './animation/animation';\n\n// Selection\nexport {MdSelectionModule,MdPseudoCheckboxState,MdPseudoCheckbox} from './selection/index';\n\n// Compatibility\nexport {CompatibilityModule, NoConflictStyleCompatibilityMode} from './compatibility/compatibility';\n\n// Common material module\nexport {MdCommonModule, MATERIAL_SANITY_CHECKS} from './common-behaviors/common-module';\n\n// Datetime\nexport {NativeDateModule,MdNativeDateModule,DateAdapter,MdDateFormats,MD_DATE_FORMATS,NativeDateAdapter,MD_NATIVE_DATE_FORMATS} from './datetime/index';\n\n// Placeholder\nexport {\n  FloatPlaceholderType,\n  PlaceholderOptions,\n  MD_PLACEHOLDER_GLOBAL_OPTIONS\n} from './placeholder/placeholder-options';\n\n// Error\nexport {\n  ErrorStateMatcher,\n  ErrorOptions,\n  MD_ERROR_GLOBAL_OPTIONS,\n  defaultErrorStateMatcher,\n  showOnDirtyErrorStateMatcher\n} from './error/error-options';\nexport class MdCoreModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    MdLineModule,\n    BidiModule,\n    MdRippleModule,\n    ObserversModule,\n    PortalModule,\n    OverlayModule,\n    A11yModule,\n    MdOptionModule,\n    MdSelectionModule,\n  ],\n  exports: [\n    MdLineModule,\n    BidiModule,\n    MdRippleModule,\n    ObserversModule,\n    PortalModule,\n    OverlayModule,\n    A11yModule,\n    MdOptionModule,\n    MdSelectionModule,\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCoreModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCoreModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCoreModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\n/**\n * Injection token that can be used to specify the global error options.\n */\nexport const MD_ERROR_GLOBAL_OPTIONS = new InjectionToken<ErrorOptions>('md-error-global-options');\n\nexport type ErrorStateMatcher =\n    (control: FormControl, form: FormGroupDirective | NgForm) => boolean;\n\nexport interface ErrorOptions {\n  errorStateMatcher?: ErrorStateMatcher;\n}\n/**\n * Returns whether control is invalid and is either touched or is a part of a submitted form.\n * @param {?} control\n * @param {?} form\n * @return {?}\n */\nexport function defaultErrorStateMatcher(control: FormControl, form: FormGroupDirective | NgForm) {\n  const /** @type {?} */ isSubmitted = form && form.submitted;\n  return !!(control.invalid && (control.touched || isSubmitted));\n}\n/**\n * Returns whether control is invalid and is either dirty or is a part of a submitted form.\n * @param {?} control\n * @param {?} form\n * @return {?}\n */\nexport function showOnDirtyErrorStateMatcher(control: FormControl,\n    form: FormGroupDirective | NgForm) {\n  const /** @type {?} */ isSubmitted = form && form.submitted;\n  return !!(control.invalid && (control.dirty || isSubmitted));\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport { InjectionToken } from '@angular/core';\n/**\n * InjectionToken that can be used to specify the global placeholder options.\n */\nexport const MD_PLACEHOLDER_GLOBAL_OPTIONS =\n  new InjectionToken<PlaceholderOptions>('md-placeholder-global-options');\n\n/** Type for the available floatPlaceholder values. */\nexport type FloatPlaceholderType = 'always' | 'never' | 'auto';\n\nexport interface PlaceholderOptions {\n  float?: FloatPlaceholderType;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {DateAdapter} from './date-adapter';\nimport {NativeDateAdapter} from './native-date-adapter';\nimport {MD_DATE_FORMATS} from './date-formats';\nimport {MD_NATIVE_DATE_FORMATS} from './native-date-formats';\n\n\nexport {DateAdapter} from './date-adapter';\nexport {MdDateFormats,MD_DATE_FORMATS} from './date-formats';\nexport {NativeDateAdapter} from './native-date-adapter';\nexport {MD_NATIVE_DATE_FORMATS} from './native-date-formats';\nexport class NativeDateModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [{provide: DateAdapter, useClass: NativeDateAdapter}],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NativeDateModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNativeDateModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNativeDateModule.ctorParameters;\n}\n\nexport class MdNativeDateModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [NativeDateModule],\n  providers: [{provide: MD_DATE_FORMATS, useValue: MD_NATIVE_DATE_FORMATS}],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdNativeDateModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdNativeDateModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdNativeDateModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {MdDateFormats} from './date-formats';\n\n\nexport const /** @type {?} */ MD_NATIVE_DATE_FORMATS: MdDateFormats = {\n  parse: {\n    dateInput: null,\n  },\n  display: {\n    dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\n    monthYearLabel: {year: 'numeric', month: 'short'},\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\n  }\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '@angular/core';\n\n\nexport type MdDateFormats = {\n  parse: {\n    dateInput: any\n  },\n  display: {\n    dateInput: any,\n    monthYearLabel: any,\n    dateA11yLabel: any,\n    monthYearA11yLabel: any,\n  }\n};\n\n\nexport const /** @type {?} */ MD_DATE_FORMATS = new InjectionToken<MdDateFormats>('md-date-formats');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable, Optional, LOCALE_ID} from '@angular/core';\nimport {DateAdapter} from './date-adapter';\nimport {extendObject} from '../util/object-extend';\n/**\n * Whether the browser supports the Intl API.\n */\nconst SUPPORTS_INTL_API = typeof Intl != 'undefined';\n/**\n * The default month names to use if Intl API is not available.\n */\nconst DEFAULT_MONTH_NAMES = {\n  'long': [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n    'October', 'November', 'December'\n  ],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n/**\n * The default date names to use if Intl API is not available.\n */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n/**\n * The default day of the week names to use if Intl API is not available.\n */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const /** @type {?} */ valuesArray = Array(length);\n  for (let /** @type {?} */ i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nexport class NativeDateAdapter extends DateAdapter<Date> {\n/**\n * @param {?} localeId\n */\nconstructor(  localeId: any) {\n    super();\n    super.setLocale(localeId);\n  }\n/**\n * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n * will produce `'8/13/1800'`.\n */\nuseUtcForDisplay = true;\n/**\n * @param {?} date\n * @return {?}\n */\ngetYear(date: Date): number {\n    return date.getFullYear();\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetMonth(date: Date): number {\n    return date.getMonth();\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetDate(date: Date): number {\n    return date.getDate();\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n/**\n * @param {?} style\n * @return {?}\n */\ngetMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, {month: style});\n      return range(12, i => this._stripDirectionalityCharacters(dtf.format(new Date(2017, i, 1))));\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n/**\n * @return {?}\n */\ngetDateNames(): string[] {\n    if (SUPPORTS_INTL_API) {\n      let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric'});\n      return range(31, i => this._stripDirectionalityCharacters(\n          dtf.format(new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n/**\n * @param {?} style\n * @return {?}\n */\ngetDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, {weekday: style});\n      return range(7, i => this._stripDirectionalityCharacters(\n          dtf.format(new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetYearName(date: Date): string {\n    if (SUPPORTS_INTL_API) {\n      let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric'});\n      return this._stripDirectionalityCharacters(dtf.format(date));\n    }\n    return String(this.getYear(date));\n  }\n/**\n * @return {?}\n */\ngetFirstDayOfWeek(): number {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetNumDaysInMonth(date: Date): number {\n    return this.getDate(this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n/**\n * @param {?} date\n * @return {?}\n */\nclone(date: Date): Date {\n    return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n  }\n/**\n * @param {?} year\n * @param {?} month\n * @param {?} date\n * @return {?}\n */\ncreateDate(year: number, month: number, date: number): Date {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    let /** @type {?} */ result = this._createDateWithOverflow(year, month, date);\n\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n/**\n * @return {?}\n */\ntoday(): Date {\n    return new Date();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nparse(value: any): Date | null {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n/**\n * @param {?} date\n * @param {?} displayFormat\n * @return {?}\n */\nformat(date: Date, displayFormat: Object): string {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n    if (SUPPORTS_INTL_API) {\n      if (this.useUtcForDisplay) {\n        date = new Date(Date.UTC(\n            date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(),\n            date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        displayFormat = extendObject({}, displayFormat, {timeZone: 'utc'});\n      }\n      let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(dtf.format(date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n/**\n * @param {?} date\n * @param {?} years\n * @return {?}\n */\naddCalendarYears(date: Date, years: number): Date {\n    return this.addCalendarMonths(date, years * 12);\n  }\n/**\n * @param {?} date\n * @param {?} months\n * @return {?}\n */\naddCalendarMonths(date: Date, months: number): Date {\n    let /** @type {?} */ newDate = this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n\n    return newDate;\n  }\n/**\n * @param {?} date\n * @param {?} days\n * @return {?}\n */\naddCalendarDays(date: Date, days: number): Date {\n    return this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetISODateString(date: Date): string {\n    return [\n      date.getUTCFullYear(),\n      this._2digit(date.getUTCMonth() + 1),\n      this._2digit(date.getUTCDate())\n    ].join('-');\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nisDateInstance(obj: any) {\n    return obj instanceof Date;\n  }\n/**\n * @param {?} date\n * @return {?}\n */\nisValid(date: Date) {\n    return !isNaN(date.getTime());\n  }\n/**\n * Creates a date but allows the month and date to overflow.\n * @param {?} year\n * @param {?} month\n * @param {?} date\n * @return {?}\n */\nprivate _createDateWithOverflow(year: number, month: number, date: number) {\n    let /** @type {?} */ result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(this.getYear(result) - 1900);\n    }\n    return result;\n  }\n/**\n * Pads a number to make it two digits.\n * @param {?} n The number to pad.\n * @return {?} The padded number.\n */\nprivate _2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n/**\n * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n * other browsers do not. We remove them to make output consistent and because they interfere with\n * date parsing.\n * @param {?} str The string to strip direction characters from.\n * @return {?} The stripped string.\n */\nprivate _stripDirectionalityCharacters(str: string) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction NativeDateAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nNativeDateAdapter.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNativeDateAdapter.ctorParameters;\n/**\n * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n * will produce `'8/13/1800'`.\n * @type {?}\n */\nNativeDateAdapter.prototype.useUtcForDisplay;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n * \n * @param {?} dest The object which will have properties copied to it.\n * @param {...?} sources The source objects from which properties will be copied.\n * @return {?}\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let /** @type {?} */ source of sources) {\n    if (source != null) {\n      for (let /** @type {?} */ key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n */\nexport abstract class DateAdapter<D> {\n/**\n * The locale to use for all dates.\n */\nprotected locale: any;\n/**\n * Gets the year component of the given date.\n * @abstract\n * @param {?} date The date to extract the year from.\n * @return {?} The year component.\n */\ngetYear(date: D) {}\n/**\n * Gets the month component of the given date.\n * @abstract\n * @param {?} date The date to extract the month from.\n * @return {?} The month component (0-indexed, 0 = January).\n */\ngetMonth(date: D) {}\n/**\n * Gets the date of the month component of the given date.\n * @abstract\n * @param {?} date The date to extract the date of the month from.\n * @return {?} The month component (1-indexed, 1 = first of month).\n */\ngetDate(date: D) {}\n/**\n * Gets the day of the week component of the given date.\n * @abstract\n * @param {?} date The date to extract the day of the week from.\n * @return {?} The month component (0-indexed, 0 = Sunday).\n */\ngetDayOfWeek(date: D) {}\n/**\n * Gets a list of names for the months.\n * @abstract\n * @param {?} style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n * @return {?} An ordered list of all month names, starting with January.\n */\ngetMonthNames(style: 'long' | 'short' | 'narrow') {}\n/**\n * Gets a list of names for the dates of the month.\n * @abstract\n * @return {?} An ordered list of all date of the month names, starting with '1'.\n */\ngetDateNames() {}\n/**\n * Gets a list of names for the days of the week.\n * @abstract\n * @param {?} style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n * @return {?} An ordered list of all weekday names, starting with Sunday.\n */\ngetDayOfWeekNames(style: 'long' | 'short' | 'narrow') {}\n/**\n * Gets the name for the year of the given date.\n * @abstract\n * @param {?} date The date to get the year name for.\n * @return {?} The name of the given year (e.g. '2017').\n */\ngetYearName(date: D) {}\n/**\n * Gets the first day of the week.\n * @abstract\n * @return {?} The first day of the week (0-indexed, 0 = Sunday).\n */\ngetFirstDayOfWeek() {}\n/**\n * Gets the number of days in the month of the given date.\n * @abstract\n * @param {?} date The date whose month should be checked.\n * @return {?} The number of days in the month of the given date.\n */\ngetNumDaysInMonth(date: D) {}\n/**\n * Clones the given date.\n * @abstract\n * @param {?} date The date to clone\n * @return {?} A new date equal to the given date.\n */\nclone(date: D) {}\n/**\n * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n * month and date.\n * @abstract\n * @param {?} year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n * @param {?} month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n * @param {?} date The date of month of the date. Must be an integer 1 - length of the given month.\n * @return {?} The new date, or null if invalid.\n */\ncreateDate(year: number, month: number, date: number) {}\n/**\n * Gets today's date.\n * @abstract\n * @return {?} Today's date.\n */\ntoday() {}\n/**\n * Parses a date from a value.\n * @abstract\n * @param {?} value The value to parse.\n * @param {?} parseFormat The expected format of the value being parsed\n *     (type is implementation-dependent).\n * @return {?} The parsed date.\n */\nparse(value: any, parseFormat: any) {}\n/**\n * Formats a date as a string.\n * @abstract\n * @param {?} date The value to format.\n * @param {?} displayFormat The format to use to display the date as a string.\n * @return {?} The formatted date string.\n */\nformat(date: D, displayFormat: any) {}\n/**\n * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n * calendar for each year and then finding the closest date in the new month. For example when\n * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n * @abstract\n * @param {?} date The date to add years to.\n * @param {?} years The number of years to add (may be negative).\n * @return {?} A new date equal to the given one with the specified number of years added.\n */\naddCalendarYears(date: D, years: number) {}\n/**\n * Adds the given number of months to the date. Months are counted as if flipping a page on the\n * calendar for each month and then finding the closest date in the new month. For example when\n * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n * @abstract\n * @param {?} date The date to add months to.\n * @param {?} months The number of months to add (may be negative).\n * @return {?} A new date equal to the given one with the specified number of months added.\n */\naddCalendarMonths(date: D, months: number) {}\n/**\n * Adds the given number of days to the date. Days are counted as if moving one cell on the\n * calendar for each day.\n * @abstract\n * @param {?} date The date to add days to.\n * @param {?} days The number of days to add (may be negative).\n * @return {?} A new date equal to the given one with the specified number of days added.\n */\naddCalendarDays(date: D, days: number) {}\n/**\n * Gets the RFC 3339 compatible date string (https://tools.ietf.org/html/rfc3339)  for the given\n * date.\n * @abstract\n * @param {?} date The date to get the ISO date string for.\n * @return {?} The ISO date string date string.\n */\ngetISODateString(date: D) {}\n/**\n * Checks whether the given object is considered a date instance by this DateAdapter.\n * @abstract\n * @param {?} obj The object to check\n * @return {?} Whether the object is a date instance.\n */\nisDateInstance(obj: any) {}\n/**\n * Checks whether the given date is valid.\n * @abstract\n * @param {?} date The date to check.\n * @return {?} Whether the date is valid.\n */\nisValid(date: D) {}\n/**\n * Sets the locale used for all dates.\n * @param {?} locale The new locale.\n * @return {?}\n */\nsetLocale(locale: any) {\n    this.locale = locale;\n  }\n/**\n * Compares two dates.\n * @param {?} first The first date to compare.\n * @param {?} second The second date to compare.\n * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n *     a number greater than 0 if the first date is later.\n */\ncompareDate(first: D, second: D): number {\n    return this.getYear(first) - this.getYear(second) ||\n        this.getMonth(first) - this.getMonth(second) ||\n        this.getDate(first) - this.getDate(second);\n  }\n/**\n * Checks if two dates are equal.\n * @param {?} first The first date to check.\n * @param {?} second The second date to check.\n *     Null dates are considered equal to other null dates.\n * @return {?}\n */\nsameDate(first: D | null, second: D | null): boolean {\n    return first && second ? !this.compareDate(first, second) : first == second;\n  }\n/**\n * Clamp the given date between min and max dates.\n * @param {?} date The date to clamp.\n * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n *     otherwise `date`.\n */\nclampDate(date: D, min?: D | null, max?: D | null): D {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n\nfunction DateAdapter_tsickle_Closure_declarations() {\n/**\n * The locale to use for all dates.\n * @type {?}\n */\nDateAdapter.prototype.locale;\n}\n\n","\n/**\n * \\@docs-private\n */\nexport class AnimationCurves {\n  static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n  static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n  static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n  static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n\nfunction AnimationCurves_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationCurves.STANDARD_CURVE;\n/** @type {?} */\nAnimationCurves.DECELERATION_CURVE;\n/** @type {?} */\nAnimationCurves.ACCELERATION_CURVE;\n/** @type {?} */\nAnimationCurves.SHARP_CURVE;\n}\n\n/**\n * \\@docs-private\n */\nexport class AnimationDurations {\n  static COMPLEX = '375ms';\n  static ENTERING = '225ms';\n  static EXITING = '195ms';\n}\n\nfunction AnimationDurations_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationDurations.COMPLEX;\n/** @type {?} */\nAnimationDurations.ENTERING;\n/** @type {?} */\nAnimationDurations.EXITING;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CdkMonitorFocus, FOCUS_ORIGIN_MONITOR_PROVIDER} from './focus-origin-monitor';\nimport {PlatformModule} from '../platform/index';\nexport class StyleModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [PlatformModule],\n  declarations: [CdkMonitorFocus],\n  exports: [CdkMonitorFocus],\n  providers: [FOCUS_ORIGIN_MONITOR_PROVIDER],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StyleModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStyleModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStyleModule.ctorParameters;\n}\n\n\n\nexport {TOUCH_BUFFER_MS,FocusOrigin,FocusOriginMonitor,CdkMonitorFocus,FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY,FOCUS_ORIGIN_MONITOR_PROVIDER} from './focus-origin-monitor';\nexport {applyCssTransform} from './apply-transform';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Applies a CSS transform to an element, including browser-prefixed properties.\n * @param {?} element\n * @param {?} transformValue\n * @return {?}\n */\nexport function applyCssTransform(element: HTMLElement, transformValue: string) {\n  // It's important to trim the result, because the browser will ignore the set operation\n  // if the string contains only whitespace.\n  let /** @type {?} */ value = transformValue.trim();\n\n  element.style.transform = value;\n  element.style.webkitTransform = value;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Injectable,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  Renderer2,\n  SkipSelf,\n} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {Subscription} from 'rxjs/Subscription';\nimport {Platform} from '../platform/platform';\nimport {of as observableOf} from 'rxjs/observable/of';\n\n\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\nexport const /** @type {?} */ TOUCH_BUFFER_MS = 650;\n\n\nexport type FocusOrigin = 'touch' | 'mouse' | 'keyboard' | 'program' | null;\n\n\ntype MonitoredElementInfo = {\n  unlisten: Function,\n  checkChildren: boolean,\n  renderer: Renderer2,\n  subject: Subject<FocusOrigin>\n};\n/**\n * Monitors mouse and keyboard events to determine the cause of focus events.\n */\nexport class FocusOriginMonitor {\n/**\n * The focus origin that the next focus event is a result of.\n */\nprivate _origin: FocusOrigin = null;\n/**\n * The FocusOrigin of the last focus event tracked by the FocusOriginMonitor.\n */\nprivate _lastFocusOrigin: FocusOrigin;\n/**\n * Whether the window has just been focused.\n */\nprivate _windowFocused = false;\n/**\n * The target of the last touch event.\n */\nprivate _lastTouchTarget: EventTarget | null;\n/**\n * The timeout id of the touch timeout, used to cancel timeout later.\n */\nprivate _touchTimeout: number;\n/**\n * Weak map of elements being monitored to their info.\n */\nprivate _elementInfo = new WeakMap<Element, MonitoredElementInfo>();\n/**\n * @param {?} _ngZone\n * @param {?} _platform\n */\nconstructor(private _ngZone: NgZone,\nprivate _platform: Platform) {\n    this._ngZone.runOutsideAngular(() => this._registerDocumentEvents());\n  }\n/**\n * Monitors focus on an element and applies appropriate CSS classes.\n * @param {?} element The element to monitor\n * @param {?} renderer The renderer to use to apply CSS classes to the element.\n * @param {?} checkChildren Whether to count the element as focused when its children are focused.\n * @return {?} An observable that emits when the focus state of the element changes.\n *     When the element is blurred, null will be emitted.\n */\nmonitor(\n      element: HTMLElement,\n      renderer: Renderer2,\n      checkChildren: boolean): Observable<FocusOrigin> {\n    // Do nothing if we're not on the browser platform.\n    if (!this._platform.isBrowser) {\n      return observableOf(null);\n    }\n    // Check if we're already monitoring this element.\n    if (this._elementInfo.has(element)) {\n      let /** @type {?} */ cachedInfo = this._elementInfo.get(element); /** @type {?} */((\n      cachedInfo)).checkChildren = checkChildren;\n      return /** @type {?} */(( cachedInfo)).subject.asObservable();\n    }\n\n    // Create monitored element info.\n    let /** @type {?} */ info: MonitoredElementInfo = {\n      unlisten: () => {},\n      checkChildren: checkChildren,\n      renderer: renderer,\n      subject: new Subject<FocusOrigin>()\n    };\n    this._elementInfo.set(element, info);\n\n    // Start listening. We need to listen in capture phase since focus events don't bubble.\n    let /** @type {?} */ focusListener = (event: FocusEvent) => this._onFocus(event, element);\n    let /** @type {?} */ blurListener = (event: FocusEvent) => this._onBlur(event, element);\n    this._ngZone.runOutsideAngular(() => {\n      element.addEventListener('focus', focusListener, true);\n      element.addEventListener('blur', blurListener, true);\n    });\n\n    // Create an unlisten function for later.\n    info.unlisten = () => {\n      element.removeEventListener('focus', focusListener, true);\n      element.removeEventListener('blur', blurListener, true);\n    };\n\n    return info.subject.asObservable();\n  }\n/**\n * Stops monitoring an element and removes all focus classes.\n * @param {?} element The element to stop monitoring.\n * @return {?}\n */\nstopMonitoring(element: HTMLElement): void {\n    let /** @type {?} */ elementInfo = this._elementInfo.get(element);\n\n    if (elementInfo) {\n      elementInfo.unlisten();\n      elementInfo.subject.complete();\n\n      this._setClasses(element);\n      this._elementInfo.delete(element);\n    }\n  }\n/**\n * Focuses the element via the specified focus origin.\n * @param {?} element The element to focus.\n * @param {?} origin The focus origin.\n * @return {?}\n */\nfocusVia(element: HTMLElement, origin: FocusOrigin): void {\n    this._setOriginForCurrentEventQueue(origin);\n    element.focus();\n  }\n/**\n * Register necessary event listeners on the document and window.\n * @return {?}\n */\nprivate _registerDocumentEvents() {\n    // Do nothing if we're not on the browser platform.\n    if (!this._platform.isBrowser) {\n      return;\n    }\n\n    // Note: we listen to events in the capture phase so we can detect them even if the user stops\n    // propagation.\n\n    // On keydown record the origin and clear any touch event that may be in progress.\n    document.addEventListener('keydown', () => {\n      this._lastTouchTarget = null;\n      this._setOriginForCurrentEventQueue('keyboard');\n    }, true);\n\n    // On mousedown record the origin only if there is not touch target, since a mousedown can\n    // happen as a result of a touch event.\n    document.addEventListener('mousedown', () => {\n      if (!this._lastTouchTarget) {\n        this._setOriginForCurrentEventQueue('mouse');\n      }\n    }, true);\n\n    // When the touchstart event fires the focus event is not yet in the event queue. This means\n    // we can't rely on the trick used above (setting timeout of 0ms). Instead we wait 650ms to\n    // see if a focus happens.\n    document.addEventListener('touchstart', (event: Event) => {\n      if (this._touchTimeout != null) {\n        clearTimeout(this._touchTimeout);\n      }\n      this._lastTouchTarget = event.target;\n      this._touchTimeout = setTimeout(() => this._lastTouchTarget = null, TOUCH_BUFFER_MS);\n    }, true);\n\n    // Make a note of when the window regains focus, so we can restore the origin info for the\n    // focused element.\n    window.addEventListener('focus', () => {\n      this._windowFocused = true;\n      setTimeout(() => this._windowFocused = false, 0);\n    });\n  }\n/**\n * Sets the focus classes on the element based on the given focus origin.\n * @param {?} element The element to update the classes on.\n * @param {?=} origin The focus origin.\n * @return {?}\n */\nprivate _setClasses(element: HTMLElement, origin?: FocusOrigin): void {\n    const /** @type {?} */ elementInfo = this._elementInfo.get(element);\n\n    if (elementInfo) {\n      const /** @type {?} */ toggleClass = (className: string, shouldSet: boolean) => {\n        shouldSet ? elementInfo.renderer.addClass(element, className) :\n                    elementInfo.renderer.removeClass(element, className);\n      };\n\n      toggleClass('cdk-focused', !!origin);\n      toggleClass('cdk-touch-focused', origin === 'touch');\n      toggleClass('cdk-keyboard-focused', origin === 'keyboard');\n      toggleClass('cdk-mouse-focused', origin === 'mouse');\n      toggleClass('cdk-program-focused', origin === 'program');\n    }\n  }\n/**\n * Sets the origin and schedules an async function to clear it at the end of the event queue.\n * @param {?} origin The origin to set.\n * @return {?}\n */\nprivate _setOriginForCurrentEventQueue(origin: FocusOrigin): void {\n    this._origin = origin;\n    setTimeout(() => this._origin = null, 0);\n  }\n/**\n * Checks whether the given focus event was caused by a touchstart event.\n * @param {?} event The focus event to check.\n * @return {?} Whether the event was caused by a touch.\n */\nprivate _wasCausedByTouch(event: FocusEvent): boolean {\n    // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n    // Consider the following dom structure:\n    //\n    // <div #parent tabindex=\"0\" cdkFocusClasses>\n    //   <div #child (click)=\"#parent.focus()\"></div>\n    // </div>\n    //\n    // If the user touches the #child element and the #parent is programmatically focused as a\n    // result, this code will still consider it to have been caused by the touch event and will\n    // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n    // relatively small edge-case that can be worked around by using\n    // focusVia(parentEl, renderer,  'program') to focus the parent element.\n    //\n    // If we decide that we absolutely must handle this case correctly, we can do so by listening\n    // for the first focus event after the touchstart, and then the first blur event after that\n    // focus event. When that blur event fires we know that whatever follows is not a result of the\n    // touchstart.\n    let /** @type {?} */ focusTarget = event.target;\n    return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n        (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n  }\n/**\n * Handles focus events on a registered element.\n * @param {?} event The focus event.\n * @param {?} element The monitored element.\n * @return {?}\n */\nprivate _onFocus(event: FocusEvent, element: HTMLElement) {\n    // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n    // focus event affecting the monitored element. If we want to use the origin of the first event\n    // instead we should check for the cdk-focused class here and return if the element already has\n    // it. (This only matters for elements that have includesChildren = true).\n\n    // If we are not counting child-element-focus as focused, make sure that the event target is the\n    // monitored element itself.\n    const /** @type {?} */ elementInfo = this._elementInfo.get(element);\n    if (!elementInfo || (!elementInfo.checkChildren && element !== event.target)) {\n      return;\n    }\n\n    // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n    // 1) The window has just regained focus, in which case we want to restore the focused state of\n    //    the element from before the window blurred.\n    // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n    // 3) The element was programmatically focused, in which case we should mark the origin as\n    //    'program'.\n    if (!this._origin) {\n      if (this._windowFocused && this._lastFocusOrigin) {\n        this._origin = this._lastFocusOrigin;\n      } else if (this._wasCausedByTouch(event)) {\n        this._origin = 'touch';\n      } else {\n        this._origin = 'program';\n      }\n    }\n\n    this._setClasses(element, this._origin);\n    elementInfo.subject.next(this._origin);\n    this._lastFocusOrigin = this._origin;\n    this._origin = null;\n  }\n/**\n * Handles blur events on a registered element.\n * @param {?} event The blur event.\n * @param {?} element The monitored element.\n * @return {?}\n */\n_onBlur(event: FocusEvent, element: HTMLElement) {\n    // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n    // order to focus another child of the monitored element.\n    const /** @type {?} */ elementInfo = this._elementInfo.get(element);\n\n    if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n        element.contains(event.relatedTarget))) {\n      return;\n    }\n\n    this._setClasses(element);\n    elementInfo.subject.next(null);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n{type: Platform, },\n];\n}\n\nfunction FocusOriginMonitor_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusOriginMonitor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusOriginMonitor.ctorParameters;\n/**\n * The focus origin that the next focus event is a result of.\n * @type {?}\n */\nFocusOriginMonitor.prototype._origin;\n/**\n * The FocusOrigin of the last focus event tracked by the FocusOriginMonitor.\n * @type {?}\n */\nFocusOriginMonitor.prototype._lastFocusOrigin;\n/**\n * Whether the window has just been focused.\n * @type {?}\n */\nFocusOriginMonitor.prototype._windowFocused;\n/**\n * The target of the last touch event.\n * @type {?}\n */\nFocusOriginMonitor.prototype._lastTouchTarget;\n/**\n * The timeout id of the touch timeout, used to cancel timeout later.\n * @type {?}\n */\nFocusOriginMonitor.prototype._touchTimeout;\n/**\n * Weak map of elements being monitored to their info.\n * @type {?}\n */\nFocusOriginMonitor.prototype._elementInfo;\n/** @type {?} */\nFocusOriginMonitor.prototype._ngZone;\n/** @type {?} */\nFocusOriginMonitor.prototype._platform;\n}\n\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n * \n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nexport class CdkMonitorFocus implements OnDestroy {\nprivate _monitorSubscription: Subscription;\n   cdkFocusChange = new EventEmitter<FocusOrigin>();\n/**\n * @param {?} _elementRef\n * @param {?} _focusOriginMonitor\n * @param {?} renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _focusOriginMonitor: FocusOriginMonitor,\n              renderer: Renderer2) {\n    this._monitorSubscription = this._focusOriginMonitor.monitor(\n        this._elementRef.nativeElement, renderer,\n        this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n        .subscribe(origin => this.cdkFocusChange.emit(origin));\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._focusOriginMonitor.stopMonitoring(this._elementRef.nativeElement);\n    this._monitorSubscription.unsubscribe();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: FocusOriginMonitor, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'cdkFocusChange': [{ type: Output },],\n};\n}\n\nfunction CdkMonitorFocus_tsickle_Closure_declarations() {\n/** @type {?} */\nCdkMonitorFocus.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCdkMonitorFocus.ctorParameters;\n/** @type {?} */\nCdkMonitorFocus.propDecorators;\n/** @type {?} */\nCdkMonitorFocus.prototype._monitorSubscription;\n/** @type {?} */\nCdkMonitorFocus.prototype.cdkFocusChange;\n/** @type {?} */\nCdkMonitorFocus.prototype._elementRef;\n/** @type {?} */\nCdkMonitorFocus.prototype._focusOriginMonitor;\n}\n\n/**\n * \\@docs-private\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @param {?} platform\n * @return {?}\n */\nexport function FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY(\n    parentDispatcher: FocusOriginMonitor, ngZone: NgZone, platform: Platform) {\n  return parentDispatcher || new FocusOriginMonitor(ngZone, platform);\n}\n/**\n * \\@docs-private\n */\nexport const FOCUS_ORIGIN_MONITOR_PROVIDER = {\n  // If there is already a FocusOriginMonitor available, use that. Otherwise, provide a new one.\n  provide: FocusOriginMonitor,\n  deps: [[new Optional(), new SkipSelf(), FocusOriginMonitor], NgZone, Platform],\n  useFactory: FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable, Optional, SkipSelf} from '@angular/core';\n\n\n// Users of the Dispatcher never need to see this type, but TypeScript requires it to be exported.\nexport type UniqueSelectionDispatcherListener = (id: string, name: string) => void;\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n * \n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nexport class UniqueSelectionDispatcher {\nprivate _listeners: UniqueSelectionDispatcherListener[] = [];\n/**\n * Notify other items that selection for the given name has been set.\n * @param {?} id ID of the item.\n * @param {?} name Name of the item.\n * @return {?}\n */\nnotify(id: string, name: string) {\n    for (let /** @type {?} */ listener of this._listeners) {\n      listener(id, name);\n    }\n  }\n/**\n * Listen for future changes to item selection.\n * @param {?} listener\n * @return {?} Function used to deregister listener\n * \n */\nlisten(listener: UniqueSelectionDispatcherListener): () => void {\n    this._listeners.push(listener);\n    return () => {\n      this._listeners = this._listeners.filter((registered: UniqueSelectionDispatcherListener) => {\n        return listener !== registered;\n      });\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction UniqueSelectionDispatcher_tsickle_Closure_declarations() {\n/** @type {?} */\nUniqueSelectionDispatcher.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUniqueSelectionDispatcher.ctorParameters;\n/** @type {?} */\nUniqueSelectionDispatcher.prototype._listeners;\n}\n\n/**\n * \\@docs-private\n * @param {?} parentDispatcher\n * @return {?}\n */\nexport function UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY(\n    parentDispatcher: UniqueSelectionDispatcher) {\n  return parentDispatcher || new UniqueSelectionDispatcher();\n}\n/**\n * \\@docs-private\n */\nexport const UNIQUE_SELECTION_DISPATCHER_PROVIDER = {\n  // If there is already a dispatcher available, use that. Otherwise, provide a new one.\n  provide: UniqueSelectionDispatcher,\n  deps: [[new Optional(), new SkipSelf(), UniqueSelectionDispatcher]],\n  useFactory: UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Subject} from 'rxjs/Subject';\n/**\n * Class to be used to power selecting one or more options from a list.\n * \\@docs-private\n */\nexport class SelectionModel<T> {\n/**\n * Currently-selected values.\n */\nprivate _selection: Set<T> = new Set();\n/**\n * Keeps track of the deselected options that haven't been emitted by the change event.\n */\nprivate _deselectedToEmit: T[] = [];\n/**\n * Keeps track of the selected option that haven't been emitted by the change event.\n */\nprivate _selectedToEmit: T[] = [];\n/**\n * Cache for the array value of the selected items.\n */\nprivate _selected: T[] | null;\n/**\n * Selected value(s).\n * @return {?}\n */\nget selected(): T[] {\n    if (!this._selected) {\n      this._selected = Array.from(this._selection.values());\n    }\n\n    return this._selected;\n  }\n/**\n * Event emitted when the value has changed.\n */\nonChange: Subject<SelectionChange<T>> | null = this._emitChanges ? new Subject() : null;\n/**\n * @param {?=} _isMulti\n * @param {?=} initiallySelectedValues\n * @param {?=} _emitChanges\n */\nconstructor(\nprivate _isMulti = false,\n    initiallySelectedValues?: T[],\nprivate _emitChanges = true) {\n\n    if (initiallySelectedValues) {\n      if (_isMulti) {\n        initiallySelectedValues.forEach(value => this._markSelected(value));\n      } else {\n        this._markSelected(initiallySelectedValues[0]);\n      }\n\n      // Clear the array in order to avoid firing the change event for preselected values.\n      this._selectedToEmit.length = 0;\n    }\n  }\n/**\n * Selects a value or an array of values.\n * @param {?} value\n * @return {?}\n */\nselect(value: T): void {\n    this._markSelected(value);\n    this._emitChangeEvent();\n  }\n/**\n * Deselects a value or an array of values.\n * @param {?} value\n * @return {?}\n */\ndeselect(value: T): void {\n    this._unmarkSelected(value);\n    this._emitChangeEvent();\n  }\n/**\n * Toggles a value between selected and deselected.\n * @param {?} value\n * @return {?}\n */\ntoggle(value: T): void {\n    this.isSelected(value) ? this.deselect(value) : this.select(value);\n  }\n/**\n * Clears all of the selected values.\n * @return {?}\n */\nclear(): void {\n    this._unmarkAll();\n    this._emitChangeEvent();\n  }\n/**\n * Determines whether a value is selected.\n * @param {?} value\n * @return {?}\n */\nisSelected(value: T): boolean {\n    return this._selection.has(value);\n  }\n/**\n * Determines whether the model does not have a value.\n * @return {?}\n */\nisEmpty(): boolean {\n    return this._selection.size === 0;\n  }\n/**\n * Determines whether the model has a value.\n * @return {?}\n */\nhasValue(): boolean {\n    return !this.isEmpty();\n  }\n/**\n * Sorts the selected values based on a predicate function.\n * @param {?=} predicate\n * @return {?}\n */\nsort(predicate?: (a: T, b: T) => number): void {\n    if (this._isMulti && this._selected) {\n      this._selected.sort(predicate);\n    }\n  }\n/**\n * Emits a change event and clears the records of selected and deselected values.\n * @return {?}\n */\nprivate _emitChangeEvent() {\n    if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n      let /** @type {?} */ eventData = new SelectionChange(this._selectedToEmit, this._deselectedToEmit);\n\n      if (this.onChange) {\n        this.onChange.next(eventData);\n      }\n\n      this._deselectedToEmit = [];\n      this._selectedToEmit = [];\n    }\n\n    this._selected = null;\n  }\n/**\n * Selects a value.\n * @param {?} value\n * @return {?}\n */\nprivate _markSelected(value: T) {\n    if (!this.isSelected(value)) {\n      if (!this._isMulti) {\n        this._unmarkAll();\n      }\n\n      this._selection.add(value);\n\n      if (this._emitChanges) {\n        this._selectedToEmit.push(value);\n      }\n    }\n  }\n/**\n * Deselects a value.\n * @param {?} value\n * @return {?}\n */\nprivate _unmarkSelected(value: T) {\n    if (this.isSelected(value)) {\n      this._selection.delete(value);\n\n      if (this._emitChanges) {\n        this._deselectedToEmit.push(value);\n      }\n    }\n  }\n/**\n * Clears out the selected values.\n * @return {?}\n */\nprivate _unmarkAll() {\n    if (!this.isEmpty()) {\n      this._selection.forEach(value => this._unmarkSelected(value));\n    }\n  }\n}\n\nfunction SelectionModel_tsickle_Closure_declarations() {\n/**\n * Currently-selected values.\n * @type {?}\n */\nSelectionModel.prototype._selection;\n/**\n * Keeps track of the deselected options that haven't been emitted by the change event.\n * @type {?}\n */\nSelectionModel.prototype._deselectedToEmit;\n/**\n * Keeps track of the selected option that haven't been emitted by the change event.\n * @type {?}\n */\nSelectionModel.prototype._selectedToEmit;\n/**\n * Cache for the array value of the selected items.\n * @type {?}\n */\nSelectionModel.prototype._selected;\n/**\n * Event emitted when the value has changed.\n * @type {?}\n */\nSelectionModel.prototype.onChange;\n/** @type {?} */\nSelectionModel.prototype._isMulti;\n/** @type {?} */\nSelectionModel.prototype._emitChanges;\n}\n\n/**\n * Describes an event emitted when the value of a MdSelectionModel has changed.\n * \\@docs-private\n */\nexport class SelectionChange<T> {\n/**\n * @param {?=} added\n * @param {?=} removed\n */\nconstructor(public added?: T[],\npublic removed?: T[]) { }\n}\n\nfunction SelectionChange_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionChange.prototype.added;\n/** @type {?} */\nSelectionChange.prototype.removed;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable, isDevMode} from '@angular/core';\nimport {HammerGestureConfig} from '@angular/platform-browser';\nimport {HammerStatic, HammerInstance, Recognizer, RecognizerStatic} from './gesture-annotations';\nexport class GestureConfig extends HammerGestureConfig {\nprivate _hammer: HammerStatic = typeof window !== 'undefined' ? ( /** @type {?} */((window as any))).Hammer : null;\n\n  /* List of new event names to add to the gesture support list */\n  events: string[] = this._hammer ? [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n  ] : [];\nconstructor() {\n    super();\n\n    if (!this._hammer && isDevMode()) {\n      console.warn(\n        'Could not find HammerJS. Certain Angular Material ' +\n        'components may not work correctly.'\n      );\n    }\n  }\n/**\n * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n * \n * Our gesture names come from the Material Design gestures spec:\n * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\n * \n * More information on default recognizers can be found in Hammer docs:\n * http://hammerjs.github.io/recognizer-pan/\n * http://hammerjs.github.io/recognizer-press/\n * \n * @param {?} element Element to which to assign the new HammerJS gestures.\n * @return {?} Newly-created HammerJS instance.\n */\nbuildHammer(element: HTMLElement): HammerInstance {\n    const /** @type {?} */ mc = new this._hammer(element);\n\n    // Default Hammer Recognizers.\n    let /** @type {?} */ pan = new this._hammer.Pan();\n    let /** @type {?} */ swipe = new this._hammer.Swipe();\n    let /** @type {?} */ press = new this._hammer.Press();\n\n    // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n    // Otherwise the previous `recognizeWith` will be dropped.\n    // TODO: Confirm threshold numbers with Material Design UX Team\n    let /** @type {?} */ slide = this._createRecognizer(pan, {event: 'slide', threshold: 0}, swipe);\n    let /** @type {?} */ longpress = this._createRecognizer(press, {event: 'longpress', time: 500});\n\n    // Overwrite the default `pan` event to use the swipe event.\n    pan.recognizeWith(swipe);\n\n    // Add customized gestures to Hammer manager\n    mc.add([swipe, press, pan, slide, longpress]);\n\n    return /** @type {?} */(( mc as HammerInstance));\n  }\n/**\n * Creates a new recognizer, without affecting the default recognizers of HammerJS\n * @param {?} base\n * @param {?} options\n * @param {...?} inheritances\n * @return {?}\n */\nprivate _createRecognizer(base: Recognizer, options: any, ...inheritances: Recognizer[]) {\n    let /** @type {?} */ recognizer = new ( /** @type {?} */((base.constructor as RecognizerStatic)))(options);\n\n    inheritances.push(base);\n    inheritances.forEach(item => recognizer.recognizeWith(item));\n\n    return recognizer;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction GestureConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nGestureConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGestureConfig.ctorParameters;\n/** @type {?} */\nGestureConfig.prototype._hammer;\n/** @type {?} */\nGestureConfig.prototype.events;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MdRippleModule} from '../ripple/index';\nimport {MdSelectionModule} from '../selection/index';\nimport {MdOption} from './option';\nimport {MdOptgroup} from './optgroup';\nexport class MdOptionModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdRippleModule, CommonModule, MdSelectionModule],\n  exports: [MdOption, MdOptgroup],\n  declarations: [MdOption, MdOptgroup]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdOptionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdOptionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdOptionModule.ctorParameters;\n}\n\n\n\nexport {MdOptionSelectionChange,MdOption} from './option';\nexport {MdOptgroupBase,_MdOptgroupMixinBase,MdOptgroup} from './optgroup';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n  Inject,\n  Optional,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {ENTER, SPACE} from '../keyboard/keycodes';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {MATERIAL_COMPATIBILITY_MODE} from '../../core/compatibility/compatibility';\nimport {MdOptgroup} from './optgroup';\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MdOption when selected or deselected.\n */\nexport class MdOptionSelectionChange {\n/**\n * @param {?} source\n * @param {?=} isUserInput\n */\nconstructor(public source: MdOption,\npublic isUserInput = false) { }\n}\n\nfunction MdOptionSelectionChange_tsickle_Closure_declarations() {\n/** @type {?} */\nMdOptionSelectionChange.prototype.source;\n/** @type {?} */\nMdOptionSelectionChange.prototype.isUserInput;\n}\n\n/**\n * Single option inside of a `<md-select>` element.\n */\nexport class MdOption {\nprivate _selected: boolean = false;\nprivate _active: boolean = false;\nprivate _multiple: boolean = false;\nprivate _disableRipple: boolean = false;\n/**\n * Whether the option is disabled.\n */\nprivate _disabled: boolean = false;\nprivate _id: string = `md-option-${_uniqueIdCounter++}`;\n/**\n * Whether the wrapping component is in multiple selection mode.\n * @return {?}\n */\nget multiple() { return this._multiple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset multiple(value: boolean) {\n    if (value !== this._multiple) {\n      this._multiple = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * The unique ID of the option.\n * @return {?}\n */\nget id() { return this._id; }\n/**\n * Whether or not the option is currently selected.\n * @return {?}\n */\nget selected(): boolean { return this._selected; }\n/**\n * The form value of the option.\n */\nvalue: any;\n/**\n * Whether the option is disabled.\n * @return {?}\n */\nget disabled() { return (this.group && this.group.disabled) || this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n/**\n * Whether ripples for the option are disabled.\n * @return {?}\n */\nget disableRipple() { return this._disableRipple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disableRipple(value: boolean) {\n    this._disableRipple = value;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Event emitted when the option is selected or deselected.\n */\nonSelectionChange = new EventEmitter<MdOptionSelectionChange>();\n/**\n * @param {?} _element\n * @param {?} _changeDetectorRef\n * @param {?} group\n * @param {?} _isCompatibilityMode\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _changeDetectorRef: ChangeDetectorRef,\npublic readonly group: MdOptgroup,\npublic _isCompatibilityMode: boolean) {}\n/**\n * Whether or not the option is currently active and ready to be selected.\n * An active option displays styles as if it is focused, but the\n * focus is actually retained somewhere else. This comes in handy\n * for components like autocomplete where focus must remain on the input.\n * @return {?}\n */\nget active(): boolean {\n    return this._active;\n  }\n/**\n * The displayed value of the option. It is necessary to show the selected option in the\n * select's trigger.\n * @return {?}\n */\nget viewValue(): string {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._getHostElement().textContent || '').trim();\n  }\n/**\n * Selects the option.\n * @return {?}\n */\nselect(): void {\n    this._selected = true;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent();\n  }\n/**\n * Deselects the option.\n * @return {?}\n */\ndeselect(): void {\n    this._selected = false;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent();\n  }\n/**\n * Sets focus onto this option.\n * @return {?}\n */\nfocus(): void {\n    const /** @type {?} */ element = this._getHostElement();\n\n    if (typeof element.focus === 'function') {\n      element.focus();\n    }\n  }\n/**\n * This method sets display styles on the option to make it appear\n * active. This is used by the ActiveDescendantKeyManager so key\n * events will display the proper options as active on arrow key events.\n * @return {?}\n */\nsetActiveStyles(): void {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * This method removes display styles on the option that made it appear\n * active. This is used by the ActiveDescendantKeyManager so key\n * events will display the proper options as active on arrow key events.\n * @return {?}\n */\nsetInactiveStyles(): void {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * Gets the label to be used when determining whether the option should be focused.\n * @return {?}\n */\ngetLabel(): string {\n    return this.viewValue;\n  }\n/**\n * Ensures the option is selected when activated from the keyboard.\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === ENTER || event.keyCode === SPACE) {\n      this._selectViaInteraction();\n\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n/**\n * Selects the option while indicating the selection came from the user. Used to\n * determine if the select's view -> model callback should be invoked.\n * @return {?}\n */\n_selectViaInteraction(): void {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n/**\n * Returns the correct tabindex for the option depending on disabled state.\n * @return {?}\n */\n_getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n/**\n * Gets the host DOM element.\n * @return {?}\n */\n_getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n/**\n * Emits the selection change event.\n * @param {?=} isUserInput\n * @return {?}\n */\nprivate _emitSelectionChangeEvent(isUserInput = false): void {\n    this.onSelectionChange.emit(new MdOptionSelectionChange(this, isUserInput));\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-option, mat-option',\n  host: {\n    'role': 'option',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[class.mat-selected]': 'selected',\n    '[class.mat-option-multiple]': 'multiple',\n    '[class.mat-active]': 'active',\n    '[id]': 'id',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[class.mat-option-disabled]': 'disabled',\n    '(click)': '_selectViaInteraction()',\n    '(keydown)': '_handleKeydown($event)',\n    'class': 'mat-option',\n  },\n  templateUrl: 'option.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n{type: MdOptgroup, decorators: [{ type: Optional }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_COMPATIBILITY_MODE, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'disabled': [{ type: Input },],\n'onSelectionChange': [{ type: Output },],\n};\n}\n\nfunction MdOption_tsickle_Closure_declarations() {\n/** @type {?} */\nMdOption.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdOption.ctorParameters;\n/** @type {?} */\nMdOption.propDecorators;\n/** @type {?} */\nMdOption.prototype._selected;\n/** @type {?} */\nMdOption.prototype._active;\n/** @type {?} */\nMdOption.prototype._multiple;\n/** @type {?} */\nMdOption.prototype._disableRipple;\n/**\n * Whether the option is disabled.\n * @type {?}\n */\nMdOption.prototype._disabled;\n/** @type {?} */\nMdOption.prototype._id;\n/**\n * The form value of the option.\n * @type {?}\n */\nMdOption.prototype.value;\n/**\n * Event emitted when the option is selected or deselected.\n * @type {?}\n */\nMdOption.prototype.onSelectionChange;\n/** @type {?} */\nMdOption.prototype._element;\n/** @type {?} */\nMdOption.prototype._changeDetectorRef;\n/** @type {?} */\nMdOption.prototype.group;\n/** @type {?} */\nMdOption.prototype._isCompatibilityMode;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Component, ViewEncapsulation, Input, ChangeDetectionStrategy} from '@angular/core';\nimport {mixinDisabled, CanDisable} from '../common-behaviors/disabled';\n/**\n * \\@docs-private\n */\nexport class MdOptgroupBase { }\nexport const /** @type {?} */ _MdOptgroupMixinBase = mixinDisabled(MdOptgroupBase);\n\n// Counter for unique group ids.\nlet /** @type {?} */ _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `md-option`.\n */\nexport class MdOptgroup extends _MdOptgroupMixinBase implements CanDisable {\n/**\n * Label for the option group.\n */\nlabel: string;\n/**\n * Unique id for the underlying label.\n */\n_labelId: string = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-optgroup, mat-optgroup',\n  templateUrl: 'optgroup.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  host: {\n    'class': 'mat-optgroup',\n    'role': 'group',\n    '[class.mat-optgroup-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-labelledby]': '_labelId',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'label': [{ type: Input },],\n};\n}\n\nfunction MdOptgroup_tsickle_Closure_declarations() {\n/** @type {?} */\nMdOptgroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdOptgroup.ctorParameters;\n/** @type {?} */\nMdOptgroup.propDecorators;\n/**\n * Label for the option group.\n * @type {?}\n */\nMdOptgroup.prototype.label;\n/**\n * Unique id for the underlying label.\n * @type {?}\n */\nMdOptgroup.prototype._labelId;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisable {\n  disabled: boolean;\n}\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<CanDisable> & T {\n  return class extends base {\nprivate _disabled: boolean = false;\n/**\n * @return {?}\n */\nget disabled() { return this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n/**\n * @param {...?} args\n */\nconstructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {MdPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\nexport class MdSelectionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [MdPseudoCheckbox],\n  declarations: [MdPseudoCheckbox]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdSelectionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSelectionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSelectionModule.ctorParameters;\n}\n\n\n\nexport {MdPseudoCheckboxState,MdPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Component, ViewEncapsulation, Input, ChangeDetectionStrategy} from '@angular/core';\n\nexport type MdPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n * \n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with <md-checkbox> and should *not* be used if the user would directly interact\n * with the checkbox. The pseudo-checkbox should only be used as an implementation detail of\n * more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nexport class MdPseudoCheckbox {\n/**\n * Display state of the checkbox.\n */\nstate: MdPseudoCheckboxState = 'unchecked';\n/**\n * Whether the checkbox is disabled.\n */\ndisabled: boolean = false;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'md-pseudo-checkbox, mat-pseudo-checkbox',\n  styleUrls: ['pseudo-checkbox.css'],\n  template: '',\n  host: {\n    'class': 'mat-pseudo-checkbox',\n    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'state': [{ type: Input },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction MdPseudoCheckbox_tsickle_Closure_declarations() {\n/** @type {?} */\nMdPseudoCheckbox.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdPseudoCheckbox.ctorParameters;\n/** @type {?} */\nMdPseudoCheckbox.propDecorators;\n/**\n * Display state of the checkbox.\n * @type {?}\n */\nMdPseudoCheckbox.prototype.state;\n/**\n * Whether the checkbox is disabled.\n * @type {?}\n */\nMdPseudoCheckbox.prototype.disabled;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {ScrollDispatchModule, VIEWPORT_RULER_PROVIDER} from '@angular/cdk/overlay';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {MdCommonModule} from '../common-behaviors/common-module';\nimport {MdRipple} from './ripple';\n\nexport {MdRipple, RippleGlobalOptions, MD_RIPPLE_GLOBAL_OPTIONS} from './ripple';\nexport {RippleRef, RippleState} from './ripple-ref';\nexport {RippleConfig, RIPPLE_FADE_IN_DURATION, RIPPLE_FADE_OUT_DURATION} from './ripple-renderer';\nexport class MdRippleModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdCommonModule, PlatformModule, ScrollDispatchModule],\n  exports: [MdRipple, MdCommonModule],\n  declarations: [MdRipple],\n  providers: [VIEWPORT_RULER_PROVIDER],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdRippleModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRippleModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdRippleModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  Inject,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  InjectionToken,\n  Optional,\n} from '@angular/core';\nimport {ViewportRuler} from '@angular/cdk/overlay';\nimport {Platform} from '@angular/cdk/platform';\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\nimport {RippleRef} from './ripple-ref';\n\nexport interface RippleGlobalOptions {\n  disabled?: boolean;\n  baseSpeedFactor?: number;\n}\n/**\n * Injection token that can be used to specify the global ripple options.\n */\nexport const MD_RIPPLE_GLOBAL_OPTIONS =\n    new InjectionToken<RippleGlobalOptions>('md-ripple-global-options');\nexport class MdRipple implements OnChanges, OnDestroy {\n\n  /**\n   * The element that triggers the ripple when click events are received. Defaults to the\n   * directive's host element.\n   */\n  // Prevent TS metadata emit from referencing HTMLElement in ripple.js\n  // Otherwise running this code in a Node environment (e.g Universal) will not work.\n   trigger: HTMLElement|HTMLElement;\n/**\n * Whether the ripple always originates from the center of the host element's bounds, rather\n * than originating from the location of the click event.\n */\ncentered: boolean;\n/**\n * Whether click events will not trigger the ripple. Ripples can be still launched manually\n * by using the `launch()` method.\n */\ndisabled: boolean;\n/**\n * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n * will be the distance from the center of the ripple to the furthest corner of the host element's\n * bounding rectangle.\n */\nradius: number = 0;\n/**\n * If set, the normal duration of ripple animations is divided by this value. For example,\n * setting it to 0.5 will cause the animations to take twice as long.\n * A changed speedFactor will not modify the fade-out duration of the ripples.\n */\nspeedFactor: number = 1;\n/**\n * Custom color for ripples.\n */\ncolor: string;\n/**\n * Whether foreground ripples should be visible outside the component's bounds.\n */\nunbounded: boolean;\n/**\n * @return {?}\n */\nget _matRippleTrigger() { return this.trigger; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleTrigger(v) { this.trigger = v; }\n/**\n * @return {?}\n */\nget _matRippleCentered() { return this.centered; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleCentered(v) { this.centered = v; }\n/**\n * @return {?}\n */\nget _matRippleDisabled() { return this.disabled; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleDisabled(v) { this.disabled = v; }\n/**\n * @return {?}\n */\nget _matRippleRadius() { return this.radius; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleRadius(v) { this.radius = v; }\n/**\n * @return {?}\n */\nget _matRippleSpeedFactor() { return this.speedFactor; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleSpeedFactor(v) { this.speedFactor = v; }\n/**\n * @return {?}\n */\nget _matRippleColor() { return this.color; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleColor(v) { this.color = v; }\n/**\n * @return {?}\n */\nget _matRippleUnbounded() { return this.unbounded; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleUnbounded(v) { this.unbounded = v; }\n/**\n * Renderer for the ripple DOM manipulations.\n */\nprivate _rippleRenderer: RippleRenderer;\n/**\n * Options that are set globally for all ripples.\n */\nprivate _globalOptions: RippleGlobalOptions;\n/**\n * @param {?} elementRef\n * @param {?} ngZone\n * @param {?} ruler\n * @param {?} platform\n * @param {?} globalOptions\n */\nconstructor(\n    elementRef: ElementRef,\n    ngZone: NgZone,\n    ruler: ViewportRuler,\n    platform: Platform,\n      globalOptions: RippleGlobalOptions\n  ) {\n    this._rippleRenderer = new RippleRenderer(elementRef, ngZone, ruler, platform);\n    this._globalOptions = globalOptions ? globalOptions : {};\n\n    this._updateRippleRenderer();\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (changes['trigger'] && this.trigger) {\n      this._rippleRenderer.setTriggerElement(this.trigger);\n    }\n\n    this._updateRippleRenderer();\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    // Set the trigger element to null to cleanup all listeners.\n    this._rippleRenderer.setTriggerElement(null);\n  }\n/**\n * Launches a manual ripple at the specified position.\n * @param {?} pageX\n * @param {?} pageY\n * @param {?=} config\n * @return {?}\n */\nlaunch(pageX: number, pageY: number, config = this.rippleConfig): RippleRef {\n    return this._rippleRenderer.fadeInRipple(pageX, pageY, config);\n  }\n/**\n * Fades out all currently showing ripple elements.\n * @return {?}\n */\nfadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n/**\n * Ripple configuration from the directive's input values.\n * @return {?}\n */\nget rippleConfig(): RippleConfig {\n    return {\n      centered: this.centered,\n      speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\n      radius: this.radius,\n      color: this.color\n    };\n  }\n/**\n * Updates the ripple renderer with the latest ripple configuration.\n * @return {?}\n */\n_updateRippleRenderer() {\n    this._rippleRenderer.rippleDisabled = this._globalOptions.disabled || this.disabled;\n    this._rippleRenderer.rippleConfig = this.rippleConfig;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-ripple], [mat-ripple], [mdRipple], [matRipple]',\n  exportAs: 'mdRipple',\n  host: {\n    'class': 'mat-ripple',\n    '[class.mat-ripple-unbounded]': 'unbounded'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n{type: ViewportRuler, },\n{type: Platform, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_RIPPLE_GLOBAL_OPTIONS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'trigger': [{ type: Input, args: ['mdRippleTrigger', ] },],\n'centered': [{ type: Input, args: ['mdRippleCentered', ] },],\n'disabled': [{ type: Input, args: ['mdRippleDisabled', ] },],\n'radius': [{ type: Input, args: ['mdRippleRadius', ] },],\n'speedFactor': [{ type: Input, args: ['mdRippleSpeedFactor', ] },],\n'color': [{ type: Input, args: ['mdRippleColor', ] },],\n'unbounded': [{ type: Input, args: ['mdRippleUnbounded', ] },],\n'_matRippleTrigger': [{ type: Input, args: ['matRippleTrigger', ] },],\n'_matRippleCentered': [{ type: Input, args: ['matRippleCentered', ] },],\n'_matRippleDisabled': [{ type: Input, args: ['matRippleDisabled', ] },],\n'_matRippleRadius': [{ type: Input, args: ['matRippleRadius', ] },],\n'_matRippleSpeedFactor': [{ type: Input, args: ['matRippleSpeedFactor', ] },],\n'_matRippleColor': [{ type: Input, args: ['matRippleColor', ] },],\n'_matRippleUnbounded': [{ type: Input, args: ['matRippleUnbounded', ] },],\n};\n}\n\nfunction MdRipple_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRipple.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdRipple.ctorParameters;\n/** @type {?} */\nMdRipple.propDecorators;\n/** @type {?} */\nMdRipple.prototype.trigger;\n/**\n * Whether the ripple always originates from the center of the host element's bounds, rather\n * than originating from the location of the click event.\n * @type {?}\n */\nMdRipple.prototype.centered;\n/**\n * Whether click events will not trigger the ripple. Ripples can be still launched manually\n * by using the `launch()` method.\n * @type {?}\n */\nMdRipple.prototype.disabled;\n/**\n * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n * will be the distance from the center of the ripple to the furthest corner of the host element's\n * bounding rectangle.\n * @type {?}\n */\nMdRipple.prototype.radius;\n/**\n * If set, the normal duration of ripple animations is divided by this value. For example,\n * setting it to 0.5 will cause the animations to take twice as long.\n * A changed speedFactor will not modify the fade-out duration of the ripples.\n * @type {?}\n */\nMdRipple.prototype.speedFactor;\n/**\n * Custom color for ripples.\n * @type {?}\n */\nMdRipple.prototype.color;\n/**\n * Whether foreground ripples should be visible outside the component's bounds.\n * @type {?}\n */\nMdRipple.prototype.unbounded;\n/**\n * Renderer for the ripple DOM manipulations.\n * @type {?}\n */\nMdRipple.prototype._rippleRenderer;\n/**\n * Options that are set globally for all ripples.\n * @type {?}\n */\nMdRipple.prototype._globalOptions;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ElementRef, NgZone} from '@angular/core';\nimport {Platform} from '@angular/cdk/platform';\nimport {ViewportRuler} from '@angular/cdk/overlay';\nimport {RippleRef, RippleState} from './ripple-ref';\n/**\n * Fade-in duration for the ripples. Can be modified with the speedFactor option.\n */\nexport const RIPPLE_FADE_IN_DURATION = 450;\n/**\n * Fade-out duration for the ripples in milliseconds. This can't be modified by the speedFactor.\n */\nexport const RIPPLE_FADE_OUT_DURATION = 400;\n\nexport type RippleConfig = {\n  color?: string;\n  centered?: boolean;\n  radius?: number;\n  speedFactor?: number;\n  persistent?: boolean;\n};\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nexport class RippleRenderer {\n/**\n * Element where the ripples are being added to.\n */\nprivate _containerElement: HTMLElement;\n/**\n * Element which triggers the ripple elements on mouse events.\n */\nprivate _triggerElement: HTMLElement | null;\n/**\n * Whether the mouse is currently down or not.\n */\nprivate _isMousedown: boolean = false;\n/**\n * Events to be registered on the trigger element.\n */\nprivate _triggerEvents = new Map<string, any>();\n/**\n * Set of currently active ripple references.\n */\nprivate _activeRipples = new Set<RippleRef>();\n/**\n * Ripple config for all ripples created by events.\n */\nrippleConfig: RippleConfig = {};\n/**\n * Whether mouse ripples should be created or not.\n */\nrippleDisabled: boolean = false;\n/**\n * @param {?} elementRef\n * @param {?} _ngZone\n * @param {?} _ruler\n * @param {?} platform\n */\nconstructor(\n      elementRef: ElementRef,\nprivate _ngZone: NgZone,\nprivate _ruler: ViewportRuler,\n      platform: Platform) {\n    // Only do anything if we're on the browser.\n    if (platform.isBrowser) {\n      this._containerElement = elementRef.nativeElement;\n\n      // Specify events which need to be registered on the trigger.\n      this._triggerEvents.set('mousedown', this.onMousedown.bind(this));\n      this._triggerEvents.set('mouseup', this.onMouseup.bind(this));\n      this._triggerEvents.set('mouseleave', this.onMouseLeave.bind(this));\n\n      // By default use the host element as trigger element.\n      this.setTriggerElement(this._containerElement);\n    }\n  }\n/**\n * Fades in a ripple at the given coordinates.\n * @param {?} pageX\n * @param {?} pageY\n * @param {?=} config\n * @return {?}\n */\nfadeInRipple(pageX: number, pageY: number, config: RippleConfig = {}): RippleRef {\n    let /** @type {?} */ containerRect = this._containerElement.getBoundingClientRect();\n\n    if (config.centered) {\n      pageX = containerRect.left + containerRect.width / 2;\n      pageY = containerRect.top + containerRect.height / 2;\n    } else {\n      // Subtract scroll values from the coordinates because calculations below\n      // are always relative to the viewport rectangle.\n      let /** @type {?} */ scrollPosition = this._ruler.getViewportScrollPosition();\n      pageX -= scrollPosition.left;\n      pageY -= scrollPosition.top;\n    }\n\n    let /** @type {?} */ radius = config.radius || distanceToFurthestCorner(pageX, pageY, containerRect);\n    let /** @type {?} */ duration = RIPPLE_FADE_IN_DURATION * (1 / (config.speedFactor || 1));\n    let /** @type {?} */ offsetX = pageX - containerRect.left;\n    let /** @type {?} */ offsetY = pageY - containerRect.top;\n\n    let /** @type {?} */ ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n\n    // If the color is not set, the default CSS color will be used.\n    ripple.style.backgroundColor = config.color || null;\n    ripple.style.transitionDuration = `${duration}ms`;\n\n    this._containerElement.appendChild(ripple);\n\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    enforceStyleRecalculation(ripple);\n\n    ripple.style.transform = 'scale(1)';\n\n    // Exposed reference to the ripple that will be returned.\n    let /** @type {?} */ rippleRef = new RippleRef(this, ripple, config);\n\n    rippleRef.state = RippleState.FADING_IN;\n\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.add(rippleRef);\n\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    this.runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.VISIBLE;\n\n      if (!config.persistent && !this._isMousedown) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n\n    return rippleRef;\n  }\n/**\n * Fades out a ripple reference.\n * @param {?} rippleRef\n * @return {?}\n */\nfadeOutRipple(rippleRef: RippleRef) {\n    // For ripples that are not active anymore, don't re-un the fade-out animation.\n    if (!this._activeRipples.delete(rippleRef)) {\n      return;\n    }\n\n    let /** @type {?} */ rippleEl = rippleRef.element;\n\n    rippleEl.style.transitionDuration = `${RIPPLE_FADE_OUT_DURATION}ms`;\n    rippleEl.style.opacity = '0';\n\n    rippleRef.state = RippleState.FADING_OUT;\n\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    this.runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.HIDDEN; /** @type {?} */((\n      rippleEl.parentNode)).removeChild(rippleEl);\n    }, RIPPLE_FADE_OUT_DURATION);\n  }\n/**\n * Fades out all currently active ripples.\n * @return {?}\n */\nfadeOutAll() {\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\n  }\n/**\n * Sets the trigger element and registers the mouse events.\n * @param {?} element\n * @return {?}\n */\nsetTriggerElement(element: HTMLElement | null) {\n    // Remove all previously register event listeners from the trigger element.\n    if (this._triggerElement) {\n      this._triggerEvents.forEach((fn, type) => { /** @type {?} */((\n        this._triggerElement)).removeEventListener(type, fn);\n      });\n    }\n\n    if (element) {\n      // If the element is not null, register all event listeners on the trigger element.\n      this._ngZone.runOutsideAngular(() => {\n        this._triggerEvents.forEach((fn, type) => element.addEventListener(type, fn));\n      });\n    }\n\n    this._triggerElement = element;\n  }\n/**\n * Listener being called on mousedown event.\n * @param {?} event\n * @return {?}\n */\nprivate onMousedown(event: MouseEvent) {\n    if (!this.rippleDisabled) {\n      this._isMousedown = true;\n      this.fadeInRipple(event.pageX, event.pageY, this.rippleConfig);\n    }\n  }\n/**\n * Listener being called on mouseup event.\n * @return {?}\n */\nprivate onMouseup() {\n    this._isMousedown = false;\n\n    // Fade-out all ripples that are completely visible and not persistent.\n    this._activeRipples.forEach(ripple => {\n      if (!ripple.config.persistent && ripple.state === RippleState.VISIBLE) {\n        ripple.fadeOut();\n      }\n    });\n  }\n/**\n * Listener being called on mouseleave event.\n * @return {?}\n */\nprivate onMouseLeave() {\n    if (this._isMousedown) {\n      this.onMouseup();\n    }\n  }\n/**\n * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n * @param {?} fn\n * @param {?=} delay\n * @return {?}\n */\nprivate runTimeoutOutsideZone(fn: Function, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n\n}\n\nfunction RippleRenderer_tsickle_Closure_declarations() {\n/**\n * Element where the ripples are being added to.\n * @type {?}\n */\nRippleRenderer.prototype._containerElement;\n/**\n * Element which triggers the ripple elements on mouse events.\n * @type {?}\n */\nRippleRenderer.prototype._triggerElement;\n/**\n * Whether the mouse is currently down or not.\n * @type {?}\n */\nRippleRenderer.prototype._isMousedown;\n/**\n * Events to be registered on the trigger element.\n * @type {?}\n */\nRippleRenderer.prototype._triggerEvents;\n/**\n * Set of currently active ripple references.\n * @type {?}\n */\nRippleRenderer.prototype._activeRipples;\n/**\n * Ripple config for all ripples created by events.\n * @type {?}\n */\nRippleRenderer.prototype.rippleConfig;\n/**\n * Whether mouse ripples should be created or not.\n * @type {?}\n */\nRippleRenderer.prototype.rippleDisabled;\n/** @type {?} */\nRippleRenderer.prototype._ngZone;\n/** @type {?} */\nRippleRenderer.prototype._ruler;\n}\n\n/**\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element: HTMLElement) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x: number, y: number, rect: ClientRect) {\n  const /** @type {?} */ distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const /** @type {?} */ distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\nexport type RippleState = number;\nexport let RippleState: any = {};\nRippleState.FADING_IN = 0;\nRippleState.VISIBLE = 1;\nRippleState.FADING_OUT = 2;\nRippleState.HIDDEN = 3;\nRippleState[RippleState.FADING_IN] = \"FADING_IN\";\nRippleState[RippleState.VISIBLE] = \"VISIBLE\";\nRippleState[RippleState.FADING_OUT] = \"FADING_OUT\";\nRippleState[RippleState.HIDDEN] = \"HIDDEN\";\n\n/**\n * Reference to a previously launched ripple element.\n */\nexport class RippleRef {\n/**\n * Current state of the ripple reference.\n */\nstate: RippleState = RippleState.HIDDEN;\n/**\n * @param {?} _renderer\n * @param {?} element\n * @param {?} config\n */\nconstructor(\nprivate _renderer: RippleRenderer,\npublic element: HTMLElement,\npublic config: RippleConfig) {\n  }\n/**\n * Fades out the ripple element.\n * @return {?}\n */\nfadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n\nfunction RippleRef_tsickle_Closure_declarations() {\n/**\n * Current state of the ripple reference.\n * @type {?}\n */\nRippleRef.prototype.state;\n/** @type {?} */\nRippleRef.prototype._renderer;\n/** @type {?} */\nRippleRef.prototype.element;\n/** @type {?} */\nRippleRef.prototype.config;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  NgModule,\n  Directive,\n  Renderer2,\n  ElementRef,\n  QueryList,\n} from '@angular/core';\nimport {MdCommonModule} from '../common-behaviors/common-module';\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MdLine) query, then\n * counted by checking the query list's length.\n */\nexport class MdLine {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-line], [mat-line], [mdLine], [matLine]',\n  host: {'class': 'mat-line'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdLine_tsickle_Closure_declarations() {\n/** @type {?} */\nMdLine.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdLine.ctorParameters;\n}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n */\nexport class MdLineSetter {\n/**\n * @param {?} _lines\n * @param {?} _renderer\n * @param {?} _element\n */\nconstructor(private _lines: QueryList<MdLine>,\nprivate _renderer: Renderer2,\nprivate _element: ElementRef) {\n    this._setLineClass(this._lines.length);\n\n    this._lines.changes.subscribe(() => {\n      this._setLineClass(this._lines.length);\n    });\n  }\n/**\n * @param {?} count\n * @return {?}\n */\nprivate _setLineClass(count: number): void {\n    this._resetClasses();\n    if (count === 2 || count === 3) {\n      this._setClass(`mat-${count}-line`, true);\n    } else if (count > 3) {\n      this._setClass(`mat-multi-line`, true);\n    }\n  }\n/**\n * @return {?}\n */\nprivate _resetClasses(): void {\n    this._setClass('mat-2-line', false);\n    this._setClass('mat-3-line', false);\n    this._setClass('mat-multi-line', false);\n  }\n/**\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nprivate _setClass(className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this._renderer.addClass(this._element.nativeElement, className);\n    } else {\n      this._renderer.removeClass(this._element.nativeElement, className);\n    }\n  }\n\n}\n\nfunction MdLineSetter_tsickle_Closure_declarations() {\n/** @type {?} */\nMdLineSetter.prototype._lines;\n/** @type {?} */\nMdLineSetter.prototype._renderer;\n/** @type {?} */\nMdLineSetter.prototype._element;\n}\n\nexport class MdLineModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdCommonModule],\n  exports: [MdLine, MdCommonModule],\n  declarations: [MdLine],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdLineModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdLineModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdLineModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule, InjectionToken, Optional, Inject, isDevMode} from '@angular/core';\nimport {DOCUMENT} from '@angular/platform-browser';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CompatibilityModule} from '../compatibility/compatibility';\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n */\nexport const MATERIAL_SANITY_CHECKS = new InjectionToken<boolean>('md-sanity-checks');\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, compatibility mode, etc.\n * \n * This module should be imported to each top-level component module (e.g., MdTabsModule).\n */\nexport class MdCommonModule {\n/**\n * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n */\nprivate _hasDoneGlobalChecks = false;\n/**\n * @param {?} _document\n * @param {?} _sanityChecksEnabled\n */\nconstructor(\nprivate _document: any,\n      _sanityChecksEnabled: boolean) {\n\n    if (_sanityChecksEnabled && !this._hasDoneGlobalChecks && _document && isDevMode()) {\n      this._checkDoctype();\n      this._checkTheme();\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n/**\n * @return {?}\n */\nprivate _checkDoctype(): void {\n    if (!this._document.doctype) {\n      console.warn(\n        'Current document does not have a doctype. This may cause ' +\n        'some Angular Material components not to behave as expected.'\n      );\n    }\n  }\n/**\n * @return {?}\n */\nprivate _checkTheme(): void {\n    if (typeof getComputedStyle === 'function') {\n      const /** @type {?} */ testElement = this._document.createElement('div');\n\n      testElement.classList.add('mat-theme-loaded-marker');\n      this._document.body.appendChild(testElement);\n\n      if (getComputedStyle(testElement).display !== 'none') {\n        console.warn(\n          'Could not find Angular Material core theme. Most Material ' +\n          'components may not work as expected. For more info refer ' +\n          'to the theming guide: https://material.angular.io/guide/theming'\n        );\n      }\n\n      this._document.body.removeChild(testElement);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CompatibilityModule, BidiModule],\n  exports: [CompatibilityModule, BidiModule],\n  providers: [{\n    provide: MATERIAL_SANITY_CHECKS, useValue: true,\n  }],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT, ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS, ] }, ]},\n];\n}\n\nfunction MdCommonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCommonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCommonModule.ctorParameters;\n/**\n * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n * @type {?}\n */\nMdCommonModule.prototype._hasDoneGlobalChecks;\n/** @type {?} */\nMdCommonModule.prototype._document;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule, Directive, Inject, Optional, ElementRef, InjectionToken} from '@angular/core';\n\nexport const /** @type {?} */ MATERIAL_COMPATIBILITY_MODE = new InjectionToken<boolean>('md-compatibility-mode');\n/**\n * Returns an exception to be thrown if the consumer has used\n * an invalid Material prefix on a component.\n * \\@docs-private\n * @param {?} prefix\n * @param {?} nodeName\n * @return {?}\n */\nexport function getMdCompatibilityInvalidPrefixError(prefix: string, nodeName: string) {\n  return Error(`The \"${prefix}-\" prefix cannot be used in ng-material v1 compatibility mode. ` +\n                   `It was used on an \"${nodeName.toLowerCase()}\" element.`);\n}\n/**\n * Selector that matches all elements that may have style collisions with AngularJS Material.\n */\nexport const MAT_ELEMENTS_SELECTOR = `\n  [mat-button],\n  [mat-fab],\n  [mat-icon-button],\n  [mat-mini-fab],\n  [mat-raised-button],\n  [matCardSubtitle],\n  [matCardTitle],\n  [matCellDef],\n  [matColumnDef],\n  [matDialogActions],\n  [matDialogClose],\n  [matDialogContent],\n  [matDialogTitle],\n  [matHeaderCellDef],\n  [matHeaderRowDef],\n  [matLine],\n  [matRowDef],\n  [matTabLabel],\n  [matTabLink],\n  [matTabNav],\n  [matTooltip],\n  [matInput],\n  [matPrefix],\n  [matSuffix],\n  mat-autocomplete,\n  mat-button-toggle,\n  mat-button-toggle,\n  mat-button-toggle-group,\n  mat-card,\n  mat-card-actions,\n  mat-card-content,\n  mat-card-footer,\n  mat-card-header,\n  mat-card-subtitle,\n  mat-card-title,\n  mat-card-title-group,\n  mat-cell,\n  mat-checkbox,\n  mat-chip,\n  mat-dialog-actions,\n  mat-dialog-container,\n  mat-dialog-content,\n  mat-divider,\n  mat-error,\n  mat-grid-list,\n  mat-grid-tile,\n  mat-grid-tile-footer,\n  mat-grid-tile-header,\n  mat-header-cell,\n  mat-header-row,\n  mat-hint,\n  mat-icon,\n  mat-input-container,\n  mat-form-field,\n  mat-list,\n  mat-list-item,\n  mat-menu,\n  mat-nav-list,\n  mat-option,\n  mat-placeholder,\n  mat-progress-bar,\n  mat-pseudo-checkbox,\n  mat-radio-button,\n  mat-radio-group,\n  mat-row,\n  mat-select,\n  mat-sidenav,\n  mat-sidenav-container,\n  mat-slider,\n  mat-spinner,\n  mat-tab,\n  mat-table,\n  mat-tab-group,\n  mat-toolbar`;\n/**\n * Selector that matches all elements that may have style collisions with AngularJS Material.\n */\nexport const MD_ELEMENTS_SELECTOR = `\n  [md-button],\n  [md-fab],\n  [md-icon-button],\n  [md-mini-fab],\n  [md-raised-button],\n  [mdCardSubtitle],\n  [mdCardTitle],\n  [mdCellDef],\n  [mdColumnDef],\n  [mdDialogActions],\n  [mdDialogClose],\n  [mdDialogContent],\n  [mdDialogTitle],\n  [mdHeaderCellDef],\n  [mdHeaderRowDef],\n  [mdLine],\n  [mdRowDef],\n  [mdTabLabel],\n  [mdTabLink],\n  [mdTabNav],\n  [mdTooltip],\n  [mdInput],\n  [mdPrefix],\n  [mdSuffix],\n  md-autocomplete,\n  md-button-toggle,\n  md-button-toggle,\n  md-button-toggle-group,\n  md-card,\n  md-card-actions,\n  md-card-content,\n  md-card-footer,\n  md-card-header,\n  md-card-subtitle,\n  md-card-title,\n  md-card-title-group,\n  md-cell,\n  md-checkbox,\n  md-chip,\n  md-dialog-actions,\n  md-dialog-container,\n  md-dialog-content,\n  md-divider,\n  md-error,\n  md-grid-list,\n  md-grid-tile,\n  md-grid-tile-footer,\n  md-grid-tile-header,\n  md-header-cell,\n  md-header-row,\n  md-hint,\n  md-icon,\n  md-input-container,\n  md-form-field,\n  md-list,\n  md-list-item,\n  md-menu,\n  md-nav-list,\n  md-option,\n  md-placeholder,\n  md-progress-bar,\n  md-pseudo-checkbox,\n  md-radio-button,\n  md-radio-group,\n  md-row,\n  md-select,\n  md-sidenav,\n  md-sidenav-container,\n  md-slider,\n  md-spinner,\n  md-tab,\n  md-table,\n  md-tab-group,\n  md-toolbar`;\n/**\n * Directive that enforces that the `mat-` prefix cannot be used.\n */\nexport class MatPrefixRejector {\n/**\n * @param {?} isCompatibilityMode\n * @param {?} elementRef\n */\nconstructor(\n      isCompatibilityMode: boolean,\n    elementRef: ElementRef) {\n\n    if (!isCompatibilityMode) {\n      throw getMdCompatibilityInvalidPrefixError('mat', elementRef.nativeElement.nodeName);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: MAT_ELEMENTS_SELECTOR}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_COMPATIBILITY_MODE, ] }, ]},\n{type: ElementRef, },\n];\n}\n\nfunction MatPrefixRejector_tsickle_Closure_declarations() {\n/** @type {?} */\nMatPrefixRejector.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatPrefixRejector.ctorParameters;\n}\n\n/**\n * Directive that enforces that the `md-` prefix cannot be used.\n */\nexport class MdPrefixRejector {\n/**\n * @param {?} isCompatibilityMode\n * @param {?} elementRef\n */\nconstructor(\n      isCompatibilityMode: boolean,\n    elementRef: ElementRef) {\n\n    if (isCompatibilityMode) {\n      throw getMdCompatibilityInvalidPrefixError('md', elementRef.nativeElement.nodeName);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: MD_ELEMENTS_SELECTOR}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_COMPATIBILITY_MODE, ] }, ]},\n{type: ElementRef, },\n];\n}\n\nfunction MdPrefixRejector_tsickle_Closure_declarations() {\n/** @type {?} */\nMdPrefixRejector.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdPrefixRejector.ctorParameters;\n}\n\n/**\n * Module that enforces the default compatibility mode settings. When this module is loaded\n * without NoConflictStyleCompatibilityMode also being imported, it will throw an error if\n * there are any uses of the `mat-` prefix.\n */\nexport class CompatibilityModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [MatPrefixRejector, MdPrefixRejector],\n  exports: [MatPrefixRejector, MdPrefixRejector],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CompatibilityModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCompatibilityModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCompatibilityModule.ctorParameters;\n}\n\n/**\n * Module that enforces \"no-conflict\" compatibility mode settings. When this module is loaded,\n * it will throw an error if there are any uses of the `md-` prefix.\n */\nexport class NoConflictStyleCompatibilityMode {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [{\n    provide: MATERIAL_COMPATIBILITY_MODE, useValue: true,\n  }],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NoConflictStyleCompatibilityMode_tsickle_Closure_declarations() {\n/** @type {?} */\nNoConflictStyleCompatibilityMode.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNoConflictStyleCompatibilityMode.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Version} from '@angular/core';\n/**\n * Current version of Angular Material.\n */\nexport const VERSION = new Version('2.0.0-beta.8');\n"],"names":["observableOf","style","first"],"mappings":"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"}