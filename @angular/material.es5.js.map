{"version":3,"file":"material.es5.js","sources":["../../src/lib/index.ts","../../src/lib/public_api.ts","../../src/lib/tooltip/index.ts","../../src/lib/tooltip/tooltip.ts","../../src/lib/slider/index.ts","../../src/lib/slider/slider.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/select/index.ts","../../src/lib/select/select.ts","../../src/lib/select/select-errors.ts","../../src/lib/select/select-animations.ts","../../src/lib/core/a11y/focus-key-manager.ts","../../src/lib/autocomplete/index.ts","../../src/lib/autocomplete/autocomplete-trigger.ts","../../src/lib/autocomplete/autocomplete.ts","../../src/lib/core/a11y/activedescendant-key-manager.ts","../../src/lib/core/a11y/list-key-manager.ts","../../src/lib/core/core.ts","../../src/lib/core/coercion/number-property.ts","../../src/lib/core/animation/animation.ts","../../src/lib/core/style/index.ts","../../src/lib/core/style/apply-transform.ts","../../src/lib/core/style/focus-origin-monitor.ts","../../src/lib/core/coordination/unique-selection-dispatcher.ts","../../src/lib/core/a11y/fake-mousedown.ts","../../src/lib/core/selection/selection.ts","../../src/lib/core/gestures/gesture-config.ts","../../src/lib/core/overlay/fullscreen-overlay-container.ts","../../src/lib/core/a11y/index.ts","../../src/lib/core/a11y/live-announcer.ts","../../src/lib/core/a11y/focus-trap.ts","../../src/lib/core/a11y/interactivity-checker.ts","../../src/lib/core/overlay/overlay-directives.ts","../../src/lib/core/overlay/overlay.ts","../../src/lib/core/overlay/overlay-container.ts","../../src/lib/core/overlay/position/overlay-position-builder.ts","../../src/lib/core/overlay/position/global-position-strategy.ts","../../src/lib/core/overlay/position/connected-position-strategy.ts","../../src/lib/core/overlay/position/connected-position.ts","../../src/lib/core/overlay/overlay-ref.ts","../../src/lib/core/portal/dom-portal-host.ts","../../src/lib/core/overlay/overlay-state.ts","../../src/lib/core/portal/portal-directives.ts","../../src/lib/core/portal/portal.ts","../../src/lib/core/portal/portal-errors.ts","../../src/lib/core/option/option.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/ripple/index.ts","../../src/lib/core/overlay/scroll/index.ts","../../src/lib/core/overlay/scroll/block-scroll-strategy.ts","../../src/lib/core/overlay/scroll/noop-scroll-strategy.ts","../../src/lib/core/overlay/scroll/close-scroll-strategy.ts","../../src/lib/core/overlay/scroll/reposition-scroll-strategy.ts","../../src/lib/core/overlay/scroll/scrollable.ts","../../src/lib/core/ripple/ripple.ts","../../src/lib/core/overlay/position/viewport-ruler.ts","../../src/lib/core/overlay/scroll/scroll-dispatcher.ts","../../src/lib/core/platform/index.ts","../../src/lib/core/platform/features.ts","../../src/lib/core/platform/platform.ts","../../src/lib/core/ripple/ripple-renderer.ts","../../src/lib/core/ripple/ripple-ref.ts","../../src/lib/core/coercion/boolean-property.ts","../../src/lib/core/keyboard/keycodes.ts","../../src/lib/core/observe-content/observe-content.ts","../../src/lib/core/rtl/dir.ts","../../src/lib/core/line/line.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/compatibility/compatibility.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {Dir,LayoutDirection,RtlModule,ObserveContentModule,ObserveContent,MdOptionModule,MdOption,MdOptionSelectionChange,Portal,PortalHost,BasePortalHost,ComponentPortal,TemplatePortal,PortalHostDirective,TemplatePortalDirective,PortalModule,DomPortalHost,GestureConfig,HammerInput,HammerManager,AriaLivePoliteness,LiveAnnouncer,LIVE_ANNOUNCER_ELEMENT_TOKEN,LIVE_ANNOUNCER_PROVIDER,InteractivityChecker,isFakeMousedownFromScreenReader,A11yModule,UniqueSelectionDispatcher,UniqueSelectionDispatcherListener,UNIQUE_SELECTION_DISPATCHER_PROVIDER,MdLineModule,MdLine,MdLineSetter,ComponentType,coerceBooleanProperty,coerceNumberProperty,CompatibilityModule,NoConflictStyleCompatibilityMode,MdCommonModule,MdCoreModule,PlatformModule,Platform,getSupportedInputTypes,Overlay,OVERLAY_PROVIDERS,OverlayContainer,FullscreenOverlayContainer,OverlayRef,OverlayState,ConnectedOverlayDirective,OverlayOrigin,OverlayModule,ViewportRuler,PositionStrategy,GlobalPositionStrategy,ConnectedPositionStrategy,HorizontalConnectionPos,VerticalConnectionPos,OriginConnectionPosition,OverlayConnectionPosition,ConnectionPositionPair,ScrollableViewProperties,ConnectedOverlayPositionChange,Scrollable,ScrollDispatcher,ScrollStrategy,RepositionScrollStrategy,CloseScrollStrategy,NoopScrollStrategy,BlockScrollStrategy,ScrollDispatchModule,MdRipple,RippleGlobalOptions,MD_RIPPLE_GLOBAL_OPTIONS,RippleRef,RippleState,RippleConfig,RIPPLE_FADE_IN_DURATION,RIPPLE_FADE_OUT_DURATION,MdRippleModule,SelectionModel,SelectionChange,FocusTrap,FocusTrapFactory,FocusTrapDeprecatedDirective,FocusTrapDirective,StyleModule,TOUCH_BUFFER_MS,FocusOrigin,FocusOriginMonitor,CdkMonitorFocus,FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY,FOCUS_ORIGIN_MONITOR_PROVIDER,applyCssTransform,UP_ARROW,DOWN_ARROW,RIGHT_ARROW,LEFT_ARROW,PAGE_UP,PAGE_DOWN,HOME,END,ENTER,SPACE,TAB,ESCAPE,BACKSPACE,DELETE,MATERIAL_COMPATIBILITY_MODE,MATERIAL_SANITY_CHECKS,getMdCompatibilityInvalidPrefixError,MAT_ELEMENTS_SELECTOR,MD_ELEMENTS_SELECTOR,MatPrefixRejector,MdPrefixRejector,AnimationCurves,AnimationDurations,MdSelectionModule,MdPseudoCheckboxState,MdPseudoCheckbox,MdAutocompleteModule,AutocompletePositionY,MdAutocomplete,AUTOCOMPLETE_OPTION_HEIGHT,AUTOCOMPLETE_PANEL_HEIGHT,MD_AUTOCOMPLETE_VALUE_ACCESSOR,MdAutocompleteTrigger,MdSelectModule,fadeInContent,transformPanel,transformPlaceholder,SELECT_OPTION_HEIGHT,SELECT_PANEL_MAX_HEIGHT,SELECT_MAX_OPTIONS_DISPLAYED,SELECT_TRIGGER_HEIGHT,SELECT_OPTION_HEIGHT_ADJUSTMENT,SELECT_PANEL_PADDING_X,SELECT_MULTIPLE_PANEL_PADDING_X,SELECT_PANEL_PADDING_Y,SELECT_PANEL_VIEWPORT_PADDING,MdSelectChange,MdSelectFloatPlaceholderType,MdSelect,MdSliderModule,MD_SLIDER_VALUE_ACCESSOR,MdSliderChange,MdSliderBase,_MdSliderMixinBase,MdSlider,SliderRenderer,MdTooltipModule,TooltipPosition,TOUCHEND_HIDE_DELAY,SCROLL_THROTTLE_MS,throwMdTooltipInvalidPositionError,MdTooltip,TooltipVisibility,TooltipComponent} from './public_api';\n\nexport {LIVE_ANNOUNCER_PROVIDER_FACTORY as ɵi} from './core/a11y/live-announcer';\nexport {mixinDisabled as ɵl} from './core/common-behaviors/disabled';\nexport {UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY as ɵj} from './core/coordination/unique-selection-dispatcher';\nexport {MdMutationObserverFactory as ɵa} from './core/observe-content/observe-content';\nexport {OVERLAY_CONTAINER_PROVIDER as ɵc,OVERLAY_CONTAINER_PROVIDER_FACTORY as ɵb} from './core/overlay/overlay-container';\nexport {OverlayPositionBuilder as ɵk} from './core/overlay/position/overlay-position-builder';\nexport {VIEWPORT_RULER_PROVIDER as ɵe,VIEWPORT_RULER_PROVIDER_FACTORY as ɵd} from './core/overlay/position/viewport-ruler';\nexport {SCROLL_DISPATCHER_PROVIDER as ɵg,SCROLL_DISPATCHER_PROVIDER_FACTORY as ɵf} from './core/overlay/scroll/scroll-dispatcher';\nexport {RippleRenderer as ɵh} from './core/ripple/ripple-renderer';","/**\n * @module\n * @description\n * Entry point for all public APIs of Angular Material.\n */\n\nexport {Dir,LayoutDirection,RtlModule,ObserveContentModule,ObserveContent,MdOptionModule,MdOption,MdOptionSelectionChange,Portal,PortalHost,BasePortalHost,ComponentPortal,TemplatePortal,PortalHostDirective,TemplatePortalDirective,PortalModule,DomPortalHost,GestureConfig,HammerInput,HammerManager,AriaLivePoliteness,LiveAnnouncer,LIVE_ANNOUNCER_ELEMENT_TOKEN,LIVE_ANNOUNCER_PROVIDER,InteractivityChecker,isFakeMousedownFromScreenReader,A11yModule,UniqueSelectionDispatcher,UniqueSelectionDispatcherListener,UNIQUE_SELECTION_DISPATCHER_PROVIDER,MdLineModule,MdLine,MdLineSetter,ComponentType,coerceBooleanProperty,coerceNumberProperty,CompatibilityModule,NoConflictStyleCompatibilityMode,MdCommonModule,MdCoreModule,PlatformModule,Platform,getSupportedInputTypes,Overlay,OVERLAY_PROVIDERS,OverlayContainer,FullscreenOverlayContainer,OverlayRef,OverlayState,ConnectedOverlayDirective,OverlayOrigin,OverlayModule,ViewportRuler,PositionStrategy,GlobalPositionStrategy,ConnectedPositionStrategy,HorizontalConnectionPos,VerticalConnectionPos,OriginConnectionPosition,OverlayConnectionPosition,ConnectionPositionPair,ScrollableViewProperties,ConnectedOverlayPositionChange,Scrollable,ScrollDispatcher,ScrollStrategy,RepositionScrollStrategy,CloseScrollStrategy,NoopScrollStrategy,BlockScrollStrategy,ScrollDispatchModule,MdRipple,RippleGlobalOptions,MD_RIPPLE_GLOBAL_OPTIONS,RippleRef,RippleState,RippleConfig,RIPPLE_FADE_IN_DURATION,RIPPLE_FADE_OUT_DURATION,MdRippleModule,SelectionModel,SelectionChange,FocusTrap,FocusTrapFactory,FocusTrapDeprecatedDirective,FocusTrapDirective,StyleModule,TOUCH_BUFFER_MS,FocusOrigin,FocusOriginMonitor,CdkMonitorFocus,FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY,FOCUS_ORIGIN_MONITOR_PROVIDER,applyCssTransform,UP_ARROW,DOWN_ARROW,RIGHT_ARROW,LEFT_ARROW,PAGE_UP,PAGE_DOWN,HOME,END,ENTER,SPACE,TAB,ESCAPE,BACKSPACE,DELETE,MATERIAL_COMPATIBILITY_MODE,MATERIAL_SANITY_CHECKS,getMdCompatibilityInvalidPrefixError,MAT_ELEMENTS_SELECTOR,MD_ELEMENTS_SELECTOR,MatPrefixRejector,MdPrefixRejector,AnimationCurves,AnimationDurations,MdSelectionModule,MdPseudoCheckboxState,MdPseudoCheckbox} from './core';\n// export * from './module';\n\nexport {MdAutocompleteModule,AutocompletePositionY,MdAutocomplete,AUTOCOMPLETE_OPTION_HEIGHT,AUTOCOMPLETE_PANEL_HEIGHT,MD_AUTOCOMPLETE_VALUE_ACCESSOR,MdAutocompleteTrigger} from './autocomplete/index';\n// export * from './button/index';\n// export * from './button-toggle/index';\n// export * from './card/index';\n// export * from './chips/index';\n// export * from './checkbox/index';\n// export * from './core/data-table/index';\n// export * from './datepicker/index';\n// export * from './dialog/index';\n// export * from './grid-list/index';\n// export * from './icon/index';\n// export * from './input/index';\n// export * from './list/index';\n// export * from './menu/index';\n// export * from './progress-bar/index';\n// export * from './progress-spinner/index';\n// export * from './radio/index';\nexport {MdSelectModule,fadeInContent,transformPanel,transformPlaceholder,SELECT_OPTION_HEIGHT,SELECT_PANEL_MAX_HEIGHT,SELECT_MAX_OPTIONS_DISPLAYED,SELECT_TRIGGER_HEIGHT,SELECT_OPTION_HEIGHT_ADJUSTMENT,SELECT_PANEL_PADDING_X,SELECT_MULTIPLE_PANEL_PADDING_X,SELECT_PANEL_PADDING_Y,SELECT_PANEL_VIEWPORT_PADDING,MdSelectChange,MdSelectFloatPlaceholderType,MdSelect} from './select/index';\n// export * from './sidenav/index';\nexport {MdSliderModule,MD_SLIDER_VALUE_ACCESSOR,MdSliderChange,MdSliderBase,_MdSliderMixinBase,MdSlider,SliderRenderer} from './slider/index';\n// export * from './slide-toggle/index';\n// export * from './snack-bar/index';\n// export * from './tabs/index';\n// export * from './tabs/tab-nav-bar/index';\n// export * from './toolbar/index';\nexport {MdTooltipModule,TooltipPosition,TOUCHEND_HIDE_DELAY,SCROLL_THROTTLE_MS,throwMdTooltipInvalidPositionError,MdTooltip,TooltipVisibility,TooltipComponent} from './tooltip/index';\n","import {NgModule} from '@angular/core';\nimport {OverlayModule, MdCommonModule} from '../core';\nimport {PlatformModule} from '../core/platform/index';\nimport {MdTooltip, TooltipComponent} from './tooltip';\nexport class MdTooltipModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [OverlayModule, MdCommonModule, PlatformModule],\n  exports: [MdTooltip, TooltipComponent, MdCommonModule],\n  declarations: [MdTooltip, TooltipComponent],\n  entryComponents: [TooltipComponent],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdTooltipModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTooltipModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTooltipModule.ctorParameters;\n}\n\n\n\nexport {TooltipPosition,TOUCHEND_HIDE_DELAY,SCROLL_THROTTLE_MS,throwMdTooltipInvalidPositionError,MdTooltip,TooltipVisibility,TooltipComponent} from './tooltip';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  ElementRef,\n  ViewContainerRef,\n  NgZone,\n  Optional,\n  OnDestroy,\n  Renderer2,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {\n  style,\n  trigger,\n  state,\n  transition,\n  animate,\n  AnimationEvent,\n} from '@angular/animations';\nimport {\n  Overlay,\n  OverlayState,\n  OverlayRef,\n  ComponentPortal,\n  OverlayConnectionPosition,\n  OriginConnectionPosition,\n  RepositionScrollStrategy,\n} from '../core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {Dir} from '../core/rtl/dir';\nimport {Platform} from '../core/platform/index';\nimport'rxjs/add/operator/first';\nimport {ScrollDispatcher} from '../core/overlay/scroll/scroll-dispatcher';\nimport {coerceBooleanProperty} from '../core/coercion/boolean-property';\n\nexport type TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\n/**\n * Time in ms to delay before changing the tooltip visibility to hidden\n */\nexport const TOUCHEND_HIDE_DELAY = 1500;\n/**\n * Time in ms to throttle repositioning after scroll events.\n */\nexport const SCROLL_THROTTLE_MS = 20;\n/**\n * Throws an error if the user supplied an invalid tooltip position.\n * @param {?} position\n * @return {?}\n */\nexport function throwMdTooltipInvalidPositionError(position: string) {\n  throw new Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n * \n * https://material.google.com/components/tooltips.html\n */\nexport class MdTooltip implements OnDestroy {\n  _overlayRef: OverlayRef;\n  _tooltipInstance: TooltipComponent;\nprivate _position: TooltipPosition = 'below';\nprivate _disabled: boolean = false;\n/**\n * Allows the user to define the position of the tooltip relative to the parent element\n * @return {?}\n */\nget position(): TooltipPosition { return this._position; }\n/**\n * @param {?} value\n * @return {?}\n */\nset position(value: TooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n\n      // TODO(andrewjs): When the overlay's position can be dynamically changed, do not destroy\n      // the tooltip.\n      if (this._tooltipInstance) {\n        this._disposeTooltip();\n      }\n    }\n  }\n/**\n * Disables the display of the tooltip.\n * @return {?}\n */\nget disabled(): boolean { return this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // If tooltip is disabled, hide immediately.\n    if (this._disabled) {\n      this.hide(0);\n    }\n  }\n/**\n * @deprecated\n * @return {?}\n */\nget _positionDeprecated(): TooltipPosition { return this._position; }\n/**\n * @param {?} value\n * @return {?}\n */\nset _positionDeprecated(value: TooltipPosition) { this._position = value; }\n/**\n * The default delay in ms before showing the tooltip after show is called\n */\nshowDelay = 0;\n/**\n * The default delay in ms before hiding the tooltip after hide is called\n */\nhideDelay = 0;\nprivate _message: string;\n/**\n * The message to be displayed in the tooltip\n * @return {?}\n */\nget message() { return this._message; }\n/**\n * @param {?} value\n * @return {?}\n */\nset message(value: string) {\n    this._message = value;\n    if (this._tooltipInstance) {\n      this._setTooltipMessage(this._message);\n    }\n  }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedMessage(): string { return this.message; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _deprecatedMessage(v: string) { this.message = v; }\n/**\n * @return {?}\n */\nget _matMessage() { return this.message; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matMessage(v) { this.message = v; }\n/**\n * @return {?}\n */\nget _matPosition() { return this.position; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matPosition(v) { this.position = v; }\n/**\n * @return {?}\n */\nget _matDisabled() { return this.disabled; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matDisabled(v) { this.disabled = v; }\n/**\n * @return {?}\n */\nget _matHideDelay() { return this.hideDelay; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matHideDelay(v) { this.hideDelay = v; }\n/**\n * @return {?}\n */\nget _matShowDelay() { return this.showDelay; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matShowDelay(v) { this.showDelay = v; }\n/**\n * @param {?} _overlay\n * @param {?} _elementRef\n * @param {?} _scrollDispatcher\n * @param {?} _viewContainerRef\n * @param {?} _ngZone\n * @param {?} _renderer\n * @param {?} _platform\n * @param {?} _dir\n */\nconstructor(\nprivate _overlay: Overlay,\nprivate _elementRef: ElementRef,\nprivate _scrollDispatcher: ScrollDispatcher,\nprivate _viewContainerRef: ViewContainerRef,\nprivate _ngZone: NgZone,\nprivate _renderer: Renderer2,\nprivate _platform: Platform,\nprivate _dir: Dir) {\n\n    // The mouse events shouldn't be bound on iOS devices, because\n    // they can prevent the first tap from firing its click event.\n    if (!_platform.IOS) {\n      _renderer.listen(_elementRef.nativeElement, 'mouseenter', () => this.show());\n      _renderer.listen(_elementRef.nativeElement, 'mouseleave', () => this.hide());\n    }\n  }\n/**\n * Dispose the tooltip when destroyed.\n * @return {?}\n */\nngOnDestroy() {\n    if (this._tooltipInstance) {\n      this._disposeTooltip();\n    }\n  }\n/**\n * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n * @param {?=} delay\n * @return {?}\n */\nshow(delay: number = this.showDelay): void {\n    if (this.disabled || !this._message || !this._message.trim()) { return; }\n\n    if (!this._tooltipInstance) {\n      this._createTooltip();\n    }\n\n    this._setTooltipMessage(this._message);\n    this._tooltipInstance.show(this._position, delay);\n  }\n/**\n * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n * @param {?=} delay\n * @return {?}\n */\nhide(delay: number = this.hideDelay): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.hide(delay);\n    }\n  }\n/**\n * Shows/hides the tooltip\n * @return {?}\n */\ntoggle(): void {\n    this._isTooltipVisible() ? this.hide() : this.show();\n  }\n/**\n * Returns true if the tooltip is currently visible to the user\n * @return {?}\n */\n_isTooltipVisible(): boolean {\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n/**\n * Create the tooltip to display\n * @return {?}\n */\nprivate _createTooltip(): void {\n    this._createOverlay();\n    let /** @type {?} */ portal = new ComponentPortal(TooltipComponent, this._viewContainerRef);\n    this._tooltipInstance = this._overlayRef.attach(portal).instance;\n\n    // Dispose the overlay when finished the shown tooltip.\n    this._tooltipInstance.afterHidden().subscribe(() => {\n      // Check first if the tooltip has already been removed through this components destroy.\n      if (this._tooltipInstance) {\n        this._disposeTooltip();\n      }\n    });\n  }\n/**\n * Create the overlay config and position strategy\n * @return {?}\n */\nprivate _createOverlay(): void {\n    let /** @type {?} */ origin = this._getOrigin();\n    let /** @type {?} */ position = this._getOverlayPosition();\n\n    // Create connected position strategy that listens for scroll events to reposition.\n    // After position changes occur and the overlay is clipped by a parent scrollable then\n    // close the tooltip.\n    let /** @type {?} */ strategy = this._overlay.position().connectedTo(this._elementRef, origin, position);\n    strategy.withScrollableContainers(this._scrollDispatcher.getScrollContainers(this._elementRef));\n    strategy.onPositionChange.subscribe(change => {\n      if (change.scrollableViewProperties.isOverlayClipped &&\n          this._tooltipInstance && this._tooltipInstance.isVisible()) {\n        this.hide(0);\n      }\n    });\n\n    let /** @type {?} */ config = new OverlayState();\n    config.direction = this._dir ? this._dir.value : 'ltr';\n    config.positionStrategy = strategy;\n    config.scrollStrategy =\n        new RepositionScrollStrategy(this._scrollDispatcher, SCROLL_THROTTLE_MS);\n\n    this._overlayRef = this._overlay.create(config);\n  }\n/**\n * Disposes the current tooltip and the overlay it is attached to\n * @return {?}\n */\nprivate _disposeTooltip(): void {\n    this._overlayRef.dispose();\n    this._overlayRef = null;\n    this._tooltipInstance = null;\n  }\n/**\n * Returns the origin position based on the user's position preference\n * @return {?}\n */\n_getOrigin(): OriginConnectionPosition {\n    if (this.position == 'above' || this.position == 'below') {\n      return {originX: 'center', originY: this.position == 'above' ? 'top' : 'bottom'};\n    }\n\n    const /** @type {?} */ isDirectionLtr = !this._dir || this._dir.value == 'ltr';\n    if (this.position == 'left' ||\n        this.position == 'before' && isDirectionLtr ||\n        this.position == 'after' && !isDirectionLtr) {\n      return {originX: 'start', originY: 'center'};\n    }\n\n    if (this.position == 'right' ||\n        this.position == 'after' && isDirectionLtr ||\n        this.position == 'before' && !isDirectionLtr) {\n      return {originX: 'end', originY: 'center'};\n    }\n\n    throwMdTooltipInvalidPositionError(this.position);\n  }\n/**\n * Returns the overlay position based on the user's preference\n * @return {?}\n */\n_getOverlayPosition(): OverlayConnectionPosition {\n    if (this.position == 'above') {\n      return {overlayX: 'center', overlayY: 'bottom'};\n    }\n\n    if (this.position == 'below') {\n      return {overlayX: 'center', overlayY: 'top'};\n    }\n\n    const /** @type {?} */ isLtr = !this._dir || this._dir.value == 'ltr';\n    if (this.position == 'left' ||\n        this.position == 'before' && isLtr ||\n        this.position == 'after' && !isLtr) {\n      return {overlayX: 'end', overlayY: 'center'};\n    }\n\n    if (this.position == 'right' ||\n        this.position == 'after' && isLtr ||\n        this.position == 'before' && !isLtr) {\n      return {overlayX: 'start', overlayY: 'center'};\n    }\n\n    throwMdTooltipInvalidPositionError(this.position);\n  }\n/**\n * Updates the tooltip message and repositions the overlay according to the new message length\n * @param {?} message\n * @return {?}\n */\nprivate _setTooltipMessage(message: string) {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    this._tooltipInstance.message = message;\n    this._tooltipInstance._markForCheck();\n\n    this._ngZone.onMicrotaskEmpty.first().subscribe(() => {\n      if (this._tooltipInstance) {\n        this._overlayRef.updatePosition();\n      }\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-tooltip], [mdTooltip], [mat-tooltip], [matTooltip]',\n  host: {\n    '(longpress)': 'show()',\n    '(touchend)': 'hide(' + TOUCHEND_HIDE_DELAY + ')',\n  },\n  exportAs: 'mdTooltip',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n{type: ElementRef, },\n{type: ScrollDispatcher, },\n{type: ViewContainerRef, },\n{type: NgZone, },\n{type: Renderer2, },\n{type: Platform, },\n{type: Dir, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'position': [{ type: Input, args: ['mdTooltipPosition', ] },],\n'disabled': [{ type: Input, args: ['mdTooltipDisabled', ] },],\n'_positionDeprecated': [{ type: Input, args: ['tooltip-position', ] },],\n'showDelay': [{ type: Input, args: ['mdTooltipShowDelay', ] },],\n'hideDelay': [{ type: Input, args: ['mdTooltipHideDelay', ] },],\n'message': [{ type: Input, args: ['mdTooltip', ] },],\n'_deprecatedMessage': [{ type: Input, args: ['md-tooltip', ] },],\n'_matMessage': [{ type: Input, args: ['matTooltip', ] },],\n'_matPosition': [{ type: Input, args: ['matTooltipPosition', ] },],\n'_matDisabled': [{ type: Input, args: ['matTooltipDisabled', ] },],\n'_matHideDelay': [{ type: Input, args: ['matTooltipHideDelay', ] },],\n'_matShowDelay': [{ type: Input, args: ['matTooltipShowDelay', ] },],\n};\n}\n\nfunction MdTooltip_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTooltip.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTooltip.ctorParameters;\n/** @type {?} */\nMdTooltip.propDecorators;\n/** @type {?} */\nMdTooltip.prototype._overlayRef;\n/** @type {?} */\nMdTooltip.prototype._tooltipInstance;\n/** @type {?} */\nMdTooltip.prototype._position;\n/** @type {?} */\nMdTooltip.prototype._disabled;\n/**\n * The default delay in ms before showing the tooltip after show is called\n * @type {?}\n */\nMdTooltip.prototype.showDelay;\n/**\n * The default delay in ms before hiding the tooltip after hide is called\n * @type {?}\n */\nMdTooltip.prototype.hideDelay;\n/** @type {?} */\nMdTooltip.prototype._message;\n/** @type {?} */\nMdTooltip.prototype._overlay;\n/** @type {?} */\nMdTooltip.prototype._elementRef;\n/** @type {?} */\nMdTooltip.prototype._scrollDispatcher;\n/** @type {?} */\nMdTooltip.prototype._viewContainerRef;\n/** @type {?} */\nMdTooltip.prototype._ngZone;\n/** @type {?} */\nMdTooltip.prototype._renderer;\n/** @type {?} */\nMdTooltip.prototype._platform;\n/** @type {?} */\nMdTooltip.prototype._dir;\n}\n\n\nexport type TooltipVisibility = 'initial' | 'visible' | 'hidden';\n/**\n * Internal component that wraps the tooltip's content.\n * \\@docs-private\n */\nexport class TooltipComponent {\n/**\n * Message to display in the tooltip\n */\nmessage: string;\n/**\n * The timeout ID of any current timer set to show the tooltip\n */\n_showTimeoutId: number;\n/**\n * The timeout ID of any current timer set to hide the tooltip\n */\n_hideTimeoutId: number;\n/**\n * Property watched by the animation framework to show or hide the tooltip\n */\n_visibility: TooltipVisibility = 'initial';\n/**\n * Whether interactions on the page should close the tooltip\n */\n_closeOnInteraction: boolean = false;\n/**\n * The transform origin used in the animation for showing and hiding the tooltip\n */\n_transformOrigin: string = 'bottom';\n/**\n * Subject for notifying that the tooltip has been hidden from the view\n */\nprivate _onHide: Subject<any> = new Subject();\n/**\n * @param {?} _dir\n * @param {?} _changeDetectorRef\n */\nconstructor(\nprivate _dir: Dir,\nprivate _changeDetectorRef: ChangeDetectorRef) {}\n/**\n * Shows the tooltip with an animation originating from the provided origin\n * @param {?} position Position of the tooltip.\n * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n * @return {?}\n */\nshow(position: TooltipPosition, delay: number): void {\n    // Cancel the delayed hide if it is scheduled\n    if (this._hideTimeoutId) {\n      clearTimeout(this._hideTimeoutId);\n    }\n\n    // Body interactions should cancel the tooltip if there is a delay in showing.\n    this._closeOnInteraction = true;\n\n    this._setTransformOrigin(position);\n    this._showTimeoutId = setTimeout(() => {\n      this._visibility = 'visible';\n\n      // If this was set to true immediately, then a body click that triggers show() would\n      // trigger interaction and close the tooltip right after it was displayed.\n      this._closeOnInteraction = false;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n      setTimeout(() => this._closeOnInteraction = true, 0);\n    }, delay);\n  }\n/**\n * Begins the animation to hide the tooltip after the provided delay in ms.\n * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n * @return {?}\n */\nhide(delay: number): void {\n    // Cancel the delayed show if it is scheduled\n    if (this._showTimeoutId) {\n      clearTimeout(this._showTimeoutId);\n    }\n\n    this._hideTimeoutId = setTimeout(() => {\n      this._visibility = 'hidden';\n      this._closeOnInteraction = false;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n/**\n * Returns an observable that notifies when the tooltip has been hidden from view\n * @return {?}\n */\nafterHidden(): Observable<void> {\n    return this._onHide.asObservable();\n  }\n/**\n * Whether the tooltip is being displayed\n * @return {?}\n */\nisVisible(): boolean {\n    return this._visibility === 'visible';\n  }\n/**\n * Sets the tooltip transform origin according to the tooltip position\n * @param {?} value\n * @return {?}\n */\n_setTransformOrigin(value: TooltipPosition) {\n    const /** @type {?} */ isLtr = !this._dir || this._dir.value == 'ltr';\n    switch (value) {\n      case 'before': this._transformOrigin = isLtr ? 'right' : 'left'; break;\n      case 'after':  this._transformOrigin = isLtr ? 'left' : 'right'; break;\n      case 'left':   this._transformOrigin = 'right'; break;\n      case 'right':  this._transformOrigin = 'left'; break;\n      case 'above':  this._transformOrigin = 'bottom'; break;\n      case 'below':  this._transformOrigin = 'top'; break;\n      default: throwMdTooltipInvalidPositionError(value);\n    }\n  }\n/**\n * @param {?} e\n * @return {?}\n */\n_afterVisibilityAnimation(e: AnimationEvent): void {\n    if (e.toState === 'hidden' && !this.isVisible()) {\n      this._onHide.next();\n    }\n  }\n/**\n * Interactions on the HTML body should close the tooltip immediately as defined in the\n * material design spec.\n * https://material.google.com/components/tooltips.html#tooltips-interaction\n * @return {?}\n */\n_handleBodyInteraction(): void {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n/**\n * Marks that the tooltip needs to be checked in the next change detection run.\n * Mainly used for rendering the initial text before positioning a tooltip, which\n * can be problematic in components with OnPush change detection.\n * @return {?}\n */\n_markForCheck(): void {\n    this._changeDetectorRef.markForCheck();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-tooltip-component, mat-tooltip-component',\n  templateUrl: 'tooltip.html',\n  styleUrls: ['tooltip.css'],\n  animations: [\n    trigger('state', [\n      state('void', style({transform: 'scale(0)'})),\n      state('initial', style({transform: 'scale(0)'})),\n      state('visible', style({transform: 'scale(1)'})),\n      state('hidden', style({transform: 'scale(0)'})),\n      transition('* => visible', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n      transition('* => hidden', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n    ])\n  ],\n  host: {\n    '(body:click)': 'this._handleBodyInteraction()'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Dir, decorators: [{ type: Optional }, ]},\n{type: ChangeDetectorRef, },\n];\n}\n\nfunction TooltipComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTooltipComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTooltipComponent.ctorParameters;\n/**\n * Message to display in the tooltip\n * @type {?}\n */\nTooltipComponent.prototype.message;\n/**\n * The timeout ID of any current timer set to show the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._showTimeoutId;\n/**\n * The timeout ID of any current timer set to hide the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._hideTimeoutId;\n/**\n * Property watched by the animation framework to show or hide the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._visibility;\n/**\n * Whether interactions on the page should close the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._closeOnInteraction;\n/**\n * The transform origin used in the animation for showing and hiding the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._transformOrigin;\n/**\n * Subject for notifying that the tooltip has been hidden from the view\n * @type {?}\n */\nTooltipComponent.prototype._onHide;\n/** @type {?} */\nTooltipComponent.prototype._dir;\n/** @type {?} */\nTooltipComponent.prototype._changeDetectorRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule} from '@angular/core';\nimport {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {MdCommonModule, GestureConfig, StyleModule} from '../core';\nimport {MdSlider} from './slider';\nimport {RtlModule} from '../core/rtl/dir';\nexport class MdSliderModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule, FormsModule, MdCommonModule, StyleModule, RtlModule],\n  exports: [MdSlider, MdCommonModule],\n  declarations: [MdSlider],\n  providers: [{provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig}]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdSliderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSliderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSliderModule.ctorParameters;\n}\n\n\n\nexport {MD_SLIDER_VALUE_ACCESSOR,MdSliderChange,MdSliderBase,_MdSliderMixinBase,MdSlider,SliderRenderer} from './slider';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  Renderer2,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {coerceBooleanProperty, coerceNumberProperty, HammerInput} from '../core';\nimport {Dir} from '../core/rtl/dir';\nimport {\n  DOWN_ARROW,\n  END,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW\n} from '../core/keyboard/keycodes';\nimport {FocusOrigin, FocusOriginMonitor} from '../core/style/focus-origin-monitor';\nimport {mixinDisabled, CanDisable} from '../core/common-behaviors/disabled';\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/**\n * The thumb gap size for a disabled slider.\n */\nconst DISABLED_THUMB_GAP = 7;\n/**\n * The thumb gap size for a non-active slider at its minimum value.\n */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/**\n * The thumb gap size for an active slider at its minimum value.\n */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows md-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n */\nexport const MD_SLIDER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MdSlider),\n  multi: true\n};\n/**\n * A simple change event emitted by the MdSlider component.\n */\nexport class MdSliderChange {\n/**\n * The MdSlider that changed.\n */\nsource: MdSlider;\n/**\n * The new value of the source slider.\n */\nvalue: number;\n}\n\nfunction MdSliderChange_tsickle_Closure_declarations() {\n/**\n * The MdSlider that changed.\n * @type {?}\n */\nMdSliderChange.prototype.source;\n/**\n * The new value of the source slider.\n * @type {?}\n */\nMdSliderChange.prototype.value;\n}\n\nexport class MdSliderBase { }\nexport const /** @type {?} */ _MdSliderMixinBase = mixinDisabled(MdSliderBase);\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nexport class MdSlider extends _MdSliderMixinBase\n    implements ControlValueAccessor, OnDestroy, CanDisable {\n/**\n * Whether the slider is inverted.\n * @return {?}\n */\nget invert() { return this._invert; }\n/**\n * @param {?} value\n * @return {?}\n */\nset invert(value: any) { this._invert = coerceBooleanProperty(value); }\nprivate _invert = false;\n/**\n * The maximum value that the slider can have.\n * @return {?}\n */\nget max() {\n    return this._max;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset max(v: number) {\n    this._max = coerceNumberProperty(v, this._max);\n    this._percent = this._calculatePercentage(this._value);\n  }\nprivate _max: number = 100;\n/**\n * The minimum value that the slider can have.\n * @return {?}\n */\nget min() {\n    return this._min;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset min(v: number) {\n    this._min = coerceNumberProperty(v, this._min);\n\n    // If the value wasn't explicitly set by the user, set it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n    this._percent = this._calculatePercentage(this._value);\n  }\nprivate _min: number = 0;\n/**\n * The values at which the thumb will snap.\n * @return {?}\n */\nget step() { return this._step; }\n/**\n * @param {?} v\n * @return {?}\n */\nset step(v) {\n    this._step = coerceNumberProperty(v, this._step);\n\n    if (this._step % 1 !== 0) {\n      this._roundLabelTo = this._step.toString().split('.').pop().length;\n    }\n  }\nprivate _step: number = 1;\n/**\n * Whether or not to show the thumb label.\n * @return {?}\n */\nget thumbLabel(): boolean { return this._thumbLabel; }\n/**\n * @param {?} value\n * @return {?}\n */\nset thumbLabel(value) { this._thumbLabel = coerceBooleanProperty(value); }\nprivate _thumbLabel: boolean = false;\n/**\n * @deprecated\n * @return {?}\n */\nget _thumbLabelDeprecated(): boolean { return this._thumbLabel; }\n/**\n * @param {?} value\n * @return {?}\n */\nset _thumbLabelDeprecated(value) { this._thumbLabel = value; }\n/**\n * How often to show ticks. Relative to the step so that a tick always appears on a step.\n * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n * @return {?}\n */\nget tickInterval() { return this._tickInterval; }\n/**\n * @param {?} value\n * @return {?}\n */\nset tickInterval(value) {\n    if (value === 'auto') {\n      this._tickInterval = 'auto';\n    } else if (typeof value === 'number' || typeof value === 'string') {\n      this._tickInterval = coerceNumberProperty(value, /** @type {?} */(( this._tickInterval as number)));\n    } else {\n      this._tickInterval = 0;\n    }\n  }\nprivate _tickInterval: 'auto' | number = 0;\n/**\n * @deprecated\n * @return {?}\n */\nget _tickIntervalDeprecated() { return this.tickInterval; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _tickIntervalDeprecated(v) { this.tickInterval = v; }\n/**\n * Value of the slider.\n * @return {?}\n */\nget value() {\n    // If the value needs to be read and it is still uninitialized, initialize it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n    return this._value;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset value(v: number) {\n    this._value = coerceNumberProperty(v, this._value);\n    this._percent = this._calculatePercentage(this._value);\n  }\nprivate _value: number = null;\n/**\n * Whether the slider is vertical.\n * @return {?}\n */\nget vertical() { return this._vertical; }\n/**\n * @param {?} value\n * @return {?}\n */\nset vertical(value: any) { this._vertical = coerceBooleanProperty(value); }\nprivate _vertical = false;\n\n   color: 'primary' | 'accent' | 'warn' = 'accent';\n/**\n * Event emitted when the slider value has changed.\n */\nchange = new EventEmitter<MdSliderChange>();\n/**\n * Event emitted when the slider thumb moves.\n */\ninput = new EventEmitter<MdSliderChange>();\n/**\n * The value to be used for display purposes.\n * @return {?}\n */\nget displayValue(): string|number {\n    // Note that this could be improved further by rounding something like 0.999 to 1 or\n    // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n    // every change detection cycle.\n    if (this._roundLabelTo && this.value % 1 !== 0) {\n      return this.value.toFixed(this._roundLabelTo);\n    }\n\n    return this.value;\n  }\n/**\n * onTouch function registered via registerOnTouch (ControlValueAccessor).\n */\nonTouched: () => any = () => {};\n/**\n * The percentage of the slider that coincides with the value.\n * @return {?}\n */\nget percent() { return this._clamp(this._percent); }\nprivate _percent: number = 0;\n/**\n * Whether or not the thumb is sliding.\n * Used to determine if there should be a transition for the thumb and fill track.\n */\n_isSliding: boolean = false;\n/**\n * Whether or not the slider is active (clicked or sliding).\n * Used to shrink and grow the thumb as according to the Material Design spec.\n */\n_isActive: boolean = false;\n/**\n * Whether the axis of the slider is inverted.\n * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n * @return {?}\n */\nget _invertAxis() {\n    // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n    // top. However from a y-axis standpoint this is inverted.\n    return this.vertical ? !this.invert : this.invert;\n  }\n/**\n * Whether the slider is at its minimum value.\n * @return {?}\n */\nget _isMinValue() {\n    return this.percent === 0;\n  }\n/**\n * The amount of space to leave between the slider thumb and the track fill & track background\n * elements.\n * @return {?}\n */\nget _thumbGap() {\n    if (this.disabled) {\n      return DISABLED_THUMB_GAP;\n    }\n    if (this._isMinValue && !this.thumbLabel) {\n      return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n    }\n    return 0;\n  }\n/**\n * CSS styles for the track background element.\n * @return {?}\n */\nget _trackBackgroundStyles(): { [key: string]: string } {\n    let /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n    let /** @type {?} */ sign = this._invertMouseCoords ? '-' : '';\n    return {\n      'transform': `translate${axis}(${sign}${this._thumbGap}px) scale${axis}(${1 - this.percent})`\n    };\n  }\n/**\n * CSS styles for the track fill element.\n * @return {?}\n */\nget _trackFillStyles(): { [key: string]: string } {\n    let /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n    let /** @type {?} */ sign = this._invertMouseCoords ? '' : '-';\n    return {\n      'transform': `translate${axis}(${sign}${this._thumbGap}px) scale${axis}(${this.percent})`\n    };\n  }\n/**\n * CSS styles for the ticks container element.\n * @return {?}\n */\nget _ticksContainerStyles(): { [key: string]: string } {\n    let /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n    // For a horizontal slider in RTL languages we push the ticks container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n    let /** @type {?} */ sign = !this.vertical && this._direction == 'rtl' ? '' : '-';\n    let /** @type {?} */ offset = this._tickIntervalPercent / 2 * 100;\n    return {\n      'transform': `translate${axis}(${sign}${offset}%)`\n    };\n  }\n/**\n * CSS styles for the ticks element.\n * @return {?}\n */\nget _ticksStyles(): { [key: string]: string } {\n    let /** @type {?} */ tickSize = this._tickIntervalPercent * 100;\n    let /** @type {?} */ backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n    let /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n    // Depending on the direction we pushed the ticks container, push the ticks the opposite\n    // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n    // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n    let /** @type {?} */ sign = !this.vertical && this._direction == 'rtl' ? '-' : '';\n    let /** @type {?} */ rotate = !this.vertical && this._direction == 'rtl' ? ' rotate(180deg)' : '';\n    let /** @type {?} */ styles: { [key: string]: string } = {\n      'backgroundSize': backgroundSize,\n      // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n      'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n    };\n\n    if (this._isMinValue && this._thumbGap) {\n      let /** @type {?} */ side = this.vertical ?\n          (this._invertAxis ? 'Bottom' : 'Top') :\n          (this._invertAxis ? 'Right' : 'Left');\n      styles[`padding${side}`] = `${this._thumbGap}px`;\n    }\n\n    return styles;\n  }\n/**\n * @return {?}\n */\nget _thumbContainerStyles(): { [key: string]: string } {\n    let /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n    // For a horizontal slider in RTL languages we push the thumb container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n    let /** @type {?} */ invertOffset =\n        (this._direction == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n    let /** @type {?} */ offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n    return {\n      'transform': `translate${axis}(-${offset}%)`\n    };\n  }\n/**\n * The size of a tick interval as a percentage of the size of the track.\n */\nprivate _tickIntervalPercent: number = 0;\n/**\n * A renderer to handle updating the slider's thumb and fill track.\n */\nprivate _renderer: SliderRenderer = null;\n/**\n * The dimensions of the slider.\n */\nprivate _sliderDimensions: ClientRect = null;\nprivate _controlValueAccessorChangeFn: (value: any) => void = () => {};\n/**\n * The last value for which a change event was emitted.\n */\nprivate _lastChangeValue: number = null;\n/**\n * The last value for which an input event was emitted.\n */\nprivate _lastInputValue: number = null;\n/**\n * Decimal places to round to, based on the step amount.\n */\nprivate _roundLabelTo: number;\n/**\n * Whether mouse events should be converted to a slider position by calculating their distance\n * from the right or bottom edge of the slider as opposed to the top or left.\n * @return {?}\n */\nprivate get _invertMouseCoords() {\n    return (this._direction == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n  }\n/**\n * The language direction for this slider element.\n * @return {?}\n */\nprivate get _direction() {\n    return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n  }\n/**\n * @param {?} renderer\n * @param {?} _elementRef\n * @param {?} _focusOriginMonitor\n * @param {?} _dir\n */\nconstructor(renderer: Renderer2,\nprivate _elementRef: ElementRef,\nprivate _focusOriginMonitor: FocusOriginMonitor,\nprivate _dir: Dir) {\n    super();\n    this._focusOriginMonitor.monitor(this._elementRef.nativeElement, renderer, true)\n        .subscribe((origin: FocusOrigin) => this._isActive = !!origin && origin !== 'keyboard');\n    this._renderer = new SliderRenderer(this._elementRef);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._focusOriginMonitor.stopMonitoring(this._elementRef.nativeElement);\n  }\n/**\n * @return {?}\n */\n_onMouseenter() {\n    if (this.disabled) {\n      return;\n    }\n\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._renderer.getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_onClick(event: MouseEvent) {\n    if (this.disabled) {\n      return;\n    }\n\n    this._isSliding = false;\n    this._renderer.addFocus();\n    this._updateValueFromPosition({x: event.clientX, y: event.clientY});\n\n    /* Emits a change and input event if the value changed. */\n    this._emitInputEvent();\n    this._emitValueIfChanged();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_onSlide(event: HammerInput) {\n    if (this.disabled) {\n      return;\n    }\n\n    // Prevent the slide from selecting anything else.\n    event.preventDefault();\n    this._updateValueFromPosition({x: event.center.x, y: event.center.y});\n\n    // Native range elements always emit `input` events when the value changed while sliding.\n    this._emitInputEvent();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_onSlideStart(event: HammerInput) {\n    if (this.disabled) {\n      return;\n    }\n\n    // Simulate mouseenter in case this is a mobile device.\n    this._onMouseenter();\n\n    event.preventDefault();\n    this._isSliding = true;\n    this._renderer.addFocus();\n    this._updateValueFromPosition({x: event.center.x, y: event.center.y});\n  }\n/**\n * @return {?}\n */\n_onSlideEnd() {\n    this._isSliding = false;\n    this._emitValueIfChanged();\n  }\n/**\n * @return {?}\n */\n_onFocus() {\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._renderer.getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n/**\n * @return {?}\n */\n_onBlur() {\n    this.onTouched();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_onKeydown(event: KeyboardEvent) {\n    if (this.disabled) { return; }\n\n    switch (event.keyCode) {\n      case PAGE_UP:\n        this._increment(10);\n        break;\n      case PAGE_DOWN:\n        this._increment(-10);\n        break;\n      case END:\n        this.value = this.max;\n        break;\n      case HOME:\n        this.value = this.min;\n        break;\n      case LEFT_ARROW:\n        // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n        // inverted slider the thumb moves in that direction. However for a blind user, nothing\n        // about the slider indicates that it is inverted. They will expect left to be decrement,\n        // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n        // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n        // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n        // sighted users, therefore we do not swap the meaning.\n        this._increment(this._direction == 'rtl' ? 1 : -1);\n        break;\n      case UP_ARROW:\n        this._increment(1);\n        break;\n      case RIGHT_ARROW:\n        // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n        this._increment(this._direction == 'rtl' ? -1 : 1);\n        break;\n      case DOWN_ARROW:\n        this._increment(-1);\n        break;\n      default:\n        // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n        // it.\n        return;\n    }\n\n    this._isSliding = true;\n    event.preventDefault();\n  }\n/**\n * @return {?}\n */\n_onKeyup() {\n    this._isSliding = false;\n  }\n/**\n * Increments the slider by the given number of steps (negative number decrements).\n * @param {?} numSteps\n * @return {?}\n */\nprivate _increment(numSteps: number) {\n    this.value = this._clamp(this.value + this.step * numSteps, this.min, this.max);\n    this._emitInputEvent();\n    this._emitValueIfChanged();\n  }\n/**\n * Calculate the new value from the new physical location. The value will always be snapped.\n * @param {?} pos\n * @return {?}\n */\nprivate _updateValueFromPosition(pos: {x: number, y: number}) {\n    if (!this._sliderDimensions) {\n      return;\n    }\n\n    let /** @type {?} */ offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n    let /** @type {?} */ size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n    let /** @type {?} */ posComponent = this.vertical ? pos.y : pos.x;\n\n    // The exact value is calculated from the event and used to find the closest snap value.\n    let /** @type {?} */ percent = this._clamp((posComponent - offset) / size);\n    if (this._invertMouseCoords) {\n      percent = 1 - percent;\n    }\n    let /** @type {?} */ exactValue = this._calculateValue(percent);\n\n    // This calculation finds the closest step by finding the closest whole number divisible by the\n    // step relative to the min.\n    let /** @type {?} */ closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n    // The value needs to snap to the min and max.\n    this.value = this._clamp(closestValue, this.min, this.max);\n  }\n/**\n * Emits a change event if the current value is different from the last emitted value.\n * @return {?}\n */\nprivate _emitValueIfChanged() {\n    if (this.value != this._lastChangeValue) {\n      let /** @type {?} */ event = this._createChangeEvent();\n      this._lastChangeValue = this.value;\n      this._controlValueAccessorChangeFn(this.value);\n      this.change.emit(event);\n    }\n  }\n/**\n * Emits an input event when the current value is different from the last emitted value.\n * @return {?}\n */\nprivate _emitInputEvent() {\n    if (this.value != this._lastInputValue) {\n      let /** @type {?} */ event = this._createChangeEvent();\n      this._lastInputValue = this.value;\n      this.input.emit(event);\n    }\n  }\n/**\n * Updates the amount of space between ticks as a percentage of the width of the slider.\n * @return {?}\n */\nprivate _updateTickIntervalPercent() {\n    if (!this.tickInterval) {\n      return;\n    }\n\n    if (this.tickInterval == 'auto') {\n      let /** @type {?} */ trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n      let /** @type {?} */ pixelsPerStep = trackSize * this.step / (this.max - this.min);\n      let /** @type {?} */ stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n      let /** @type {?} */ pixelsPerTick = stepsPerTick * this.step;\n      this._tickIntervalPercent = pixelsPerTick / trackSize;\n    } else {\n      this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n    }\n  }\n/**\n * Creates a slider change object from the specified value.\n * @param {?=} value\n * @return {?}\n */\nprivate _createChangeEvent(value = this.value): MdSliderChange {\n    let /** @type {?} */ event = new MdSliderChange();\n\n    event.source = this;\n    event.value = value;\n\n    return event;\n  }\n/**\n * Calculates the percentage of the slider that a value is.\n * @param {?} value\n * @return {?}\n */\nprivate _calculatePercentage(value: number) {\n    return (value - this.min) / (this.max - this.min);\n  }\n/**\n * Calculates the value a percentage of the slider corresponds to.\n * @param {?} percentage\n * @return {?}\n */\nprivate _calculateValue(percentage: number) {\n    return this.min + percentage * (this.max - this.min);\n  }\n/**\n * Return a number between two numbers.\n * @param {?} value\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nprivate _clamp(value: number, min = 0, max = 1) {\n    return Math.max(min, Math.min(value, max));\n  }\n/**\n * Sets the model value. Implemented as part of ControlValueAccessor.\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any) {\n    this.value = value;\n  }\n/**\n * Registers a callback to eb triggered when the value has changed.\n * Implemented as part of ControlValueAccessor.\n * @param {?} fn Callback to be registered.\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n/**\n * Registers a callback to be triggered when the component is touched.\n * Implemented as part of ControlValueAccessor.\n * @param {?} fn Callback to be registered.\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n/**\n * Sets whether the component should be disabled.\n * Implemented as part of ControlValueAccessor.\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-slider, mat-slider',\n  providers: [MD_SLIDER_VALUE_ACCESSOR],\n  host: {\n    '(focus)': '_onFocus()',\n    '(blur)': '_onBlur()',\n    '(click)': '_onClick($event)',\n    '(keydown)': '_onKeydown($event)',\n    '(keyup)': '_onKeyup()',\n    '(mouseenter)': '_onMouseenter()',\n    '(slide)': '_onSlide($event)',\n    '(slideend)': '_onSlideEnd()',\n    '(slidestart)': '_onSlideStart($event)',\n    'class': 'mat-slider',\n    'role': 'slider',\n    'tabindex': '0',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuemin]': 'min',\n    '[attr.aria-valuenow]': 'value',\n    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n    '[class.mat-primary]': 'color == \"primary\"',\n    '[class.mat-accent]': 'color != \"primary\" && color != \"warn\"',\n    '[class.mat-warn]': 'color == \"warn\"',\n    '[class.mat-slider-disabled]': 'disabled',\n    '[class.mat-slider-has-ticks]': 'tickInterval',\n    '[class.mat-slider-horizontal]': '!vertical',\n    '[class.mat-slider-axis-inverted]': '_invertAxis',\n    '[class.mat-slider-sliding]': '_isSliding',\n    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n    '[class.mat-slider-vertical]': 'vertical',\n    '[class.mat-slider-min-value]': '_isMinValue',\n    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n  },\n  templateUrl: 'slider.html',\n  styleUrls: ['slider.css'],\n  inputs: ['disabled'],\n  encapsulation: ViewEncapsulation.None,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: FocusOriginMonitor, },\n{type: Dir, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'invert': [{ type: Input },],\n'max': [{ type: Input },],\n'min': [{ type: Input },],\n'step': [{ type: Input },],\n'thumbLabel': [{ type: Input },],\n'_thumbLabelDeprecated': [{ type: Input, args: ['thumb-label', ] },],\n'tickInterval': [{ type: Input },],\n'_tickIntervalDeprecated': [{ type: Input, args: ['tick-interval', ] },],\n'value': [{ type: Input },],\n'vertical': [{ type: Input },],\n'color': [{ type: Input },],\n'change': [{ type: Output },],\n'input': [{ type: Output },],\n};\n}\n\nfunction MdSlider_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSlider.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSlider.ctorParameters;\n/** @type {?} */\nMdSlider.propDecorators;\n/** @type {?} */\nMdSlider.prototype._invert;\n/** @type {?} */\nMdSlider.prototype._max;\n/** @type {?} */\nMdSlider.prototype._min;\n/** @type {?} */\nMdSlider.prototype._step;\n/** @type {?} */\nMdSlider.prototype._thumbLabel;\n/** @type {?} */\nMdSlider.prototype._tickInterval;\n/** @type {?} */\nMdSlider.prototype._value;\n/** @type {?} */\nMdSlider.prototype._vertical;\n/** @type {?} */\nMdSlider.prototype.color;\n/**\n * Event emitted when the slider value has changed.\n * @type {?}\n */\nMdSlider.prototype.change;\n/**\n * Event emitted when the slider thumb moves.\n * @type {?}\n */\nMdSlider.prototype.input;\n/**\n * onTouch function registered via registerOnTouch (ControlValueAccessor).\n * @type {?}\n */\nMdSlider.prototype.onTouched;\n/** @type {?} */\nMdSlider.prototype._percent;\n/**\n * Whether or not the thumb is sliding.\n * Used to determine if there should be a transition for the thumb and fill track.\n * @type {?}\n */\nMdSlider.prototype._isSliding;\n/**\n * Whether or not the slider is active (clicked or sliding).\n * Used to shrink and grow the thumb as according to the Material Design spec.\n * @type {?}\n */\nMdSlider.prototype._isActive;\n/**\n * The size of a tick interval as a percentage of the size of the track.\n * @type {?}\n */\nMdSlider.prototype._tickIntervalPercent;\n/**\n * A renderer to handle updating the slider's thumb and fill track.\n * @type {?}\n */\nMdSlider.prototype._renderer;\n/**\n * The dimensions of the slider.\n * @type {?}\n */\nMdSlider.prototype._sliderDimensions;\n/** @type {?} */\nMdSlider.prototype._controlValueAccessorChangeFn;\n/**\n * The last value for which a change event was emitted.\n * @type {?}\n */\nMdSlider.prototype._lastChangeValue;\n/**\n * The last value for which an input event was emitted.\n * @type {?}\n */\nMdSlider.prototype._lastInputValue;\n/**\n * Decimal places to round to, based on the step amount.\n * @type {?}\n */\nMdSlider.prototype._roundLabelTo;\n/** @type {?} */\nMdSlider.prototype._elementRef;\n/** @type {?} */\nMdSlider.prototype._focusOriginMonitor;\n/** @type {?} */\nMdSlider.prototype._dir;\n}\n\n/**\n * Renderer class in order to keep all dom manipulation in one place and outside of the main class.\n * \\@docs-private\n */\nexport class SliderRenderer {\nprivate _sliderElement: HTMLElement;\n/**\n * @param {?} elementRef\n */\nconstructor(elementRef: ElementRef) {\n    this._sliderElement = elementRef.nativeElement;\n  }\n/**\n * Get the bounding client rect of the slider track element.\n * The track is used rather than the native element to ignore the extra space that the thumb can\n * take up.\n * @return {?}\n */\ngetSliderDimensions() {\n    let /** @type {?} */ wrapperElement = this._sliderElement.querySelector('.mat-slider-wrapper');\n    return wrapperElement.getBoundingClientRect();\n  }\n/**\n * Focuses the native element.\n * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n * @return {?}\n */\naddFocus() {\n    this._sliderElement.focus();\n  }\n}\n\nfunction SliderRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderRenderer.prototype._sliderElement;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {coerceBooleanProperty} from '../coercion/boolean-property';\n\n\n/** @docs-private */\nexport type Constructor<T> = new(...args: any[]) => T;\n\n/** @docs-private */\nexport interface CanDisable {\n  disabled: boolean;\n}\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<CanDisable> & T {\n  return class extends base {\nprivate _disabled: boolean = false;\n/**\n * @return {?}\n */\nget disabled() { return this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n/**\n * @param {...?} args\n */\nconstructor(...args: any[]) { super(...args); }\n  };\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MdSelect} from './select';\nimport {MdOptionModule} from '../core/option/option';\nimport {MdCommonModule, OverlayModule} from '../core';\nexport class MdSelectModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    OverlayModule,\n    MdOptionModule,\n    MdCommonModule,\n  ],\n  exports: [MdSelect, MdOptionModule, MdCommonModule],\n  declarations: [MdSelect],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdSelectModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSelectModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSelectModule.ctorParameters;\n}\n\n\n\nexport {SELECT_OPTION_HEIGHT,SELECT_PANEL_MAX_HEIGHT,SELECT_MAX_OPTIONS_DISPLAYED,SELECT_TRIGGER_HEIGHT,SELECT_OPTION_HEIGHT_ADJUSTMENT,SELECT_PANEL_PADDING_X,SELECT_MULTIPLE_PANEL_PADDING_X,SELECT_PANEL_PADDING_Y,SELECT_PANEL_VIEWPORT_PADDING,MdSelectChange,MdSelectFloatPlaceholderType,MdSelect} from './select';\nexport {fadeInContent, transformPanel, transformPlaceholder} from './select-animations';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  Renderer2,\n  Self,\n  ViewEncapsulation,\n  ViewChild,\n  ChangeDetectorRef,\n  Attribute,\n  OnInit,\n} from '@angular/core';\nimport {MdOption, MdOptionSelectionChange} from '../core/option/option';\nimport {ENTER, SPACE, UP_ARROW, DOWN_ARROW, HOME, END} from '../core/keyboard/keycodes';\nimport {FocusKeyManager} from '../core/a11y/focus-key-manager';\nimport {Dir} from '../core/rtl/dir';\nimport {Observable} from 'rxjs/Observable';\nimport {Subscription} from 'rxjs/Subscription';\nimport {transformPlaceholder, transformPanel, fadeInContent} from './select-animations';\nimport {ControlValueAccessor, NgControl} from '@angular/forms';\nimport {coerceBooleanProperty} from '../core/coercion/boolean-property';\nimport {ConnectedOverlayDirective} from '../core/overlay/overlay-directives';\nimport {ViewportRuler} from '../core/overlay/position/viewport-ruler';\nimport {SelectionModel} from '../core/selection/selection';\nimport {ScrollDispatcher} from '../core/overlay/scroll/scroll-dispatcher';\nimport {getMdSelectDynamicMultipleError, getMdSelectNonArrayValueError} from './select-errors';\nimport'rxjs/add/observable/merge';\nimport'rxjs/add/operator/startWith';\nimport'rxjs/add/operator/filter';\n/**\n * The fixed height of every option element.\n */\nexport const SELECT_OPTION_HEIGHT = 48;\n/**\n * The max height of the select's overlay panel\n */\nexport const SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The max number of options visible at once in the select panel.\n */\nexport const SELECT_MAX_OPTIONS_DISPLAYED = 5;\n/**\n * The fixed height of the select's trigger element.\n */\nexport const SELECT_TRIGGER_HEIGHT = 30;\n/**\n * Must adjust for the difference in height between the option and the trigger,\n * so the text will align on the y axis.\n * (SELECT_OPTION_HEIGHT (48) - SELECT_TRIGGER_HEIGHT (30)) / 2 = 9\n */\nexport const SELECT_OPTION_HEIGHT_ADJUSTMENT = 9;\n/**\n * The panel's padding on the x-axis\n */\nexport const SELECT_PANEL_PADDING_X = 16;\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n * \n * (SELECT_PADDING * 1.75) + 20 = 48\n * The padding is multiplied by 1.75 because the checkbox's margin is half the padding, and\n * the browser adds ~4px, because we're using inline elements.\n * The checkbox width is 20px.\n */\nexport const SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.75 + 20;\n/**\n * The panel's padding on the y-axis. This padding indicates there are more\n * options available if you scroll.\n */\nexport const SELECT_PANEL_PADDING_Y = 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Change event object that is emitted when the select value has changed.\n */\nexport class MdSelectChange {\n/**\n * @param {?} source\n * @param {?} value\n */\nconstructor(public source: MdSelect,\npublic value: any) { }\n}\n\nfunction MdSelectChange_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSelectChange.prototype.source;\n/** @type {?} */\nMdSelectChange.prototype.value;\n}\n\n\n/** Allowed values for the floatPlaceholder option. */\nexport type MdSelectFloatPlaceholderType = 'always' | 'never' | 'auto';\nexport class MdSelect implements AfterContentInit, OnDestroy, OnInit, ControlValueAccessor {\n/**\n * Whether or not the overlay panel is open.\n */\nprivate _panelOpen = false;\n/**\n * Subscriptions to option events.\n */\nprivate _optionSubscription: Subscription;\n/**\n * Subscription to changes in the option list.\n */\nprivate _changeSubscription: Subscription;\n/**\n * Subscription to tab events while overlay is focused.\n */\nprivate _tabSubscription: Subscription;\n/**\n * Whether filling out the select is required in the form.\n */\nprivate _required: boolean = false;\n/**\n * Whether the select is disabled.\n */\nprivate _disabled: boolean = false;\n/**\n * The scroll position of the overlay panel, calculated to center the selected option.\n */\nprivate _scrollTop = 0;\n/**\n * The placeholder displayed in the trigger of the select.\n */\nprivate _placeholder: string;\n/**\n * Whether the component is in multiple selection mode.\n */\nprivate _multiple: boolean = false;\n/**\n * Deals with the selection logic.\n */\n_selectionModel: SelectionModel<MdOption>;\n/**\n * The animation state of the placeholder.\n */\nprivate _placeholderState = '';\n/**\n * Tab index for the element.\n */\nprivate _tabIndex: number;\n/**\n * Theme color for the component.\n */\nprivate _color: string;\n/**\n * The width of the trigger. Must be saved to set the min width of the overlay panel\n * and the width of the selected value.\n */\n_triggerWidth: number;\n/**\n * Manages keyboard events for options in the panel.\n */\n_keyManager: FocusKeyManager;\n/**\n * The width of the selected option's value. Must be set programmatically\n * to ensure its overflow is clipped, as it's absolutely positioned.\n */\n_selectedValueWidth: number;\n/**\n * View -> model callback called when value changes\n */\n_onChange = (value: any) => {};\n/**\n * View -> model callback called when select has been touched\n */\n_onTouched = () => {};\n/**\n * The IDs of child options to be passed to the aria-owns attribute.\n */\n_optionIds: string = '';\n/**\n * The value of the select panel's transform-origin property.\n */\n_transformOrigin: string = 'top';\n/**\n * Whether the panel's animation is done.\n */\n_panelDoneAnimating: boolean = false;\n/**\n * The y-offset of the overlay panel in relation to the trigger's top start corner.\n * This must be adjusted to align the selected option text over the trigger text.\n * when the panel opens. Will change based on the y-position of the selected option.\n */\n_offsetY = 0;\n/**\n * This position config ensures that the top \"start\" corner of the overlay\n * is aligned with with the top \"start\" of the origin by default (overlapping\n * the trigger completely). If the panel cannot fit below the trigger, it\n * will fall back to a position above the trigger.\n */\n_positions = [\n    {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n    },\n    {\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'bottom',\n    },\n  ];\n/**\n * Trigger that opens the select.\n */\ntrigger: ElementRef;\n/**\n * Overlay pane containing the options.\n */\noverlayDir: ConnectedOverlayDirective;\n/**\n * All of the defined select options.\n */\noptions: QueryList<MdOption>;\n/**\n * Placeholder to be shown if no value has been selected.\n * @return {?}\n */\nget placeholder() { return this._placeholder; }\n/**\n * @param {?} value\n * @return {?}\n */\nset placeholder(value: string) {\n    this._placeholder = value;\n\n    // Must wait to record the trigger width to ensure placeholder width is included.\n    Promise.resolve(null).then(() => this._setTriggerWidth());\n  }\n/**\n * Whether the component is disabled.\n * @return {?}\n */\nget disabled() { return this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: any) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n/**\n * Whether the component is required.\n * @return {?}\n */\nget required() { return this._required; }\n/**\n * @param {?} value\n * @return {?}\n */\nset required(value: any) { this._required = coerceBooleanProperty(value); }\n/**\n * Whether the user should be allowed to select multiple options.\n * @return {?}\n */\nget multiple(): boolean { return this._multiple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset multiple(value: boolean) {\n    if (this._selectionModel) {\n      throw getMdSelectDynamicMultipleError();\n    }\n\n    this._multiple = coerceBooleanProperty(value);\n  }\n/**\n * Whether to float the placeholder text.\n * @return {?}\n */\nget floatPlaceholder(): MdSelectFloatPlaceholderType { return this._floatPlaceholder; }\n/**\n * @param {?} value\n * @return {?}\n */\nset floatPlaceholder(value: MdSelectFloatPlaceholderType) {\n    this._floatPlaceholder = value || 'auto';\n  }\nprivate _floatPlaceholder: MdSelectFloatPlaceholderType = 'auto';\n/**\n * Tab index for the select element.\n * @return {?}\n */\nget tabIndex(): number { return this._disabled ? -1 : this._tabIndex; }\n/**\n * @param {?} value\n * @return {?}\n */\nset tabIndex(value: number) {\n    if (typeof value !== 'undefined') {\n      this._tabIndex = value;\n    }\n  }\n/**\n * Aria label of the select. If not specified, the placeholder will be used as label.\n */\nariaLabel: string = '';\n/**\n * Input that can be used to specify the `aria-labelledby` attribute.\n */\nariaLabelledby: string = '';\n/**\n * Theme color for the component.\n * @return {?}\n */\nget color(): string { return this._color; }\n/**\n * @param {?} value\n * @return {?}\n */\nset color(value: string) {\n    if (value && value !== this._color) {\n      this._renderer.removeClass(this._element.nativeElement, `mat-${this._color}`);\n      this._renderer.addClass(this._element.nativeElement, `mat-${value}`);\n      this._color = value;\n    }\n  }\n/**\n * Combined stream of all of the child options' change events.\n * @return {?}\n */\nget optionSelectionChanges(): Observable<MdOptionSelectionChange> {\n    return Observable.merge(...this.options.map(option => option.onSelectionChange));\n  }\n/**\n * Event emitted when the select has been opened.\n */\nonOpen: EventEmitter<void> = new EventEmitter<void>();\n/**\n * Event emitted when the select has been closed.\n */\nonClose: EventEmitter<void> = new EventEmitter<void>();\n/**\n * Event emitted when the selected value has been changed by the user.\n */\nchange: EventEmitter<MdSelectChange> = new EventEmitter<MdSelectChange>();\n/**\n * @param {?} _element\n * @param {?} _renderer\n * @param {?} _viewportRuler\n * @param {?} _changeDetectorRef\n * @param {?} _dir\n * @param {?} _control\n * @param {?} tabIndex\n */\nconstructor(private _element: ElementRef,\nprivate _renderer: Renderer2,\nprivate _viewportRuler: ViewportRuler,\nprivate _changeDetectorRef: ChangeDetectorRef,\nprivate _dir: Dir,\npublic _control: NgControl,\n               tabIndex: string) {\n\n    if (this._control) {\n      this._control.valueAccessor = this;\n    }\n\n    this._tabIndex = parseInt(tabIndex) || 0;\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this._selectionModel = new SelectionModel<MdOption>(this.multiple, null, false);\n    this.color = this.color || 'primary';\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._initKeyManager();\n\n    this._changeSubscription = this.options.changes.startWith(null).subscribe(() => {\n      this._resetOptions();\n\n      if (this._control) {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve(null).then(() => this._setSelectionByValue(this._control.value));\n      }\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._dropSubscriptions();\n\n    if (this._changeSubscription) {\n      this._changeSubscription.unsubscribe();\n    }\n\n    if (this._tabSubscription) {\n      this._tabSubscription.unsubscribe();\n    }\n  }\n/**\n * Toggles the overlay panel open or closed.\n * @return {?}\n */\ntoggle(): void {\n    this.panelOpen ? this.close() : this.open();\n  }\n/**\n * Opens the overlay panel.\n * @return {?}\n */\nopen(): void {\n    if (this.disabled || !this.options.length) {\n      return;\n    }\n\n    if (!this._triggerWidth) {\n      this._setTriggerWidth();\n    }\n\n    this._calculateOverlayPosition();\n    this._placeholderState = this._floatPlaceholderState();\n    this._panelOpen = true;\n  }\n/**\n * Closes the overlay panel and focuses the host element.\n * @return {?}\n */\nclose(): void {\n    if (this._panelOpen) {\n      this._panelOpen = false;\n\n      if (this._selectionModel.isEmpty()) {\n        this._placeholderState = '';\n      }\n\n      this._focusHost();\n    }\n  }\n/**\n * Sets the select's value. Part of the ControlValueAccessor interface\n * required to integrate with Angular's core forms API.\n * \n * @param {?} value New value to be written to the model.\n * @return {?}\n */\nwriteValue(value: any): void {\n    if (this.options) {\n      this._setSelectionByValue(value);\n    }\n  }\n/**\n * Saves a callback function to be invoked when the select's value\n * changes from user input. Part of the ControlValueAccessor interface\n * required to integrate with Angular's core forms API.\n * \n * @param {?} fn Callback to be triggered when the value changes.\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => void): void {\n    this._onChange = fn;\n  }\n/**\n * Saves a callback function to be invoked when the select is blurred\n * by the user. Part of the ControlValueAccessor interface required\n * to integrate with Angular's core forms API.\n * \n * @param {?} fn Callback to be triggered when the component has been touched.\n * @return {?}\n */\nregisterOnTouched(fn: () => {}): void {\n    this._onTouched = fn;\n  }\n/**\n * Disables the select. Part of the ControlValueAccessor interface required\n * to integrate with Angular's core forms API.\n * \n * @param {?} isDisabled Sets whether the component is disabled.\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n/**\n * Whether or not the overlay panel is open.\n * @return {?}\n */\nget panelOpen(): boolean {\n    return this._panelOpen;\n  }\n/**\n * The currently selected option.\n * @return {?}\n */\nget selected(): MdOption | MdOption[] {\n    return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n  }\n/**\n * The value displayed in the trigger.\n * @return {?}\n */\nget triggerValue(): string {\n    if (this._multiple) {\n      let /** @type {?} */ selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n\n      if (this._isRtl()) {\n        selectedOptions.reverse();\n      }\n\n      // TODO(crisbeto): delimiter should be configurable for proper localization.\n      return selectedOptions.join(', ');\n    }\n\n    return this._selectionModel.selected[0].viewValue;\n  }\n/**\n * Whether the element is in RTL mode.\n * @return {?}\n */\n_isRtl(): boolean {\n    return this._dir ? this._dir.value === 'rtl' : false;\n  }\n/**\n * Sets the width of the trigger element. This is necessary to match\n * the overlay width to the trigger width.\n * @return {?}\n */\nprivate _setTriggerWidth(): void {\n    this._triggerWidth = this._getTriggerRect().width;\n  }\n/**\n * Handles the keyboard interactions of a closed select.\n * @param {?} event\n * @return {?}\n */\n_handleClosedKeydown(event: KeyboardEvent): void {\n    if (!this.disabled) {\n      if (event.keyCode === ENTER || event.keyCode === SPACE) {\n        event.preventDefault(); // prevents the page from scrolling down when pressing space\n        this.open();\n      } else if (event.keyCode === UP_ARROW || event.keyCode === DOWN_ARROW) {\n        this._handleArrowKey(event);\n      }\n    }\n  }\n/**\n * Handles keypresses inside the panel.\n * @param {?} event\n * @return {?}\n */\n_handlePanelKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === HOME || event.keyCode === END) {\n      event.preventDefault();\n      event.keyCode === HOME ? this._keyManager.setFirstItemActive() :\n                               this._keyManager.setLastItemActive();\n    } else {\n      this._keyManager.onKeydown(event);\n    }\n  }\n/**\n * When the panel element is finished transforming in (though not fading in), it\n * emits an event and focuses an option if the panel is open.\n * @return {?}\n */\n_onPanelDone(): void {\n    if (this.panelOpen) {\n      this._focusCorrectOption();\n      this.onOpen.emit();\n    } else {\n      this.onClose.emit();\n      this._panelDoneAnimating = false;\n      this.overlayDir.offsetX = 0;\n    }\n  }\n/**\n * When the panel content is done fading in, the _panelDoneAnimating property is\n * set so the proper class can be added to the panel.\n * @return {?}\n */\n_onFadeInDone(): void {\n    this._panelDoneAnimating = this.panelOpen;\n  }\n/**\n * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n * \"blur\" to the panel when it opens, causing a false positive.\n * @return {?}\n */\n_onBlur() {\n    if (!this.panelOpen) {\n      this._onTouched();\n    }\n  }\n/**\n * Callback that is invoked when the overlay panel has been attached.\n * @return {?}\n */\n_onAttached(): void {\n    this._calculateOverlayOffsetX();\n    this._setScrollTop();\n  }\n/**\n * Sets the scroll position of the scroll container. This must be called after\n * the overlay pane is attached or the scroll container element will not yet be\n * present in the DOM.\n * @return {?}\n */\nprivate _setScrollTop(): void {\n    const /** @type {?} */ scrollContainer =\n        this.overlayDir.overlayRef.overlayElement.querySelector('.mat-select-panel');\n    scrollContainer.scrollTop = this._scrollTop;\n  }\n/**\n * Sets the selected option based on a value. If no option can be\n * found with the designated value, the select trigger is cleared.\n * @param {?} value\n * @return {?}\n */\nprivate _setSelectionByValue(value: any | any[]): void {\n    const /** @type {?} */ isArray = Array.isArray(value);\n\n    if (this.multiple && value && !isArray) {\n      throw getMdSelectNonArrayValueError();\n    }\n\n    this._clearSelection();\n\n    if (isArray) {\n      value.forEach((currentValue: any) => this._selectValue(currentValue));\n      this._sortValues();\n    } else {\n      this._selectValue(value);\n    }\n\n    this._setValueWidth();\n\n    if (this._selectionModel.isEmpty()) {\n      this._placeholderState = '';\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Finds and selects and option based on its value.\n * @param {?} value\n * @return {?} Option that has the corresponding value.\n */\nprivate _selectValue(value: any): MdOption {\n    let /** @type {?} */ optionsArray = this.options.toArray();\n    let /** @type {?} */ correspondingOption = optionsArray.find(option => option.value && option.value === value);\n\n    if (correspondingOption) {\n      correspondingOption.select();\n      this._selectionModel.select(correspondingOption);\n      this._keyManager.setActiveItem(optionsArray.indexOf(correspondingOption));\n    }\n\n    return correspondingOption;\n  }\n/**\n * Clears the select trigger and deselects every option in the list.\n * @param {?=} skip Option that should not be deselected.\n * @return {?}\n */\nprivate _clearSelection(skip?: MdOption): void {\n    this._selectionModel.clear();\n    this.options.forEach(option => {\n      if (option !== skip) {\n        option.deselect();\n      }\n    });\n  }\n/**\n * @return {?}\n */\nprivate _getTriggerRect(): ClientRect {\n    return this.trigger.nativeElement.getBoundingClientRect();\n  }\n/**\n * Sets up a key manager to listen to keyboard events on the overlay panel.\n * @return {?}\n */\nprivate _initKeyManager() {\n    this._keyManager = new FocusKeyManager(this.options);\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.close());\n  }\n/**\n * Drops current option subscriptions and IDs and resets from scratch.\n * @return {?}\n */\nprivate _resetOptions(): void {\n    this._dropSubscriptions();\n    this._listenToOptions();\n    this._setOptionIds();\n    this._setOptionMultiple();\n  }\n/**\n * Listens to user-generated selection events on each option.\n * @return {?}\n */\nprivate _listenToOptions(): void {\n    this._optionSubscription = this.optionSelectionChanges\n      .filter(event => event.isUserInput)\n      .subscribe(event => {\n        this._onSelect(event.source);\n        this._setValueWidth();\n\n        if (!this.multiple) {\n          this.close();\n        }\n      });\n  }\n/**\n * Invoked when an option is clicked.\n * @param {?} option\n * @return {?}\n */\nprivate _onSelect(option: MdOption): void {\n    const /** @type {?} */ wasSelected = this._selectionModel.isSelected(option);\n\n    // TODO(crisbeto): handle blank/null options inside multi-select.\n    if (this.multiple) {\n      this._selectionModel.toggle(option);\n      wasSelected ? option.deselect() : option.select();\n      this._sortValues();\n    } else {\n      this._clearSelection(option.value == null ? null : option);\n\n      if (option.value == null) {\n        this._propagateChanges(option.value);\n      } else {\n        this._selectionModel.select(option);\n      }\n    }\n\n    if (wasSelected !== this._selectionModel.isSelected(option)) {\n      this._propagateChanges();\n    }\n  }\n/**\n * Sorts the model values, ensuring that they keep the same\n * order that they have in the panel.\n * @return {?}\n */\nprivate _sortValues(): void {\n    if (this._multiple) {\n      this._selectionModel.clear();\n\n      this.options.forEach(option => {\n        if (option.selected) {\n          this._selectionModel.select(option);\n        }\n      });\n    }\n  }\n/**\n * Unsubscribes from all option subscriptions.\n * @return {?}\n */\nprivate _dropSubscriptions(): void {\n    if (this._optionSubscription) {\n      this._optionSubscription.unsubscribe();\n      this._optionSubscription = null;\n    }\n  }\n/**\n * Emits change event to set the model value.\n * @param {?=} fallbackValue\n * @return {?}\n */\nprivate _propagateChanges(fallbackValue?: any): void {\n    let /** @type {?} */ valueToEmit = null;\n\n    if (Array.isArray(this.selected)) {\n      valueToEmit = this.selected.map(option => option.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : fallbackValue;\n    }\n\n    this._onChange(valueToEmit);\n    this.change.emit(new MdSelectChange(this, valueToEmit));\n  }\n/**\n * Records option IDs to pass to the aria-owns property.\n * @return {?}\n */\nprivate _setOptionIds() {\n    this._optionIds = this.options.map(option => option.id).join(' ');\n  }\n/**\n * Sets the `multiple` property on each option. The promise is necessary\n * in order to avoid Angular errors when modifying the property after init.\n * @return {?}\n */\nprivate _setOptionMultiple() {\n    if (this.multiple) {\n      Promise.resolve(null).then(() => {\n        this.options.forEach(option => option.multiple = this.multiple);\n      });\n    }\n  }\n/**\n * Must set the width of the selected option's value programmatically\n * because it is absolutely positioned and otherwise will not clip\n * overflow. The selection arrow is 9px wide, add 4px of padding = 13\n * @return {?}\n */\nprivate _setValueWidth() {\n    this._selectedValueWidth =  this._triggerWidth - 13;\n  }\n/**\n * Focuses the selected item. If no option is selected, it will focus\n * the first item instead.\n * @return {?}\n */\nprivate _focusCorrectOption(): void {\n    if (this._selectionModel.isEmpty()) {\n      this._keyManager.setFirstItemActive();\n    } else {\n      this._keyManager.setActiveItem(this._getOptionIndex(this._selectionModel.selected[0]));\n    }\n  }\n/**\n * Focuses the host element when the panel closes.\n * @return {?}\n */\nprivate _focusHost(): void {\n    this._element.nativeElement.focus();\n  }\n/**\n * Gets the index of the provided option in the option list.\n * @param {?} option\n * @return {?}\n */\nprivate _getOptionIndex(option: MdOption): number {\n    return this.options.reduce((result: number, current: MdOption, index: number) => {\n      return result === undefined ? (option === current ? index : undefined) : result;\n    }, undefined);\n  }\n/**\n * Calculates the scroll position and x- and y-offsets of the overlay panel.\n * @return {?}\n */\nprivate _calculateOverlayPosition(): void {\n    const /** @type {?} */ panelHeight =\n        Math.min(this.options.length * SELECT_OPTION_HEIGHT, SELECT_PANEL_MAX_HEIGHT);\n    const /** @type {?} */ scrollContainerHeight = this.options.length * SELECT_OPTION_HEIGHT;\n\n    // The farthest the panel can be scrolled before it hits the bottom\n    const /** @type {?} */ maxScroll = scrollContainerHeight - panelHeight;\n\n    if (this._selectionModel.hasValue()) {\n      const /** @type {?} */ selectedIndex = this._getOptionIndex(this._selectionModel.selected[0]);\n      // We must maintain a scroll buffer so the selected option will be scrolled to the\n      // center of the overlay panel rather than the top.\n      const /** @type {?} */ scrollBuffer = panelHeight / 2;\n      this._scrollTop = this._calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll);\n      this._offsetY = this._calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll);\n    } else {\n      // If no option is selected, the panel centers on the first option. In this case,\n      // we must only adjust for the height difference between the option element\n      // and the trigger element, then multiply it by -1 to ensure the panel moves\n      // in the correct direction up the page.\n      this._offsetY = (SELECT_OPTION_HEIGHT - SELECT_TRIGGER_HEIGHT) / 2 * -1;\n    }\n\n    this._checkOverlayWithinViewport(maxScroll);\n  }\n/**\n * Calculates the scroll position of the select's overlay panel.\n * \n * Attempts to center the selected option in the panel. If the option is\n * too high or too low in the panel to be scrolled to the center, it clamps the\n * scroll position to the min or max scroll positions respectively.\n * @param {?} selectedIndex\n * @param {?} scrollBuffer\n * @param {?} maxScroll\n * @return {?}\n */\n_calculateOverlayScroll(selectedIndex: number, scrollBuffer: number,\n                          maxScroll: number): number {\n    const /** @type {?} */ optionOffsetFromScrollTop = SELECT_OPTION_HEIGHT * selectedIndex;\n    const /** @type {?} */ halfOptionHeight = SELECT_OPTION_HEIGHT / 2;\n\n    // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n    // scroll container, then subtracts the scroll buffer to scroll the option down to\n    // the center of the overlay panel. Half the option height must be re-added to the\n    // scrollTop so the option is centered based on its middle, not its top edge.\n    const /** @type {?} */ optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n    return clampValue(0, optimalScrollPosition, maxScroll);\n  }\n/**\n * Figures out the appropriate animation state for the placeholder.\n * @return {?}\n */\n_getPlaceholderAnimationState(): string {\n    if (this.floatPlaceholder === 'never') {\n      return '';\n    }\n\n    if (this.floatPlaceholder === 'always') {\n      return this._floatPlaceholderState();\n    }\n\n    return this._placeholderState;\n  }\n/**\n * Determines the CSS `opacity` of the placeholder element.\n * @return {?}\n */\n_getPlaceholderOpacity(): string {\n    return (this.floatPlaceholder !== 'never' || this._selectionModel.isEmpty()) ?\n        '1' : '0';\n  }\n/**\n * Returns the aria-label of the select component.\n * @return {?}\n */\nget _ariaLabel(): string {\n    // If an ariaLabelledby value has been set, the select should not overwrite the\n    // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n    return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n  }\n/**\n * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n * This must be adjusted to align the selected option text over the trigger text when\n * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n * can't be calculated until the panel has been attached, because we need to know the\n * content width in order to constrain the panel within the viewport.\n * @return {?}\n */\nprivate _calculateOverlayOffsetX(): void {\n    const /** @type {?} */ overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n    const /** @type {?} */ viewportRect = this._viewportRuler.getViewportRect();\n    const /** @type {?} */ isRtl = this._isRtl();\n    let /** @type {?} */ offsetX = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X : SELECT_PANEL_PADDING_X;\n\n    if (!isRtl) {\n      offsetX *= -1;\n    }\n\n    const /** @type {?} */ leftOverflow = 0 - (overlayRect.left + offsetX\n        - (isRtl ? SELECT_PANEL_PADDING_X * 2 : 0));\n    const /** @type {?} */ rightOverflow = overlayRect.right + offsetX - viewportRect.width\n        + (isRtl ? 0 : SELECT_PANEL_PADDING_X * 2);\n\n    if (leftOverflow > 0) {\n      offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n    } else if (rightOverflow > 0) {\n      offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n    }\n\n    // Set the offset directly in order to avoid having to go through change detection and\n    // potentially triggering \"changed after it was checked\" errors.\n    this.overlayDir.offsetX = offsetX;\n    this.overlayDir.overlayRef.updatePosition();\n  }\n/**\n * Calculates the y-offset of the select's overlay panel in relation to the\n * top start corner of the trigger. It has to be adjusted in order for the\n * selected option to be aligned over the trigger when the panel opens.\n * @param {?} selectedIndex\n * @param {?} scrollBuffer\n * @param {?} maxScroll\n * @return {?}\n */\nprivate _calculateOverlayOffsetY(selectedIndex: number, scrollBuffer: number,\n                                  maxScroll: number): number {\n    let /** @type {?} */ optionOffsetFromPanelTop: number;\n\n    if (this._scrollTop === 0) {\n      optionOffsetFromPanelTop = selectedIndex * SELECT_OPTION_HEIGHT;\n    } else if (this._scrollTop === maxScroll) {\n      const /** @type {?} */ firstDisplayedIndex = this.options.length - SELECT_MAX_OPTIONS_DISPLAYED;\n      const /** @type {?} */ selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n\n      // Because the panel height is longer than the height of the options alone,\n      // there is always extra padding at the top or bottom of the panel. When\n      // scrolled to the very bottom, this padding is at the top of the panel and\n      // must be added to the offset.\n      optionOffsetFromPanelTop =\n          selectedDisplayIndex * SELECT_OPTION_HEIGHT + SELECT_PANEL_PADDING_Y;\n    } else {\n      // If the option was scrolled to the middle of the panel using a scroll buffer,\n      // its offset will be the scroll buffer minus the half height that was added to\n      // center it.\n      optionOffsetFromPanelTop = scrollBuffer - SELECT_OPTION_HEIGHT / 2;\n    }\n\n    // The final offset is the option's offset from the top, adjusted for the height\n    // difference, multiplied by -1 to ensure that the overlay moves in the correct\n    // direction up the page.\n    return optionOffsetFromPanelTop * -1 - SELECT_OPTION_HEIGHT_ADJUSTMENT;\n  }\n/**\n * Checks that the attempted overlay position will fit within the viewport.\n * If it will not fit, tries to adjust the scroll position and the associated\n * y-offset so the panel can open fully on-screen. If it still won't fit,\n * sets the offset back to 0 to allow the fallback position to take over.\n * @param {?} maxScroll\n * @return {?}\n */\nprivate _checkOverlayWithinViewport(maxScroll: number): void {\n    const /** @type {?} */ viewportRect = this._viewportRuler.getViewportRect();\n    const /** @type {?} */ triggerRect = this._getTriggerRect();\n\n    const /** @type {?} */ topSpaceAvailable = triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n    const /** @type {?} */ bottomSpaceAvailable =\n        viewportRect.height - triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n    const /** @type {?} */ panelHeightTop = Math.abs(this._offsetY);\n    const /** @type {?} */ totalPanelHeight =\n        Math.min(this.options.length * SELECT_OPTION_HEIGHT, SELECT_PANEL_MAX_HEIGHT);\n    const /** @type {?} */ panelHeightBottom = totalPanelHeight - panelHeightTop - triggerRect.height;\n\n    if (panelHeightBottom > bottomSpaceAvailable) {\n      this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n    } else if (panelHeightTop > topSpaceAvailable) {\n     this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n    } else {\n      this._transformOrigin = this._getOriginBasedOnOption();\n    }\n  }\n/**\n * Adjusts the overlay panel up to fit in the viewport.\n * @param {?} panelHeightBottom\n * @param {?} bottomSpaceAvailable\n * @return {?}\n */\nprivate _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n    const /** @type {?} */ distanceBelowViewport = panelHeightBottom - bottomSpaceAvailable;\n\n    // Scrolls the panel up by the distance it was extending past the boundary, then\n    // adjusts the offset by that amount to move the panel up into the viewport.\n    this._scrollTop -= distanceBelowViewport;\n    this._offsetY -= distanceBelowViewport;\n    this._transformOrigin = this._getOriginBasedOnOption();\n\n    // If the panel is scrolled to the very top, it won't be able to fit the panel\n    // by scrolling, so set the offset to 0 to allow the fallback position to take\n    // effect.\n    if (this._scrollTop <= 0) {\n      this._scrollTop = 0;\n      this._offsetY = 0;\n      this._transformOrigin = `50% bottom 0px`;\n    }\n  }\n/**\n * Adjusts the overlay panel down to fit in the viewport.\n * @param {?} panelHeightTop\n * @param {?} topSpaceAvailable\n * @param {?} maxScroll\n * @return {?}\n */\nprivate _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number,\n                           maxScroll: number) {\n    const /** @type {?} */ distanceAboveViewport = panelHeightTop - topSpaceAvailable;\n\n    // Scrolls the panel down by the distance it was extending past the boundary, then\n    // adjusts the offset by that amount to move the panel down into the viewport.\n    this._scrollTop += distanceAboveViewport;\n    this._offsetY += distanceAboveViewport;\n    this._transformOrigin = this._getOriginBasedOnOption();\n\n    // If the panel is scrolled to the very bottom, it won't be able to fit the\n    // panel by scrolling, so set the offset to 0 to allow the fallback position\n    // to take effect.\n    if (this._scrollTop >= maxScroll) {\n      this._scrollTop = maxScroll;\n      this._offsetY = 0;\n      this._transformOrigin = `50% top 0px`;\n      return;\n    }\n  }\n/**\n * Sets the transform origin point based on the selected option.\n * @return {?}\n */\nprivate _getOriginBasedOnOption(): string {\n    const /** @type {?} */ originY =\n        Math.abs(this._offsetY) - SELECT_OPTION_HEIGHT_ADJUSTMENT + SELECT_OPTION_HEIGHT / 2;\n    return `50% ${originY}px 0px`;\n  }\n/**\n * Figures out the floating placeholder state value.\n * @return {?}\n */\nprivate _floatPlaceholderState(): string {\n    return this._isRtl() ? 'floating-rtl' : 'floating-ltr';\n  }\n/**\n * Handles the user pressing the arrow keys on a closed select.\n * @param {?} event\n * @return {?}\n */\nprivate _handleArrowKey(event: KeyboardEvent): void {\n    if (this._multiple) {\n      event.preventDefault();\n      this.open();\n    } else {\n      const /** @type {?} */ prevActiveItem = this._keyManager.activeItem;\n\n      // Cycle though the select options even when the select is closed,\n      // matching the behavior of the native select element.\n      // TODO(crisbeto): native selects also cycle through the options with left/right arrows,\n      // however the key manager only supports up/down at the moment.\n      this._keyManager.onKeydown(event);\n\n      const /** @type {?} */ currentActiveItem = /** @type {?} */(( this._keyManager.activeItem as MdOption));\n\n      if (currentActiveItem !== prevActiveItem) {\n        this._clearSelection();\n        this._setSelectionByValue(currentActiveItem.value);\n        this._propagateChanges();\n      }\n    }\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-select, mat-select',\n  templateUrl: 'select.html',\n  styleUrls: ['select.css'],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'role': 'listbox',\n    '[attr.tabindex]': 'tabIndex',\n    '[attr.aria-label]': '_ariaLabel',\n    '[attr.aria-labelledby]': 'ariaLabelledby',\n    '[attr.aria-required]': 'required.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-invalid]': '_control?.invalid || \"false\"',\n    '[attr.aria-owns]': '_optionIds',\n    '[class.mat-select-disabled]': 'disabled',\n    '[class.mat-select]': 'true',\n    '(keydown)': '_handleClosedKeydown($event)',\n    '(blur)': '_onBlur()',\n  },\n  animations: [\n    transformPlaceholder,\n    transformPanel,\n    fadeInContent\n  ],\n  exportAs: 'mdSelect',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewportRuler, },\n{type: ChangeDetectorRef, },\n{type: Dir, decorators: [{ type: Optional }, ]},\n{type: NgControl, decorators: [{ type: Self }, { type: Optional }, ]},\n{type: undefined, decorators: [{ type: Attribute, args: ['tabindex', ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'trigger': [{ type: ViewChild, args: ['trigger', ] },],\n'overlayDir': [{ type: ViewChild, args: [ConnectedOverlayDirective, ] },],\n'options': [{ type: ContentChildren, args: [MdOption, ] },],\n'placeholder': [{ type: Input },],\n'disabled': [{ type: Input },],\n'required': [{ type: Input },],\n'multiple': [{ type: Input },],\n'floatPlaceholder': [{ type: Input },],\n'tabIndex': [{ type: Input },],\n'ariaLabel': [{ type: Input, args: ['aria-label', ] },],\n'ariaLabelledby': [{ type: Input, args: ['aria-labelledby', ] },],\n'color': [{ type: Input },],\n'onOpen': [{ type: Output },],\n'onClose': [{ type: Output },],\n'change': [{ type: Output },],\n};\n}\n\nfunction MdSelect_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSelect.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSelect.ctorParameters;\n/** @type {?} */\nMdSelect.propDecorators;\n/**\n * Whether or not the overlay panel is open.\n * @type {?}\n */\nMdSelect.prototype._panelOpen;\n/**\n * Subscriptions to option events.\n * @type {?}\n */\nMdSelect.prototype._optionSubscription;\n/**\n * Subscription to changes in the option list.\n * @type {?}\n */\nMdSelect.prototype._changeSubscription;\n/**\n * Subscription to tab events while overlay is focused.\n * @type {?}\n */\nMdSelect.prototype._tabSubscription;\n/**\n * Whether filling out the select is required in the form.\n * @type {?}\n */\nMdSelect.prototype._required;\n/**\n * Whether the select is disabled.\n * @type {?}\n */\nMdSelect.prototype._disabled;\n/**\n * The scroll position of the overlay panel, calculated to center the selected option.\n * @type {?}\n */\nMdSelect.prototype._scrollTop;\n/**\n * The placeholder displayed in the trigger of the select.\n * @type {?}\n */\nMdSelect.prototype._placeholder;\n/**\n * Whether the component is in multiple selection mode.\n * @type {?}\n */\nMdSelect.prototype._multiple;\n/**\n * Deals with the selection logic.\n * @type {?}\n */\nMdSelect.prototype._selectionModel;\n/**\n * The animation state of the placeholder.\n * @type {?}\n */\nMdSelect.prototype._placeholderState;\n/**\n * Tab index for the element.\n * @type {?}\n */\nMdSelect.prototype._tabIndex;\n/**\n * Theme color for the component.\n * @type {?}\n */\nMdSelect.prototype._color;\n/**\n * The width of the trigger. Must be saved to set the min width of the overlay panel\n * and the width of the selected value.\n * @type {?}\n */\nMdSelect.prototype._triggerWidth;\n/**\n * Manages keyboard events for options in the panel.\n * @type {?}\n */\nMdSelect.prototype._keyManager;\n/**\n * The width of the selected option's value. Must be set programmatically\n * to ensure its overflow is clipped, as it's absolutely positioned.\n * @type {?}\n */\nMdSelect.prototype._selectedValueWidth;\n/**\n * View -> model callback called when value changes\n * @type {?}\n */\nMdSelect.prototype._onChange;\n/**\n * View -> model callback called when select has been touched\n * @type {?}\n */\nMdSelect.prototype._onTouched;\n/**\n * The IDs of child options to be passed to the aria-owns attribute.\n * @type {?}\n */\nMdSelect.prototype._optionIds;\n/**\n * The value of the select panel's transform-origin property.\n * @type {?}\n */\nMdSelect.prototype._transformOrigin;\n/**\n * Whether the panel's animation is done.\n * @type {?}\n */\nMdSelect.prototype._panelDoneAnimating;\n/**\n * The y-offset of the overlay panel in relation to the trigger's top start corner.\n * This must be adjusted to align the selected option text over the trigger text.\n * when the panel opens. Will change based on the y-position of the selected option.\n * @type {?}\n */\nMdSelect.prototype._offsetY;\n/**\n * This position config ensures that the top \"start\" corner of the overlay\n * is aligned with with the top \"start\" of the origin by default (overlapping\n * the trigger completely). If the panel cannot fit below the trigger, it\n * will fall back to a position above the trigger.\n * @type {?}\n */\nMdSelect.prototype._positions;\n/**\n * Trigger that opens the select.\n * @type {?}\n */\nMdSelect.prototype.trigger;\n/**\n * Overlay pane containing the options.\n * @type {?}\n */\nMdSelect.prototype.overlayDir;\n/**\n * All of the defined select options.\n * @type {?}\n */\nMdSelect.prototype.options;\n/** @type {?} */\nMdSelect.prototype._floatPlaceholder;\n/**\n * Aria label of the select. If not specified, the placeholder will be used as label.\n * @type {?}\n */\nMdSelect.prototype.ariaLabel;\n/**\n * Input that can be used to specify the `aria-labelledby` attribute.\n * @type {?}\n */\nMdSelect.prototype.ariaLabelledby;\n/**\n * Event emitted when the select has been opened.\n * @type {?}\n */\nMdSelect.prototype.onOpen;\n/**\n * Event emitted when the select has been closed.\n * @type {?}\n */\nMdSelect.prototype.onClose;\n/**\n * Event emitted when the selected value has been changed by the user.\n * @type {?}\n */\nMdSelect.prototype.change;\n/** @type {?} */\nMdSelect.prototype._element;\n/** @type {?} */\nMdSelect.prototype._renderer;\n/** @type {?} */\nMdSelect.prototype._viewportRuler;\n/** @type {?} */\nMdSelect.prototype._changeDetectorRef;\n/** @type {?} */\nMdSelect.prototype._dir;\n/** @type {?} */\nMdSelect.prototype._control;\n}\n\n/**\n * Clamps a value n between min and max values.\n * @param {?} min\n * @param {?} n\n * @param {?} max\n * @return {?}\n */\nfunction clampValue(min: number, n: number, max: number): number {\n  return Math.min(Math.max(min, n), max);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Returns an exception to be thrown when attempting to change a s\n * elect's `multiple` option after initialization.\n * \\@docs-private\n * @return {?}\n */\nexport function getMdSelectDynamicMultipleError(): Error {\n  return new Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nexport function getMdSelectNonArrayValueError(): Error {\n  return new Error('Cannot assign truthy non-array value to select in `multiple` mode.');\n}\n","import {\n  animate,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n/**\n * This animation shrinks the placeholder text to 75% of its normal size and translates\n * it to either the top left corner (ltr) or top right corner (rtl) of the trigger,\n * depending on the text direction of the application.\n */\nexport const transformPlaceholder: AnimationTriggerMetadata = trigger('transformPlaceholder', [\n  state('floating-ltr', style({\n    top: '-22px',\n    left: '-2px',\n    transform: `scale(0.75)`\n  })),\n  state('floating-rtl', style({\n    top: '-22px',\n    left: '2px',\n    transform: `scale(0.75)`\n  })),\n  transition('* => *', animate(`400ms cubic-bezier(0.25, 0.8, 0.25, 1)`))\n]);\n/**\n * This animation transforms the select's overlay panel on and off the page.\n * \n * When the panel is attached to the DOM, it expands its width 32px, scales it up to\n * 100% on the Y axis, fades in its border, and translates slightly up and to the\n * side to ensure the option text correctly overlaps the trigger text.\n * \n * When the panel is removed from the DOM, it simply fades out linearly.\n */\nexport const transformPanel: AnimationTriggerMetadata = trigger('transformPanel', [\n  state('showing', style({\n    opacity: 1,\n    minWidth: 'calc(100% + 32px)',\n    transform: `scaleY(1)`\n  })),\n  transition('void => *', [\n    style({\n      opacity: 0,\n      minWidth: '100%',\n      transform: `scaleY(0)`\n    }),\n    animate(`150ms cubic-bezier(0.25, 0.8, 0.25, 1)`)\n  ]),\n  transition('* => void', [\n    animate('250ms 100ms linear', style({opacity: 0}))\n  ])\n]);\n/**\n * This animation fades in the background color and text content of the\n * select's options. It is time delayed to occur 100ms after the overlay\n * panel has transformed in.\n */\nexport const fadeInContent: AnimationTriggerMetadata  =  trigger('fadeInContent', [\n  state('showing', style({opacity: 1})),\n  transition('void => showing', [\n    style({opacity: 0}),\n    animate(`150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)`)\n  ])\n]);\n","\nimport {QueryList} from '@angular/core';\nimport {ListKeyManager, CanDisable} from './list-key-manager';\n\n/**\n * This is the interface for focusable items (used by the FocusKeyManager).\n * Each item must know how to focus itself and whether or not it is currently disabled.\n */\nexport interface Focusable extends CanDisable {\n  focus(): void;\n}\nexport class FocusKeyManager extends ListKeyManager<Focusable> {\n/**\n * @param {?} items\n */\nconstructor(items: QueryList<Focusable>) {\n    super(items);\n  }\n/**\n * This method sets the active item to the item at the specified index.\n * It also adds focuses the newly active item.\n * @param {?} index\n * @return {?}\n */\nsetActiveItem(index: number): void {\n    super.setActiveItem(index);\n\n    if (this.activeItem) {\n      this.activeItem.focus();\n    }\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {MdOptionModule, OverlayModule, MdCommonModule} from '../core';\nimport {CommonModule} from '@angular/common';\nimport {MdAutocomplete} from './autocomplete';\nimport {MdAutocompleteTrigger} from './autocomplete-trigger';\nexport class MdAutocompleteModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdOptionModule, OverlayModule, MdCommonModule, CommonModule],\n  exports: [MdAutocomplete, MdOptionModule, MdAutocompleteTrigger, MdCommonModule],\n  declarations: [MdAutocomplete, MdAutocompleteTrigger],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdAutocompleteModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdAutocompleteModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdAutocompleteModule.ctorParameters;\n}\n\n\n\nexport {AutocompletePositionY,MdAutocomplete} from './autocomplete';\nexport {AUTOCOMPLETE_OPTION_HEIGHT,AUTOCOMPLETE_PANEL_HEIGHT,MD_AUTOCOMPLETE_VALUE_ACCESSOR,MdAutocompleteTrigger} from './autocomplete-trigger';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive,\n  ElementRef,\n  forwardRef,\n  Host,\n  Input,\n  NgZone,\n  Optional,\n  OnDestroy,\n  ViewContainerRef,\n  Inject,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DOCUMENT} from '@angular/platform-browser';\nimport {Overlay, OverlayRef, OverlayState, TemplatePortal, RepositionScrollStrategy} from '../core';\nimport {MdAutocomplete} from './autocomplete';\nimport {PositionStrategy} from '../core/overlay/position/position-strategy';\nimport {ConnectedPositionStrategy} from '../core/overlay/position/connected-position-strategy';\nimport {Observable} from 'rxjs/Observable';\nimport {MdOptionSelectionChange, MdOption} from '../core/option/option';\nimport {ENTER, UP_ARROW, DOWN_ARROW} from '../core/keyboard/keycodes';\nimport {Dir} from '../core/rtl/dir';\n// import {MdInputContainer} from '../input/input-container';\n\nimport {ScrollDispatcher} from '../core/overlay/scroll/scroll-dispatcher';\nimport {Subscription} from 'rxjs/Subscription';\nimport'rxjs/add/observable/merge';\nimport'rxjs/add/observable/fromEvent';\nimport'rxjs/add/operator/filter';\nimport'rxjs/add/operator/switchMap';\n/**\n * The height of each autocomplete option.\n */\nexport const AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n */\nexport const AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * \\@docs-private\n */\nexport const MD_AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MdAutocompleteTrigger),\n  multi: true\n};\nexport class MdAutocompleteTrigger implements ControlValueAccessor, OnDestroy {\nprivate _overlayRef: OverlayRef;\nprivate _portal: TemplatePortal;\nprivate _panelOpen: boolean = false;\nprivate _inputContainer;\n/**\n * The subscription to positioning changes in the autocomplete panel.\n */\nprivate _panelPositionSubscription: Subscription;\n/**\n * Strategy that is used to position the panel.\n */\nprivate _positionStrategy: ConnectedPositionStrategy;\n/**\n * Whether or not the placeholder state is being overridden.\n */\nprivate _manuallyFloatingPlaceholder = false;\n/**\n * View -> model callback called when value changes\n */\n_onChange = (value: any) => {};\n/**\n * View -> model callback called when autocomplete has been touched\n */\n_onTouched = () => {};\n\n  /* The autocomplete panel to be attached to this trigger. */\n   autocomplete: MdAutocomplete;\n/**\n * Property with mat- prefix for no-conflict mode.\n * @return {?}\n */\nget _matAutocomplete(): MdAutocomplete {\n    return this.autocomplete;\n  }\n/**\n * @param {?} autocomplete\n * @return {?}\n */\nset _matAutocomplete(autocomplete: MdAutocomplete) {\n    this.autocomplete = autocomplete;\n  }\n/**\n * @param {?} _element\n * @param {?} _overlay\n * @param {?} _viewContainerRef\n * @param {?} _changeDetectorRef\n * @param {?} _scrollDispatcher\n * @param {?} _dir\n * @param {?} _zone\n * @param {?} _document\n */\nconstructor(private _element: ElementRef,\nprivate _overlay: Overlay,\nprivate _viewContainerRef: ViewContainerRef,\nprivate _changeDetectorRef: ChangeDetectorRef,\nprivate _scrollDispatcher: ScrollDispatcher,\nprivate _dir: Dir,\nprivate _zone: NgZone,\nprivate _document: any) {}\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._panelPositionSubscription) {\n      this._panelPositionSubscription.unsubscribe();\n    }\n\n    this._destroyPanel();\n  }\n/**\n * @return {?}\n */\nget panelOpen(): boolean {\n    return this._panelOpen && this.autocomplete.showPanel;\n  }\n/**\n * Opens the autocomplete suggestion panel.\n * @return {?}\n */\nopenPanel(): void {\n    if (!this._overlayRef) {\n      this._createOverlay();\n    } else {\n      /** Update the panel width, in case the host width has changed */\n      this._overlayRef.getState().width = this._getHostWidth();\n      this._overlayRef.updateSize();\n    }\n\n    if (!this._overlayRef.hasAttached()) {\n      this._overlayRef.attach(this._portal);\n      this._subscribeToClosingActions();\n    }\n\n    this.autocomplete._setVisibility();\n    this._floatPlaceholder();\n    this._panelOpen = true;\n  }\n/**\n * Closes the autocomplete suggestion panel.\n * @return {?}\n */\nclosePanel(): void {\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n    }\n\n    this._panelOpen = false;\n    this._resetPlaceholder();\n\n    // We need to trigger change detection manually, because\n    // `fromEvent` doesn't seem to do it at the proper time.\n    // This ensures that the placeholder is reset when the\n    // user clicks outside.\n    this._changeDetectorRef.detectChanges();\n  }\n/**\n * A stream of actions that should close the autocomplete panel, including\n * when an option is selected, on blur, and when TAB is pressed.\n * @return {?}\n */\nget panelClosingActions(): Observable<MdOptionSelectionChange> {\n    return Observable.merge(\n      this.optionSelections,\n      this.autocomplete._keyManager.tabOut,\n      this._outsideClickStream\n    );\n  }\n/**\n * Stream of autocomplete option selections.\n * @return {?}\n */\nget optionSelections(): Observable<MdOptionSelectionChange> {\n    return Observable.merge(...this.autocomplete.options.map(option => option.onSelectionChange));\n  }\n/**\n * The currently active option, coerced to MdOption type.\n * @return {?}\n */\nget activeOption(): MdOption {\n    if (this.autocomplete._keyManager) {\n      return /** @type {?} */(( this.autocomplete._keyManager.activeItem as MdOption));\n    }\n  }\n/**\n * Stream of clicks outside of the autocomplete panel.\n * @return {?}\n */\nprivate get _outsideClickStream(): Observable<any> {\n    if (this._document) {\n      return Observable.fromEvent(this._document, 'click').filter((event: MouseEvent) => {\n        const /** @type {?} */ clickTarget = /** @type {?} */(( event.target as HTMLElement));\n        const /** @type {?} */ inputContainer = this._inputContainer ?\n            this._inputContainer._elementRef.nativeElement : null;\n\n        return this._panelOpen &&\n               clickTarget !== this._element.nativeElement &&\n               (!inputContainer || !inputContainer.contains(clickTarget)) &&\n               !this._overlayRef.overlayElement.contains(clickTarget);\n      });\n    }\n  }\n/**\n * Sets the autocomplete's value. Part of the ControlValueAccessor interface\n * required to integrate with Angular's core forms API.\n * \n * @param {?} value New value to be written to the model.\n * @return {?}\n */\nwriteValue(value: any): void {\n    Promise.resolve(null).then(() => this._setTriggerValue(value));\n  }\n/**\n * Saves a callback function to be invoked when the autocomplete's value\n * changes from user input. Part of the ControlValueAccessor interface\n * required to integrate with Angular's core forms API.\n * \n * @param {?} fn Callback to be triggered when the value changes.\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => {}): void {\n    this._onChange = fn;\n  }\n/**\n * Saves a callback function to be invoked when the autocomplete is blurred\n * by the user. Part of the ControlValueAccessor interface required\n * to integrate with Angular's core forms API.\n * \n * @param {?} fn Callback to be triggered when the component has been touched.\n * @return {?}\n */\nregisterOnTouched(fn: () => {}) {\n    this._onTouched = fn;\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent): void {\n    if (this.activeOption && event.keyCode === ENTER) {\n      this.activeOption._selectViaInteraction();\n      event.preventDefault();\n    } else {\n      const /** @type {?} */ prevActiveItem = this.autocomplete._keyManager.activeItem;\n      const /** @type {?} */ isArrowKey = event.keyCode === UP_ARROW || event.keyCode === DOWN_ARROW;\n\n      this.autocomplete._keyManager.onKeydown(event);\n\n      if (isArrowKey) {\n        this.openPanel();\n      }\n\n      Promise.resolve().then(() => {\n        if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n          this._scrollToOption();\n        }\n      });\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_handleInput(event: KeyboardEvent): void {\n    // We need to ensure that the input is focused, because IE will fire the `input`\n    // event on focus/blur/load if the input has a placeholder. See:\n    // https://connect.microsoft.com/IE/feedback/details/885747/\n    if (document.activeElement === event.target) {\n      this._onChange(( /** @type {?} */((event.target as HTMLInputElement))).value);\n      this.openPanel();\n    }\n  }\n/**\n * In \"auto\" mode, the placeholder will animate down as soon as focus is lost.\n * This causes the value to jump when selecting an option with the mouse.\n * This method manually floats the placeholder until the panel can be closed.\n * @return {?}\n */\nprivate _floatPlaceholder(): void {\n    if (this._inputContainer && this._inputContainer.floatPlaceholder === 'auto') {\n      this._inputContainer.floatPlaceholder = 'always';\n      this._manuallyFloatingPlaceholder = true;\n    }\n  }\n/**\n * If the placeholder has been manually elevated, return it to its normal state.\n * @return {?}\n */\nprivate _resetPlaceholder(): void  {\n    if (this._manuallyFloatingPlaceholder && this._inputContainer) {\n      this._inputContainer.floatPlaceholder = 'auto';\n      this._manuallyFloatingPlaceholder = false;\n    }\n  }\n/**\n * Given that we are not actually focusing active options, we must manually adjust scroll\n * to reveal options below the fold. First, we find the offset of the option from the top\n * of the panel. The new scrollTop will be that offset - the panel height + the option\n * height, so the active option will be just visible at the bottom of the panel.\n * @return {?}\n */\nprivate _scrollToOption(): void {\n    const /** @type {?} */ optionOffset =\n        this.autocomplete._keyManager.activeItemIndex * AUTOCOMPLETE_OPTION_HEIGHT;\n    const /** @type {?} */ newScrollTop =\n        Math.max(0, optionOffset - AUTOCOMPLETE_PANEL_HEIGHT + AUTOCOMPLETE_OPTION_HEIGHT);\n    this.autocomplete._setScrollTop(newScrollTop);\n  }\n/**\n * This method listens to a stream of panel closing actions and resets the\n * stream every time the option list changes.\n * @return {?}\n */\nprivate _subscribeToClosingActions(): void {\n    // When the zone is stable initially, and when the option list changes...\n    Observable.merge(this._zone.onStable.first(), this.autocomplete.options.changes)\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        .switchMap(() => {\n          this._resetPanel();\n          return this.panelClosingActions;\n        })\n        // when the first closing event occurs...\n        .first()\n        // set the value, close the panel, and complete.\n        .subscribe(event => this._setValueAndClose(event));\n  }\n/**\n * Destroys the autocomplete suggestion panel.\n * @return {?}\n */\nprivate _destroyPanel(): void {\n    if (this._overlayRef) {\n      this.closePanel();\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _setTriggerValue(value: any): void {\n    const /** @type {?} */ toDisplay = this.autocomplete.displayWith ? this.autocomplete.displayWith(value) : value;\n    this._element.nativeElement.value = toDisplay || '';\n  }\n/**\n * This method closes the panel, and if a value is specified, also sets the associated\n * control to that value. It will also mark the control as dirty if this interaction\n * stemmed from the user.\n * @param {?} event\n * @return {?}\n */\nprivate _setValueAndClose(event: MdOptionSelectionChange | null): void {\n    if (event && event.source) {\n      this._clearPreviousSelectedOption(event.source);\n      this._setTriggerValue(event.source.value);\n      this._onChange(event.source.value);\n      this._element.nativeElement.focus();\n    }\n\n    this.closePanel();\n  }\n/**\n * Clear any previous selected option and emit a selection change event for this option\n * @param {?} skip\n * @return {?}\n */\nprivate _clearPreviousSelectedOption(skip: MdOption) {\n    this.autocomplete.options.forEach((option) => {\n      if (option != skip && option.selected) {\n        option.deselect();\n      }\n    });\n  }\n/**\n * @return {?}\n */\nprivate _createOverlay(): void {\n    this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n    this._overlayRef = this._overlay.create(this._getOverlayConfig());\n  }\n/**\n * @return {?}\n */\nprivate _getOverlayConfig(): OverlayState {\n    const /** @type {?} */ overlayState = new OverlayState();\n    overlayState.positionStrategy = this._getOverlayPosition();\n    overlayState.width = this._getHostWidth();\n    overlayState.direction = this._dir ? this._dir.value : 'ltr';\n    overlayState.scrollStrategy = new RepositionScrollStrategy(this._scrollDispatcher);\n    return overlayState;\n  }\n/**\n * @return {?}\n */\nprivate _getOverlayPosition(): PositionStrategy {\n    this._positionStrategy =  this._overlay.position().connectedTo(\n        this._element,\n        {originX: 'start', originY: 'bottom'}, {overlayX: 'start', overlayY: 'top'})\n        .withFallbackPosition(\n            {originX: 'start', originY: 'top'}, {overlayX: 'start', overlayY: 'bottom'}\n        );\n    this._subscribeToPositionChanges(this._positionStrategy);\n    return this._positionStrategy;\n  }\n/**\n * This method subscribes to position changes in the autocomplete panel, so the panel's\n * y-offset can be adjusted to match the new position.\n * @param {?} strategy\n * @return {?}\n */\nprivate _subscribeToPositionChanges(strategy: ConnectedPositionStrategy) {\n    this._panelPositionSubscription = strategy.onPositionChange.subscribe(change => {\n      this.autocomplete.positionY = change.connectionPair.originY === 'top' ? 'above' : 'below';\n    });\n  }\n/**\n * Returns the width of the input element, so the panel width can match it.\n * @return {?}\n */\nprivate _getHostWidth(): number {\n    return this._element.nativeElement.getBoundingClientRect().width;\n  }\n/**\n * Reset active item to null so arrow events will activate the correct options.\n * @return {?}\n */\nprivate _resetActiveItem(): void {\n    this.autocomplete._keyManager.setActiveItem(null);\n  }\n/**\n * Resets the active item and re-calculates alignment of the panel in case its size\n * has changed due to fewer or greater number of options.\n * @return {?}\n */\nprivate _resetPanel() {\n    this._resetActiveItem();\n    this._positionStrategy.recalculateLastPosition();\n    this.autocomplete._setVisibility();\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'input[mdAutocomplete], input[matAutocomplete]',\n  host: {\n    'role': 'combobox',\n    'autocomplete': 'off',\n    'aria-autocomplete': 'list',\n    'aria-multiline': 'false',\n    '[attr.aria-activedescendant]': 'activeOption?.id',\n    '[attr.aria-expanded]': 'panelOpen.toString()',\n    '[attr.aria-owns]': 'autocomplete?.id',\n    '(focus)': 'openPanel()',\n    '(input)': '_handleInput($event)',\n    '(blur)': '_onTouched()',\n    '(keydown)': '_handleKeydown($event)',\n  },\n  providers: [MD_AUTOCOMPLETE_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Overlay, },\n{type: ViewContainerRef, },\n{type: ChangeDetectorRef, },\n{type: ScrollDispatcher, },\n{type: Dir, decorators: [{ type: Optional }, ]},\n{type: NgZone, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'autocomplete': [{ type: Input, args: ['mdAutocomplete', ] },],\n'_matAutocomplete': [{ type: Input, args: ['matAutocomplete', ] },],\n};\n}\n\nfunction MdAutocompleteTrigger_tsickle_Closure_declarations() {\n/** @type {?} */\nMdAutocompleteTrigger.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdAutocompleteTrigger.ctorParameters;\n/** @type {?} */\nMdAutocompleteTrigger.propDecorators;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._overlayRef;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._portal;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._panelOpen;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._inputContainer;\n/**\n * The subscription to positioning changes in the autocomplete panel.\n * @type {?}\n */\nMdAutocompleteTrigger.prototype._panelPositionSubscription;\n/**\n * Strategy that is used to position the panel.\n * @type {?}\n */\nMdAutocompleteTrigger.prototype._positionStrategy;\n/**\n * Whether or not the placeholder state is being overridden.\n * @type {?}\n */\nMdAutocompleteTrigger.prototype._manuallyFloatingPlaceholder;\n/**\n * View -> model callback called when value changes\n * @type {?}\n */\nMdAutocompleteTrigger.prototype._onChange;\n/**\n * View -> model callback called when autocomplete has been touched\n * @type {?}\n */\nMdAutocompleteTrigger.prototype._onTouched;\n/** @type {?} */\nMdAutocompleteTrigger.prototype.autocomplete;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._element;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._overlay;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._viewContainerRef;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._changeDetectorRef;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._scrollDispatcher;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._dir;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._zone;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._document;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Input,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {MdOption} from '../core';\nimport {ActiveDescendantKeyManager} from '../core/a11y/activedescendant-key-manager';\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueAutocompleteIdCounter = 0;\n\nexport type AutocompletePositionY = 'above' | 'below';\nexport class MdAutocomplete implements AfterContentInit {\n/**\n * Manages active item in option list based on key events.\n */\n_keyManager: ActiveDescendantKeyManager;\n/**\n * Whether the autocomplete panel displays above or below its trigger.\n */\npositionY: AutocompletePositionY = 'below';\n/**\n * Whether the autocomplete panel should be visible, depending on option length.\n */\nshowPanel = false;\n\n   template: TemplateRef<any>;\n   panel: ElementRef;\n   options: QueryList<MdOption>;\n/**\n * Function that maps an option's control value to its display value in the trigger.\n */\ndisplayWith: (value: any) => string;\n/**\n * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n */\nid: string = `md-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n/**\n * @param {?} _changeDetectorRef\n */\nconstructor(private _changeDetectorRef: ChangeDetectorRef) { }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n  }\n/**\n * Sets the panel scrollTop. This allows us to manually scroll to display\n * options below the fold, as they are not actually being focused when active.\n * @param {?} scrollTop\n * @return {?}\n */\n_setScrollTop(scrollTop: number): void {\n    if (this.panel) {\n      this.panel.nativeElement.scrollTop = scrollTop;\n    }\n  }\n/**\n * Panel should hide itself when the option list is empty.\n * @return {?}\n */\n_setVisibility() {\n    Promise.resolve().then(() => {\n      this.showPanel = !!this.options.length;\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n/**\n * Sets a class on the panel based on its position (used to set y-offset).\n * @return {?}\n */\n_getClassList() {\n    return {\n      'mat-autocomplete-panel-below': this.positionY === 'below',\n      'mat-autocomplete-panel-above': this.positionY === 'above',\n      'mat-autocomplete-visible': this.showPanel,\n      'mat-autocomplete-hidden': !this.showPanel\n    };\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-autocomplete, mat-autocomplete',\n  templateUrl: 'autocomplete.html',\n  styleUrls: ['autocomplete.css'],\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'mdAutocomplete',\n  host: {\n    '[class.mat-autocomplete]': 'true'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'template': [{ type: ViewChild, args: [TemplateRef, ] },],\n'panel': [{ type: ViewChild, args: ['panel', ] },],\n'options': [{ type: ContentChildren, args: [MdOption, ] },],\n'displayWith': [{ type: Input },],\n};\n}\n\nfunction MdAutocomplete_tsickle_Closure_declarations() {\n/** @type {?} */\nMdAutocomplete.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdAutocomplete.ctorParameters;\n/** @type {?} */\nMdAutocomplete.propDecorators;\n/**\n * Manages active item in option list based on key events.\n * @type {?}\n */\nMdAutocomplete.prototype._keyManager;\n/**\n * Whether the autocomplete panel displays above or below its trigger.\n * @type {?}\n */\nMdAutocomplete.prototype.positionY;\n/**\n * Whether the autocomplete panel should be visible, depending on option length.\n * @type {?}\n */\nMdAutocomplete.prototype.showPanel;\n/** @type {?} */\nMdAutocomplete.prototype.template;\n/** @type {?} */\nMdAutocomplete.prototype.panel;\n/** @type {?} */\nMdAutocomplete.prototype.options;\n/**\n * Function that maps an option's control value to its display value in the trigger.\n * @type {?}\n */\nMdAutocomplete.prototype.displayWith;\n/**\n * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n * @type {?}\n */\nMdAutocomplete.prototype.id;\n/** @type {?} */\nMdAutocomplete.prototype._changeDetectorRef;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {QueryList} from '@angular/core';\nimport {ListKeyManager, CanDisable} from './list-key-manager';\n\n/**\n * This is the interface for highlightable items (used by the ActiveDescendantKeyManager).\n * Each item must know how to style itself as active or inactive and whether or not it is\n * currently disabled.\n */\nexport interface Highlightable extends CanDisable {\n  setActiveStyles(): void;\n  setInactiveStyles(): void;\n}\nexport class ActiveDescendantKeyManager extends ListKeyManager<Highlightable> {\n/**\n * This method sets the active item to the item at the specified index.\n * It also adds active styles to the newly active item and removes active\n * styles from the previously active item.\n * @param {?} index\n * @return {?}\n */\nsetActiveItem(index: number): void {\n    Promise.resolve().then(() => {\n      if (this.activeItem) {\n        this.activeItem.setInactiveStyles();\n      }\n      super.setActiveItem(index);\n      if (this.activeItem) {\n        this.activeItem.setActiveStyles();\n      }\n    });\n  }\n\n}\n","import {QueryList} from '@angular/core';\nimport {UP_ARROW, DOWN_ARROW, TAB} from '../core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n\n/**\n * This interface is for items that can be disabled. The type passed into\n * ListKeyManager must extend this interface.\n */\nexport interface CanDisable {\n  disabled?: boolean;\n}\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nexport class ListKeyManager<T extends CanDisable> {\nprivate _activeItemIndex: number = null;\nprivate _activeItem: T;\nprivate _tabOut = new Subject<void>();\nprivate _wrap: boolean = false;\n/**\n * @param {?} _items\n */\nconstructor(private _items: QueryList<T>) {\n  }\n/**\n * Turns on wrapping mode, which ensures that the active item will wrap to\n * the other end of list when there are no more items in the given direction.\n * \n * @return {?} The ListKeyManager that the method was called on.\n */\nwithWrap(): this {\n    this._wrap = true;\n    return this;\n  }\n/**\n * Sets the active item to the item at the index specified.\n * \n * @param {?} index The index of the item to be set as active.\n * @return {?}\n */\nsetActiveItem(index: number): void {\n    this._activeItemIndex = index;\n    this._activeItem = this._items.toArray()[index];\n  }\n/**\n * Sets the active item depending on the key event passed in.\n * @param {?} event Keyboard event to be used for determining which element should be active.\n * @return {?}\n */\nonKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case DOWN_ARROW:\n        this.setNextItemActive();\n        break;\n      case UP_ARROW:\n        this.setPreviousItemActive();\n        break;\n      case TAB:\n        // Note that we shouldn't prevent the default action on tab.\n        this._tabOut.next(null);\n        return;\n      default:\n        return;\n    }\n\n    event.preventDefault();\n  }\n/**\n * Returns the index of the currently active item.\n * @return {?}\n */\nget activeItemIndex(): number {\n    return this._activeItemIndex;\n  }\n/**\n * Returns the currently active item.\n * @return {?}\n */\nget activeItem(): T {\n    return this._activeItem;\n  }\n/**\n * Sets the active item to the first enabled item in the list.\n * @return {?}\n */\nsetFirstItemActive(): void {\n    this._setActiveItemByIndex(0, 1);\n  }\n/**\n * Sets the active item to the last enabled item in the list.\n * @return {?}\n */\nsetLastItemActive(): void {\n    this._setActiveItemByIndex(this._items.length - 1, -1);\n  }\n/**\n * Sets the active item to the next enabled item in the list.\n * @return {?}\n */\nsetNextItemActive(): void {\n    this._activeItemIndex === null ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n  }\n/**\n * Sets the active item to a previous enabled item in the list.\n * @return {?}\n */\nsetPreviousItemActive(): void {\n    this._activeItemIndex === null && this._wrap ? this.setLastItemActive()\n                                                 : this._setActiveItemByDelta(-1);\n  }\n/**\n * Allows setting of the activeItemIndex without any other effects.\n * @param {?} index The new activeItemIndex.\n * @return {?}\n */\nupdateActiveItemIndex(index: number) {\n    this._activeItemIndex = index;\n  }\n/**\n * Observable that emits any time the TAB key is pressed, so components can react\n * when focus is shifted off of the list.\n * @return {?}\n */\nget tabOut(): Observable<void> {\n    return this._tabOut.asObservable();\n  }\n/**\n * This method sets the active item, given a list of items and the delta between the\n * currently active item and the new active item. It will calculate differently\n * depending on whether wrap mode is turned on.\n * @param {?} delta\n * @param {?=} items\n * @return {?}\n */\nprivate _setActiveItemByDelta(delta: number, items = this._items.toArray()): void {\n    this._wrap ? this._setActiveInWrapMode(delta, items)\n               : this._setActiveInDefaultMode(delta, items);\n  }\n/**\n * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n * down the list until it finds an item that is not disabled, and it will wrap if it\n * encounters either end of the list.\n * @param {?} delta\n * @param {?} items\n * @return {?}\n */\nprivate _setActiveInWrapMode(delta: number, items: T[]): void {\n    // when active item would leave menu, wrap to beginning or end\n    this._activeItemIndex =\n      (this._activeItemIndex + delta + items.length) % items.length;\n\n    // skip all disabled menu items recursively until an enabled one is reached\n    if (items[this._activeItemIndex].disabled) {\n      this._setActiveInWrapMode(delta, items);\n    } else {\n      this.setActiveItem(this._activeItemIndex);\n    }\n  }\n/**\n * Sets the active item properly given the default mode. In other words, it will\n * continue to move down the list until it finds an item that is not disabled. If\n * it encounters either end of the list, it will stop and not wrap.\n * @param {?} delta\n * @param {?} items\n * @return {?}\n */\nprivate _setActiveInDefaultMode(delta: number, items: T[]): void {\n    this._setActiveItemByIndex(this._activeItemIndex + delta, delta, items);\n  }\n/**\n * Sets the active item to the first enabled item starting at the index specified. If the\n * item is disabled, it will move in the fallbackDelta direction until it either\n * finds an enabled item or encounters the end of the list.\n * @param {?} index\n * @param {?} fallbackDelta\n * @param {?=} items\n * @return {?}\n */\nprivate _setActiveItemByIndex(index: number, fallbackDelta: number,\n                                  items = this._items.toArray()): void {\n    if (!items[index]) { return; }\n    while (items[index].disabled) {\n      index += fallbackDelta;\n      if (!items[index]) { return; }\n    }\n    this.setActiveItem(index);\n  }\n\n}\n\nfunction ListKeyManager_tsickle_Closure_declarations() {\n/** @type {?} */\nListKeyManager.prototype._activeItemIndex;\n/** @type {?} */\nListKeyManager.prototype._activeItem;\n/** @type {?} */\nListKeyManager.prototype._tabOut;\n/** @type {?} */\nListKeyManager.prototype._wrap;\n/** @type {?} */\nListKeyManager.prototype._items;\n}\n\n","import {NgModule} from '@angular/core';\nimport {MdLineModule} from './line/line';\nimport {RtlModule} from './rtl/dir';\nimport {ObserveContentModule} from './observe-content/observe-content';\nimport {MdOptionModule} from './option/option';\nimport {PortalModule} from './portal/portal-directives';\nimport {OverlayModule} from './overlay/overlay-directives';\nimport {A11yModule} from './a11y/index';\nimport {MdSelectionModule} from './selection/index';\nimport {MdRippleModule} from './ripple/index';\n\n\n// RTL\nexport {Dir, LayoutDirection, RtlModule} from './rtl/dir';\n\n// Mutation Observer\nexport {ObserveContentModule, ObserveContent} from './observe-content/observe-content';\n\nexport {MdOptionModule, MdOption, MdOptionSelectionChange} from './option/option';\n\n// Portals\nexport {\n  Portal,\n  PortalHost,\n  BasePortalHost,\n  ComponentPortal,\n  TemplatePortal\n} from './portal/portal';\nexport {\n  PortalHostDirective,\n  TemplatePortalDirective,\n  PortalModule,\n} from './portal/portal-directives';\nexport {DomPortalHost} from './portal/dom-portal-host';\n\n// Platform\nexport {PlatformModule,Platform,getSupportedInputTypes} from './platform/index';\n\n// Overlay\nexport {Overlay,OVERLAY_PROVIDERS,OverlayContainer,FullscreenOverlayContainer,OverlayRef,OverlayState,ConnectedOverlayDirective,OverlayOrigin,OverlayModule,ViewportRuler,PositionStrategy,GlobalPositionStrategy,ConnectedPositionStrategy,HorizontalConnectionPos,VerticalConnectionPos,OriginConnectionPosition,OverlayConnectionPosition,ConnectionPositionPair,ScrollableViewProperties,ConnectedOverlayPositionChange,Scrollable,ScrollDispatcher,ScrollStrategy,RepositionScrollStrategy,CloseScrollStrategy,NoopScrollStrategy,BlockScrollStrategy,ScrollDispatchModule} from './overlay/index';\n\n// Gestures\nexport {GestureConfig} from './gestures/gesture-config';\n// Explicitly specify the interfaces which should be re-exported, because if everything\n// is re-exported, module bundlers may run into issues with treeshaking.\nexport {HammerInput, HammerManager} from './gestures/gesture-annotations';\n\n// Ripple\nexport {MdRipple,RippleGlobalOptions,MD_RIPPLE_GLOBAL_OPTIONS,RippleRef,RippleState,RippleConfig,RIPPLE_FADE_IN_DURATION,RIPPLE_FADE_OUT_DURATION,MdRippleModule} from './ripple/index';\n\n// a11y\nexport {\n  AriaLivePoliteness,\n  LiveAnnouncer,\n  LIVE_ANNOUNCER_ELEMENT_TOKEN,\n  LIVE_ANNOUNCER_PROVIDER,\n} from './a11y/live-announcer';\n\n// Selection\nexport {SelectionModel,SelectionChange} from './selection/selection';\n\nexport {FocusTrap,FocusTrapFactory,FocusTrapDeprecatedDirective,FocusTrapDirective} from './a11y/focus-trap';\nexport {InteractivityChecker} from './a11y/interactivity-checker';\nexport {isFakeMousedownFromScreenReader} from './a11y/fake-mousedown';\n\nexport {A11yModule} from './a11y/index';\n\nexport {\n  UniqueSelectionDispatcher,\n  UniqueSelectionDispatcherListener,\n  UNIQUE_SELECTION_DISPATCHER_PROVIDER,\n} from './coordination/unique-selection-dispatcher';\n\nexport {MdLineModule, MdLine, MdLineSetter} from './line/line';\n\n// Style\nexport {StyleModule,TOUCH_BUFFER_MS,FocusOrigin,FocusOriginMonitor,CdkMonitorFocus,FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY,FOCUS_ORIGIN_MONITOR_PROVIDER,applyCssTransform} from './style/index';\n\n// Misc\nexport {ComponentType} from './overlay/generic-component-type';\n\n// Keybindings\nexport {UP_ARROW,DOWN_ARROW,RIGHT_ARROW,LEFT_ARROW,PAGE_UP,PAGE_DOWN,HOME,END,ENTER,SPACE,TAB,ESCAPE,BACKSPACE,DELETE} from './keyboard/keycodes';\n\nexport {MATERIAL_COMPATIBILITY_MODE,MATERIAL_SANITY_CHECKS,getMdCompatibilityInvalidPrefixError,MAT_ELEMENTS_SELECTOR,MD_ELEMENTS_SELECTOR,MatPrefixRejector,MdPrefixRejector} from './compatibility/compatibility';\n\n// Animation\nexport {AnimationCurves,AnimationDurations} from './animation/animation';\n\n// Selection\nexport {MdSelectionModule,MdPseudoCheckboxState,MdPseudoCheckbox} from './selection/index';\n\n// Coercion\nexport {coerceBooleanProperty} from './coercion/boolean-property';\nexport {coerceNumberProperty} from './coercion/number-property';\n\n// Compatibility\nexport {CompatibilityModule, NoConflictStyleCompatibilityMode} from './compatibility/compatibility';\n\n// Common material module\nexport {MdCommonModule} from './common-behaviors/common-module';\nexport class MdCoreModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    MdLineModule,\n    RtlModule,\n    MdRippleModule,\n    ObserveContentModule,\n    PortalModule,\n    OverlayModule,\n    A11yModule,\n    MdOptionModule,\n    MdSelectionModule,\n  ],\n  exports: [\n    MdLineModule,\n    RtlModule,\n    MdRippleModule,\n    ObserveContentModule,\n    PortalModule,\n    OverlayModule,\n    A11yModule,\n    MdOptionModule,\n    MdSelectionModule,\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCoreModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCoreModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCoreModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Coerces a data-bound value (typically a string) to a number.\n * @param {?} value\n * @param {?=} fallbackValue\n * @return {?}\n */\nexport function coerceNumberProperty(value: any, fallbackValue = 0) {\n  // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n  // and other non-number values as NaN, where Number just uses 0) but it considers the string\n  // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n  return isNaN(parseFloat( /** @type {?} */((value as any)))) || isNaN(Number(value)) ? fallbackValue : Number(value);\n}\n","\n/**\n * \\@docs-private\n */\nexport class AnimationCurves {\n  static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n  static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n  static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n  static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n\nfunction AnimationCurves_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationCurves.STANDARD_CURVE;\n/** @type {?} */\nAnimationCurves.DECELERATION_CURVE;\n/** @type {?} */\nAnimationCurves.ACCELERATION_CURVE;\n/** @type {?} */\nAnimationCurves.SHARP_CURVE;\n}\n\n/**\n * \\@docs-private\n */\nexport class AnimationDurations {\n  static COMPLEX = '375ms';\n  static ENTERING = '225ms';\n  static EXITING = '195ms';\n}\n\nfunction AnimationDurations_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationDurations.COMPLEX;\n/** @type {?} */\nAnimationDurations.ENTERING;\n/** @type {?} */\nAnimationDurations.EXITING;\n}\n\n","import {NgModule} from '@angular/core';\nimport {CdkMonitorFocus, FOCUS_ORIGIN_MONITOR_PROVIDER} from './focus-origin-monitor';\nimport {PlatformModule} from '../platform/index';\nexport class StyleModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [PlatformModule],\n  declarations: [CdkMonitorFocus],\n  exports: [CdkMonitorFocus],\n  providers: [FOCUS_ORIGIN_MONITOR_PROVIDER],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StyleModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStyleModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStyleModule.ctorParameters;\n}\n\n\n\nexport {TOUCH_BUFFER_MS,FocusOrigin,FocusOriginMonitor,CdkMonitorFocus,FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY,FOCUS_ORIGIN_MONITOR_PROVIDER} from './focus-origin-monitor';\nexport {applyCssTransform} from './apply-transform';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Applies a CSS transform to an element, including browser-prefixed properties.\n * @param {?} element\n * @param {?} transformValue\n * @return {?}\n */\nexport function applyCssTransform(element: HTMLElement, transformValue: string) {\n  // It's important to trim the result, because the browser will ignore the set operation\n  // if the string contains only whitespace.\n  let /** @type {?} */ value = transformValue.trim();\n\n  element.style.transform = value;\n  element.style.webkitTransform = value;\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Injectable,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  Renderer2,\n  SkipSelf,\n} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {Platform} from '../platform/platform';\n\nimport'rxjs/add/observable/of';\n\n\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\nexport const /** @type {?} */ TOUCH_BUFFER_MS = 650;\n\n\nexport type FocusOrigin = 'touch' | 'mouse' | 'keyboard' | 'program';\n\n\ntype MonitoredElementInfo = {\n  unlisten: Function,\n  checkChildren: boolean,\n  renderer: Renderer2,\n  subject: Subject<FocusOrigin>\n};\n/**\n * Monitors mouse and keyboard events to determine the cause of focus events.\n */\nexport class FocusOriginMonitor {\n/**\n * The focus origin that the next focus event is a result of.\n */\nprivate _origin: FocusOrigin = null;\n/**\n * The FocusOrigin of the last focus event tracked by the FocusOriginMonitor.\n */\nprivate _lastFocusOrigin: FocusOrigin;\n/**\n * Whether the window has just been focused.\n */\nprivate _windowFocused = false;\n/**\n * The target of the last touch event.\n */\nprivate _lastTouchTarget: EventTarget;\n/**\n * The timeout id of the touch timeout, used to cancel timeout later.\n */\nprivate _touchTimeout: number;\n/**\n * Weak map of elements being monitored to their info.\n */\nprivate _elementInfo = new WeakMap<Element, MonitoredElementInfo>();\n/**\n * @param {?} _ngZone\n * @param {?} _platform\n */\nconstructor(private _ngZone: NgZone,\nprivate _platform: Platform) {\n    this._ngZone.runOutsideAngular(() => this._registerDocumentEvents());\n  }\n/**\n * Monitors focus on an element and applies appropriate CSS classes.\n * @param {?} element The element to monitor\n * @param {?} renderer The renderer to use to apply CSS classes to the element.\n * @param {?} checkChildren Whether to count the element as focused when its children are focused.\n * @return {?} An observable that emits when the focus state of the element changes.\n *     When the element is blurred, null will be emitted.\n */\nmonitor(\n      element: HTMLElement,\n      renderer: Renderer2,\n      checkChildren: boolean): Observable<FocusOrigin> {\n    // Do nothing if we're not on the browser platform.\n    if (!this._platform.isBrowser) {\n      return Observable.of();\n    }\n    // Check if we're already monitoring this element.\n    if (this._elementInfo.has(element)) {\n      let /** @type {?} */ info = this._elementInfo.get(element);\n      info.checkChildren = checkChildren;\n      return info.subject.asObservable();\n    }\n\n    // Create monitored element info.\n    let /** @type {?} */ info: MonitoredElementInfo = {\n      unlisten: null,\n      checkChildren: checkChildren,\n      renderer: renderer,\n      subject: new Subject<FocusOrigin>()\n    };\n    this._elementInfo.set(element, info);\n\n    // Start listening. We need to listen in capture phase since focus events don't bubble.\n    let /** @type {?} */ focusListener = (event: FocusEvent) => this._onFocus(event, element);\n    let /** @type {?} */ blurListener = (event: FocusEvent) => this._onBlur(event, element);\n    this._ngZone.runOutsideAngular(() => {\n      element.addEventListener('focus', focusListener, true);\n      element.addEventListener('blur', blurListener, true);\n    });\n\n    // Create an unlisten function for later.\n    info.unlisten = () => {\n      element.removeEventListener('focus', focusListener, true);\n      element.removeEventListener('blur', blurListener, true);\n    };\n\n    return info.subject.asObservable();\n  }\n/**\n * Stops monitoring an element and removes all focus classes.\n * @param {?} element The element to stop monitoring.\n * @return {?}\n */\nstopMonitoring(element: HTMLElement): void {\n    let /** @type {?} */ elementInfo = this._elementInfo.get(element);\n\n    if (elementInfo) {\n      elementInfo.unlisten();\n      elementInfo.subject.complete();\n\n      this._setClasses(element, null);\n      this._elementInfo.delete(element);\n    }\n  }\n/**\n * Focuses the element via the specified focus origin.\n * @param {?} element The element to focus.\n * @param {?} renderer The renderer to use to invoke the focus method on the element.\n * @param {?} origin The focus origin.\n * @return {?}\n */\nfocusVia(element: HTMLElement, renderer: Renderer2, origin: FocusOrigin): void {\n    this._setOriginForCurrentEventQueue(origin);\n    element.focus();\n  }\n/**\n * Register necessary event listeners on the document and window.\n * @return {?}\n */\nprivate _registerDocumentEvents() {\n    // Do nothing if we're not on the browser platform.\n    if (!this._platform.isBrowser) {\n      return;\n    }\n\n    // Note: we listen to events in the capture phase so we can detect them even if the user stops\n    // propagation.\n\n    // On keydown record the origin and clear any touch event that may be in progress.\n    document.addEventListener('keydown', () => {\n      this._lastTouchTarget = null;\n      this._setOriginForCurrentEventQueue('keyboard');\n    }, true);\n\n    // On mousedown record the origin only if there is not touch target, since a mousedown can\n    // happen as a result of a touch event.\n    document.addEventListener('mousedown', () => {\n      if (!this._lastTouchTarget) {\n        this._setOriginForCurrentEventQueue('mouse');\n      }\n    }, true);\n\n    // When the touchstart event fires the focus event is not yet in the event queue. This means\n    // we can't rely on the trick used above (setting timeout of 0ms). Instead we wait 650ms to\n    // see if a focus happens.\n    document.addEventListener('touchstart', (event: Event) => {\n      if (this._touchTimeout != null) {\n        clearTimeout(this._touchTimeout);\n      }\n      this._lastTouchTarget = event.target;\n      this._touchTimeout = setTimeout(() => this._lastTouchTarget = null, TOUCH_BUFFER_MS);\n    }, true);\n\n    // Make a note of when the window regains focus, so we can restore the origin info for the\n    // focused element.\n    window.addEventListener('focus', () => {\n      this._windowFocused = true;\n      setTimeout(() => this._windowFocused = false, 0);\n    });\n  }\n/**\n * Sets the focus classes on the element based on the given focus origin.\n * @param {?} element The element to update the classes on.\n * @param {?} origin The focus origin.\n * @return {?}\n */\nprivate _setClasses(element: HTMLElement, origin: FocusOrigin): void {\n    let /** @type {?} */ renderer = this._elementInfo.get(element).renderer;\n    let /** @type {?} */ toggleClass = (className: string, shouldSet: boolean) => {\n      shouldSet ? renderer.addClass(element, className) : renderer.removeClass(element, className);\n    };\n\n    toggleClass('cdk-focused', !!origin);\n    toggleClass('cdk-touch-focused', origin === 'touch');\n    toggleClass('cdk-keyboard-focused', origin === 'keyboard');\n    toggleClass('cdk-mouse-focused', origin === 'mouse');\n    toggleClass('cdk-program-focused', origin === 'program');\n  }\n/**\n * Sets the origin and schedules an async function to clear it at the end of the event queue.\n * @param {?} origin The origin to set.\n * @return {?}\n */\nprivate _setOriginForCurrentEventQueue(origin: FocusOrigin): void {\n    this._origin = origin;\n    setTimeout(() => this._origin = null, 0);\n  }\n/**\n * Checks whether the given focus event was caused by a touchstart event.\n * @param {?} event The focus event to check.\n * @return {?} Whether the event was caused by a touch.\n */\nprivate _wasCausedByTouch(event: FocusEvent): boolean {\n    // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n    // Consider the following dom structure:\n    //\n    // <div #parent tabindex=\"0\" cdkFocusClasses>\n    //   <div #child (click)=\"#parent.focus()\"></div>\n    // </div>\n    //\n    // If the user touches the #child element and the #parent is programmatically focused as a\n    // result, this code will still consider it to have been caused by the touch event and will\n    // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n    // relatively small edge-case that can be worked around by using\n    // focusVia(parentEl, renderer,  'program') to focus the parent element.\n    //\n    // If we decide that we absolutely must handle this case correctly, we can do so by listening\n    // for the first focus event after the touchstart, and then the first blur event after that\n    // focus event. When that blur event fires we know that whatever follows is not a result of the\n    // touchstart.\n    let /** @type {?} */ focusTarget = event.target;\n    return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n        (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n  }\n/**\n * Handles focus events on a registered element.\n * @param {?} event The focus event.\n * @param {?} element The monitored element.\n * @return {?}\n */\nprivate _onFocus(event: FocusEvent, element: HTMLElement) {\n    // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n    // focus event affecting the monitored element. If we want to use the origin of the first event\n    // instead we should check for the cdk-focused class here and return if the element already has\n    // it. (This only matters for elements that have includesChildren = true).\n\n    // If we are not counting child-element-focus as focused, make sure that the event target is the\n    // monitored element itself.\n    if (!this._elementInfo.get(element).checkChildren && element !== event.target) {\n      return;\n    }\n\n    // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n    // 1) The window has just regained focus, in which case we want to restore the focused state of\n    //    the element from before the window blurred.\n    // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n    // 3) The element was programmatically focused, in which case we should mark the origin as\n    //    'program'.\n    if (!this._origin) {\n      if (this._windowFocused && this._lastFocusOrigin) {\n        this._origin = this._lastFocusOrigin;\n      } else if (this._wasCausedByTouch(event)) {\n        this._origin = 'touch';\n      } else {\n        this._origin = 'program';\n      }\n    }\n\n    this._setClasses(element, this._origin);\n    this._elementInfo.get(element).subject.next(this._origin);\n    this._lastFocusOrigin = this._origin;\n    this._origin = null;\n  }\n/**\n * Handles blur events on a registered element.\n * @param {?} event The blur event.\n * @param {?} element The monitored element.\n * @return {?}\n */\nprivate _onBlur(event: FocusEvent, element: HTMLElement) {\n    // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n    // order to focus another child of the monitored element.\n    if (this._elementInfo.get(element).checkChildren && event.relatedTarget instanceof Node &&\n        element.contains(event.relatedTarget)) {\n      return;\n    }\n\n    this._setClasses(element, null);\n    this._elementInfo.get(element).subject.next(null);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n{type: Platform, },\n];\n}\n\nfunction FocusOriginMonitor_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusOriginMonitor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusOriginMonitor.ctorParameters;\n/**\n * The focus origin that the next focus event is a result of.\n * @type {?}\n */\nFocusOriginMonitor.prototype._origin;\n/**\n * The FocusOrigin of the last focus event tracked by the FocusOriginMonitor.\n * @type {?}\n */\nFocusOriginMonitor.prototype._lastFocusOrigin;\n/**\n * Whether the window has just been focused.\n * @type {?}\n */\nFocusOriginMonitor.prototype._windowFocused;\n/**\n * The target of the last touch event.\n * @type {?}\n */\nFocusOriginMonitor.prototype._lastTouchTarget;\n/**\n * The timeout id of the touch timeout, used to cancel timeout later.\n * @type {?}\n */\nFocusOriginMonitor.prototype._touchTimeout;\n/**\n * Weak map of elements being monitored to their info.\n * @type {?}\n */\nFocusOriginMonitor.prototype._elementInfo;\n/** @type {?} */\nFocusOriginMonitor.prototype._ngZone;\n/** @type {?} */\nFocusOriginMonitor.prototype._platform;\n}\n\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n * \n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nexport class CdkMonitorFocus implements OnDestroy {\n   cdkFocusChange = new EventEmitter<FocusOrigin>();\n/**\n * @param {?} _elementRef\n * @param {?} _focusOriginMonitor\n * @param {?} renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _focusOriginMonitor: FocusOriginMonitor,\n              renderer: Renderer2) {\n    this._focusOriginMonitor.monitor(\n        this._elementRef.nativeElement, renderer,\n        this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n        .subscribe(origin => this.cdkFocusChange.emit(origin));\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._focusOriginMonitor.stopMonitoring(this._elementRef.nativeElement);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: FocusOriginMonitor, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'cdkFocusChange': [{ type: Output },],\n};\n}\n\nfunction CdkMonitorFocus_tsickle_Closure_declarations() {\n/** @type {?} */\nCdkMonitorFocus.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCdkMonitorFocus.ctorParameters;\n/** @type {?} */\nCdkMonitorFocus.propDecorators;\n/** @type {?} */\nCdkMonitorFocus.prototype.cdkFocusChange;\n/** @type {?} */\nCdkMonitorFocus.prototype._elementRef;\n/** @type {?} */\nCdkMonitorFocus.prototype._focusOriginMonitor;\n}\n\n/**\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @param {?} platform\n * @return {?}\n */\nexport function FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY(\n    parentDispatcher: FocusOriginMonitor, ngZone: NgZone, platform: Platform) {\n  return parentDispatcher || new FocusOriginMonitor(ngZone, platform);\n}\n\n\nexport const /** @type {?} */ FOCUS_ORIGIN_MONITOR_PROVIDER = {\n  // If there is already a FocusOriginMonitor available, use that. Otherwise, provide a new one.\n  provide: FocusOriginMonitor,\n  deps: [[new Optional(), new SkipSelf(), FocusOriginMonitor], NgZone, Platform],\n  useFactory: FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable, Optional, SkipSelf} from '@angular/core';\n\n\n// Users of the Dispatcher never need to see this type, but TypeScript requires it to be exported.\nexport type UniqueSelectionDispatcherListener = (id: string, name: string) => void;\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n * \n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nexport class UniqueSelectionDispatcher {\nprivate _listeners: UniqueSelectionDispatcherListener[] = [];\n/**\n * Notify other items that selection for the given name has been set.\n * @param {?} id ID of the item.\n * @param {?} name Name of the item.\n * @return {?}\n */\nnotify(id: string, name: string) {\n    for (let /** @type {?} */ listener of this._listeners) {\n      listener(id, name);\n    }\n  }\n/**\n * Listen for future changes to item selection.\n * @param {?} listener\n * @return {?}\n */\nlisten(listener: UniqueSelectionDispatcherListener) {\n    this._listeners.push(listener);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction UniqueSelectionDispatcher_tsickle_Closure_declarations() {\n/** @type {?} */\nUniqueSelectionDispatcher.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUniqueSelectionDispatcher.ctorParameters;\n/** @type {?} */\nUniqueSelectionDispatcher.prototype._listeners;\n}\n\n/**\n * @param {?} parentDispatcher\n * @return {?}\n */\nexport function UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY(\n    parentDispatcher: UniqueSelectionDispatcher) {\n  return parentDispatcher || new UniqueSelectionDispatcher();\n}\n\nexport const /** @type {?} */ UNIQUE_SELECTION_DISPATCHER_PROVIDER = {\n  // If there is already a dispatcher available, use that. Otherwise, provide a new one.\n  provide: UniqueSelectionDispatcher,\n  deps: [[new Optional(), new SkipSelf(), UniqueSelectionDispatcher]],\n  useFactory: UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n * @param {?} event\n * @return {?}\n */\nexport function isFakeMousedownFromScreenReader(event: MouseEvent): boolean {\n  return event.buttons === 0;\n}\n","import {Subject} from 'rxjs/Subject';\n/**\n * Class to be used to power selecting one or more options from a list.\n * \\@docs-private\n */\nexport class SelectionModel<T> {\n/**\n * Currently-selected values.\n */\nprivate _selection: Set<T> = new Set();\n/**\n * Keeps track of the deselected options that haven't been emitted by the change event.\n */\nprivate _deselectedToEmit: T[] = [];\n/**\n * Keeps track of the selected option that haven't been emitted by the change event.\n */\nprivate _selectedToEmit: T[] = [];\n/**\n * Cache for the array value of the selected items.\n */\nprivate _selected: T[];\n/**\n * Selected value(s).\n * @return {?}\n */\nget selected(): T[] {\n    if (!this._selected) {\n      this._selected = Array.from(this._selection.values());\n    }\n\n    return this._selected;\n  }\n/**\n * Event emitted when the value has changed.\n */\nonChange: Subject<SelectionChange<T>> = this._emitChanges ? new Subject() : null;\n/**\n * @param {?=} _isMulti\n * @param {?=} initiallySelectedValues\n * @param {?=} _emitChanges\n */\nconstructor(\nprivate _isMulti = false,\n    initiallySelectedValues?: T[],\nprivate _emitChanges = true) {\n\n    if (initiallySelectedValues) {\n      if (_isMulti) {\n        initiallySelectedValues.forEach(value => this._markSelected(value));\n      } else {\n        this._markSelected(initiallySelectedValues[0]);\n      }\n\n      // Clear the array in order to avoid firing the change event for preselected values.\n      this._selectedToEmit.length = 0;\n    }\n  }\n/**\n * Selects a value or an array of values.\n * @param {?} value\n * @return {?}\n */\nselect(value: T): void {\n    this._markSelected(value);\n    this._emitChangeEvent();\n  }\n/**\n * Deselects a value or an array of values.\n * @param {?} value\n * @return {?}\n */\ndeselect(value: T): void {\n    this._unmarkSelected(value);\n    this._emitChangeEvent();\n  }\n/**\n * Toggles a value between selected and deselected.\n * @param {?} value\n * @return {?}\n */\ntoggle(value: T): void {\n    this.isSelected(value) ? this.deselect(value) : this.select(value);\n  }\n/**\n * Clears all of the selected values.\n * @return {?}\n */\nclear(): void {\n    this._unmarkAll();\n    this._emitChangeEvent();\n  }\n/**\n * Determines whether a value is selected.\n * @param {?} value\n * @return {?}\n */\nisSelected(value: T): boolean {\n    return this._selection.has(value);\n  }\n/**\n * Determines whether the model does not have a value.\n * @return {?}\n */\nisEmpty(): boolean {\n    return this._selection.size === 0;\n  }\n/**\n * Determines whether the model has a value.\n * @return {?}\n */\nhasValue(): boolean {\n    return !this.isEmpty();\n  }\n/**\n * Sorts the selected values based on a predicate function.\n * @param {?=} predicate\n * @return {?}\n */\nsort(predicate?: (a: T, b: T) => number): void {\n    if (this._isMulti && this.selected) {\n      this._selected.sort(predicate);\n    }\n  }\n/**\n * Emits a change event and clears the records of selected and deselected values.\n * @return {?}\n */\nprivate _emitChangeEvent() {\n    if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n      let /** @type {?} */ eventData = new SelectionChange(this._selectedToEmit, this._deselectedToEmit);\n\n      this.onChange.next(eventData);\n      this._deselectedToEmit = [];\n      this._selectedToEmit = [];\n    }\n\n    this._selected = null;\n  }\n/**\n * Selects a value.\n * @param {?} value\n * @return {?}\n */\nprivate _markSelected(value: T) {\n    if (!this.isSelected(value)) {\n      if (!this._isMulti) {\n        this._unmarkAll();\n      }\n\n      this._selection.add(value);\n\n      if (this._emitChanges) {\n        this._selectedToEmit.push(value);\n      }\n    }\n  }\n/**\n * Deselects a value.\n * @param {?} value\n * @return {?}\n */\nprivate _unmarkSelected(value: T) {\n    if (this.isSelected(value)) {\n      this._selection.delete(value);\n\n      if (this._emitChanges) {\n        this._deselectedToEmit.push(value);\n      }\n    }\n  }\n/**\n * Clears out the selected values.\n * @return {?}\n */\nprivate _unmarkAll() {\n    if (!this.isEmpty()) {\n      this._selection.forEach(value => this._unmarkSelected(value));\n    }\n  }\n}\n\nfunction SelectionModel_tsickle_Closure_declarations() {\n/**\n * Currently-selected values.\n * @type {?}\n */\nSelectionModel.prototype._selection;\n/**\n * Keeps track of the deselected options that haven't been emitted by the change event.\n * @type {?}\n */\nSelectionModel.prototype._deselectedToEmit;\n/**\n * Keeps track of the selected option that haven't been emitted by the change event.\n * @type {?}\n */\nSelectionModel.prototype._selectedToEmit;\n/**\n * Cache for the array value of the selected items.\n * @type {?}\n */\nSelectionModel.prototype._selected;\n/**\n * Event emitted when the value has changed.\n * @type {?}\n */\nSelectionModel.prototype.onChange;\n/** @type {?} */\nSelectionModel.prototype._isMulti;\n/** @type {?} */\nSelectionModel.prototype._emitChanges;\n}\n\n/**\n * Describes an event emitted when the value of a MdSelectionModel has changed.\n * \\@docs-private\n */\nexport class SelectionChange<T> {\n/**\n * @param {?=} added\n * @param {?=} removed\n */\nconstructor(public added?: T[],\npublic removed?: T[]) { }\n}\n\nfunction SelectionChange_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionChange.prototype.added;\n/** @type {?} */\nSelectionChange.prototype.removed;\n}\n\n","import {Injectable, isDevMode} from '@angular/core';\nimport {HammerGestureConfig} from '@angular/platform-browser';\nimport {HammerStatic, HammerInstance, Recognizer, RecognizerStatic} from './gesture-annotations';\nexport class GestureConfig extends HammerGestureConfig {\nprivate _hammer: HammerStatic = typeof window !== 'undefined' ? ( /** @type {?} */((window as any))).Hammer : null;\n\n  /* List of new event names to add to the gesture support list */\n  events: string[] = this._hammer ? [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n  ] : [];\nconstructor() {\n    super();\n\n    if (!this._hammer && isDevMode()) {\n      console.warn(\n        'Could not find HammerJS. Certain Angular Material ' +\n        'components may not work correctly.'\n      );\n    }\n  }\n/**\n * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n * \n * Our gesture names come from the Material Design gestures spec:\n * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\n * \n * More information on default recognizers can be found in Hammer docs:\n * http://hammerjs.github.io/recognizer-pan/\n * http://hammerjs.github.io/recognizer-press/\n * \n * @param {?} element Element to which to assign the new HammerJS gestures.\n * @return {?} Newly-created HammerJS instance.\n */\nbuildHammer(element: HTMLElement): HammerInstance {\n    const /** @type {?} */ mc = new this._hammer(element);\n\n    // Default Hammer Recognizers.\n    let /** @type {?} */ pan = new this._hammer.Pan();\n    let /** @type {?} */ swipe = new this._hammer.Swipe();\n    let /** @type {?} */ press = new this._hammer.Press();\n\n    // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n    // Otherwise the previous `recognizeWith` will be dropped.\n    // TODO: Confirm threshold numbers with Material Design UX Team\n    let /** @type {?} */ slide = this._createRecognizer(pan, {event: 'slide', threshold: 0}, swipe);\n    let /** @type {?} */ longpress = this._createRecognizer(press, {event: 'longpress', time: 500});\n\n    // Overwrite the default `pan` event to use the swipe event.\n    pan.recognizeWith(swipe);\n\n    // Add customized gestures to Hammer manager\n    mc.add([swipe, press, pan, slide, longpress]);\n\n    return /** @type {?} */(( mc as HammerInstance));\n  }\n/**\n * Creates a new recognizer, without affecting the default recognizers of HammerJS\n * @param {?} base\n * @param {?} options\n * @param {...?} inheritances\n * @return {?}\n */\nprivate _createRecognizer(base: Recognizer, options: any, ...inheritances: Recognizer[]) {\n    let /** @type {?} */ recognizer = new ( /** @type {?} */((base.constructor as RecognizerStatic)))(options);\n\n    inheritances.push(base);\n    inheritances.forEach(item => recognizer.recognizeWith(item));\n\n    return recognizer;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction GestureConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nGestureConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGestureConfig.ctorParameters;\n/** @type {?} */\nGestureConfig.prototype._hammer;\n/** @type {?} */\nGestureConfig.prototype.events;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\nimport {OverlayContainer} from './overlay-container';\n/**\n * The FullscreenOverlayContainer is the alternative to OverlayContainer\n * that supports correct displaying of overlay elements in Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n * It should be provided in the root component that way:\n * providers: [\n *   {provide: OverlayContainer, useClass: FullscreenOverlayContainer}\n * ],\n */\nexport class FullscreenOverlayContainer extends OverlayContainer {\n/**\n * @return {?}\n */\nprotected _createContainer(): void {\n    super._createContainer();\n    this._adjustParentForFullscreenChange();\n    this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n  }\n/**\n * @return {?}\n */\nprivate _adjustParentForFullscreenChange(): void {\n    if (!this._containerElement) {\n      return;\n    }\n    let /** @type {?} */ fullscreenElement = this.getFullscreenElement();\n    let /** @type {?} */ parent = fullscreenElement || document.body;\n    parent.appendChild(this._containerElement);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nprivate _addFullscreenChangeListener(fn: () => void) {\n    if (document.fullscreenEnabled) {\n      document.addEventListener('fullscreenchange', fn);\n    } else if (document.webkitFullscreenEnabled) {\n      document.addEventListener('webkitfullscreenchange', fn);\n    } else if (( /** @type {?} */((document as any))).mozFullScreenEnabled) {\n      document.addEventListener('mozfullscreenchange', fn);\n    } else if (( /** @type {?} */((document as any))).msFullscreenEnabled) {\n      document.addEventListener('MSFullscreenChange', fn);\n    }\n  }\n/**\n * When the page is put into fullscreen mode, a specific element is specified.\n * Only that element and its children are visible when in fullscreen mode.\n * @return {?}\n */\ngetFullscreenElement(): Element {\n    return document.fullscreenElement ||\n        document.webkitFullscreenElement ||\n        ( /** @type {?} */((document as any))).mozFullScreenElement ||\n        ( /** @type {?} */((document as any))).msFullscreenElement ||\n        null;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FullscreenOverlayContainer_tsickle_Closure_declarations() {\n/** @type {?} */\nFullscreenOverlayContainer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFullscreenOverlayContainer.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule} from '@angular/core';\nimport {FocusTrapDirective, FocusTrapDeprecatedDirective, FocusTrapFactory} from './focus-trap';\nimport {LIVE_ANNOUNCER_PROVIDER} from './live-announcer';\nimport {InteractivityChecker} from './interactivity-checker';\nimport {CommonModule} from '@angular/common';\nimport {PlatformModule} from '../platform/index';\nexport class A11yModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule, PlatformModule],\n  declarations: [FocusTrapDirective, FocusTrapDeprecatedDirective],\n  exports: [FocusTrapDirective, FocusTrapDeprecatedDirective],\n  providers: [InteractivityChecker, FocusTrapFactory, LIVE_ANNOUNCER_PROVIDER]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction A11yModule_tsickle_Closure_declarations() {\n/** @type {?} */\nA11yModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nA11yModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Injectable,\n  InjectionToken,\n  Optional,\n  Inject,\n  SkipSelf,\n} from '@angular/core';\nimport {Platform} from '../platform/platform';\n\n\nexport const /** @type {?} */ LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken<HTMLElement>('liveAnnouncerElement');\n\n/** Possible politeness levels. */\nexport type AriaLivePoliteness = 'off' | 'polite' | 'assertive';\nexport class LiveAnnouncer {\nprivate _liveElement: Element;\n/**\n * @param {?} elementToken\n * @param {?} platform\n */\nconstructor(\n        elementToken: any,\n      platform: Platform) {\n    // Only do anything if we're on the browser platform.\n    if (platform.isBrowser) {\n      // We inject the live element as `any` because the constructor signature cannot reference\n      // browser globals (HTMLElement) on non-browser environments, since having a class decorator\n      // causes TypeScript to preserve the constructor signature types.\n      this._liveElement = elementToken || this._createLiveElement();\n    }\n  }\n/**\n * Announces a message to screenreaders.\n * @param {?} message Message to be announced to the screenreader\n * @param {?=} politeness The politeness of the announcer element\n * @return {?}\n */\nannounce(message: string, politeness: AriaLivePoliteness = 'polite'): void {\n    this._liveElement.textContent = '';\n\n    // TODO: ensure changing the politeness works on all environments we support.\n    this._liveElement.setAttribute('aria-live', politeness);\n\n    // This 100ms timeout is necessary for some browser + screen-reader combinations:\n    // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n    // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n    //   second time without clearing and then using a non-zero delay.\n    // (using JAWS 17 at time of this writing).\n    setTimeout(() => this._liveElement.textContent = message, 100);\n  }\n/**\n * Removes the aria-live element from the DOM.\n * @return {?}\n */\n_removeLiveElement() {\n    if (this._liveElement && this._liveElement.parentNode) {\n      this._liveElement.parentNode.removeChild(this._liveElement);\n    }\n  }\n/**\n * @return {?}\n */\nprivate _createLiveElement(): Element {\n    let /** @type {?} */ liveEl = document.createElement('div');\n\n    liveEl.classList.add('cdk-visually-hidden');\n    liveEl.setAttribute('aria-atomic', 'true');\n    liveEl.setAttribute('aria-live', 'polite');\n\n    document.body.appendChild(liveEl);\n\n    return liveEl;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_ELEMENT_TOKEN, ] }, ]},\n{type: Platform, },\n];\n}\n\nfunction LiveAnnouncer_tsickle_Closure_declarations() {\n/** @type {?} */\nLiveAnnouncer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLiveAnnouncer.ctorParameters;\n/** @type {?} */\nLiveAnnouncer.prototype._liveElement;\n}\n\n/**\n * @param {?} parentDispatcher\n * @param {?} liveElement\n * @param {?} platform\n * @return {?}\n */\nexport function LIVE_ANNOUNCER_PROVIDER_FACTORY(\n    parentDispatcher: LiveAnnouncer, liveElement: any, platform: Platform) {\n  return parentDispatcher || new LiveAnnouncer(liveElement, platform);\n}\n\nexport const /** @type {?} */ LIVE_ANNOUNCER_PROVIDER = {\n  // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.\n  provide: LiveAnnouncer,\n  deps: [\n    [new Optional(), new SkipSelf(), LiveAnnouncer],\n    [new Optional(), new Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN)],\n    Platform,\n  ],\n  useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  AfterContentInit,\n  Injectable,\n} from '@angular/core';\nimport {InteractivityChecker} from './interactivity-checker';\nimport {coerceBooleanProperty} from '../coercion/boolean-property';\n\nimport'rxjs/add/operator/first';\n/**\n * Class that allows for trapping focus within a DOM element.\n * \n * NOTE: This class currently uses a very simple (naive) approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like tabIndex > 0, flex `order`, and shadow roots can cause to two to misalign.\n * This will be replaced with a more intelligent solution before the library is considered stable.\n */\nexport class FocusTrap {\nprivate _startAnchor: HTMLElement;\nprivate _endAnchor: HTMLElement;\n/**\n * Whether the focus trap is active.\n * @return {?}\n */\nget enabled(): boolean { return this._enabled; }\n/**\n * @param {?} val\n * @return {?}\n */\nset enabled(val: boolean) {\n    this._enabled = val;\n\n    if (this._startAnchor && this._endAnchor) {\n      this._startAnchor.tabIndex = this._endAnchor.tabIndex = this._enabled ? 0 : -1;\n    }\n  }\nprivate _enabled: boolean = true;\n/**\n * @param {?} _element\n * @param {?} _checker\n * @param {?} _ngZone\n * @param {?=} deferAnchors\n */\nconstructor(\nprivate _element: HTMLElement,\nprivate _checker: InteractivityChecker,\nprivate _ngZone: NgZone,\n    deferAnchors = false) {\n\n    if (!deferAnchors) {\n      this.attachAnchors();\n    }\n  }\n/**\n * Destroys the focus trap by cleaning up the anchors.\n * @return {?}\n */\ndestroy() {\n    if (this._startAnchor && this._startAnchor.parentNode) {\n      this._startAnchor.parentNode.removeChild(this._startAnchor);\n    }\n\n    if (this._endAnchor && this._endAnchor.parentNode) {\n      this._endAnchor.parentNode.removeChild(this._endAnchor);\n    }\n\n    this._startAnchor = this._endAnchor = null;\n  }\n/**\n * Inserts the anchors into the DOM. This is usually done automatically\n * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n * @return {?}\n */\nattachAnchors(): void {\n    if (!this._startAnchor) {\n      this._startAnchor = this._createAnchor();\n    }\n\n    if (!this._endAnchor) {\n      this._endAnchor = this._createAnchor();\n    }\n\n    this._ngZone.runOutsideAngular(() => {\n      this._startAnchor.addEventListener('focus', () => this.focusLastTabbableElement());\n      this._endAnchor.addEventListener('focus', () => this.focusFirstTabbableElement());\n\n      this._element.parentNode.insertBefore(this._startAnchor, this._element);\n      this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n    });\n  }\n/**\n * @return {?}\n */\nfocusInitialElementWhenReady() {\n    this._ngZone.onMicrotaskEmpty.first().subscribe(() => this.focusInitialElement());\n  }\n/**\n * Waits for microtask queue to empty, then focuses\n * the first tabbable element within the focus trap region.\n * @return {?}\n */\nfocusFirstTabbableElementWhenReady() {\n    this._ngZone.onMicrotaskEmpty.first().subscribe(() => this.focusFirstTabbableElement());\n  }\n/**\n * Waits for microtask queue to empty, then focuses\n * the last tabbable element within the focus trap region.\n * @return {?}\n */\nfocusLastTabbableElementWhenReady() {\n    this._ngZone.onMicrotaskEmpty.first().subscribe(() => this.focusLastTabbableElement());\n  }\n/**\n * Get the specified boundary element of the trapped region.\n * @param {?} bound The boundary to get (start or end of trapped region).\n * @return {?} The boundary element.\n */\nprivate _getRegionBoundary(bound: 'start' | 'end'): HTMLElement | null {\n    let /** @type {?} */ markers = [\n      ...Array.prototype.slice.call(this._element.querySelectorAll(`[cdk-focus-region-${bound}]`)),\n      // Deprecated version of selector, for temporary backwards comparability:\n      ...Array.prototype.slice.call(this._element.querySelectorAll(`[cdk-focus-${bound}]`)),\n    ];\n\n    markers.forEach((el: HTMLElement) => {\n      if (el.hasAttribute(`cdk-focus-${bound}`)) {\n        console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}',` +\n                     ` use 'cdk-focus-region-${bound}' instead.`, el);\n      }\n    });\n\n    if (bound == 'start') {\n      return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n    }\n    return markers.length ?\n        markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n  }\n/**\n * Focuses the element that should be focused when the focus trap is initialized.\n * @return {?}\n */\nfocusInitialElement() {\n    let /** @type {?} */ redirectToElement = /** @type {?} */(( this._element.querySelector('[cdk-focus-initial]') as HTMLElement));\n    if (redirectToElement) {\n      redirectToElement.focus();\n    } else {\n      this.focusFirstTabbableElement();\n    }\n  }\n/**\n * Focuses the first tabbable element within the focus trap region.\n * @return {?}\n */\nfocusFirstTabbableElement() {\n    let /** @type {?} */ redirectToElement = this._getRegionBoundary('start');\n    if (redirectToElement) {\n      redirectToElement.focus();\n    }\n  }\n/**\n * Focuses the last tabbable element within the focus trap region.\n * @return {?}\n */\nfocusLastTabbableElement() {\n    let /** @type {?} */ redirectToElement = this._getRegionBoundary('end');\n    if (redirectToElement) {\n      redirectToElement.focus();\n    }\n  }\n/**\n * Get the first tabbable element from a DOM subtree (inclusive).\n * @param {?} root\n * @return {?}\n */\nprivate _getFirstTabbableElement(root: HTMLElement): HTMLElement {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n\n    // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n    // back to `childNodes` which includes text nodes, comments etc.\n    let /** @type {?} */ children = root.children || root.childNodes;\n\n    for (let /** @type {?} */ i = 0; i < children.length; i++) {\n      let /** @type {?} */ tabbableChild = children[i].nodeType === Node.ELEMENT_NODE ?\n        this._getFirstTabbableElement( /** @type {?} */((children[i] as HTMLElement))) :\n        null;\n\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n\n    return null;\n  }\n/**\n * Get the last tabbable element from a DOM subtree (inclusive).\n * @param {?} root\n * @return {?}\n */\nprivate _getLastTabbableElement(root: HTMLElement): HTMLElement {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n\n    // Iterate in reverse DOM order.\n    let /** @type {?} */ children = root.children || root.childNodes;\n\n    for (let /** @type {?} */ i = children.length - 1; i >= 0; i--) {\n      let /** @type {?} */ tabbableChild = children[i].nodeType === Node.ELEMENT_NODE ?\n        this._getLastTabbableElement( /** @type {?} */((children[i] as HTMLElement))) :\n        null;\n\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n\n    return null;\n  }\n/**\n * Creates an anchor element.\n * @return {?}\n */\nprivate _createAnchor(): HTMLElement {\n    let /** @type {?} */ anchor = document.createElement('div');\n    anchor.tabIndex = this._enabled ? 0 : -1;\n    anchor.classList.add('cdk-visually-hidden');\n    anchor.classList.add('cdk-focus-trap-anchor');\n    return anchor;\n  }\n}\n\nfunction FocusTrap_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusTrap.prototype._startAnchor;\n/** @type {?} */\nFocusTrap.prototype._endAnchor;\n/** @type {?} */\nFocusTrap.prototype._enabled;\n/** @type {?} */\nFocusTrap.prototype._element;\n/** @type {?} */\nFocusTrap.prototype._checker;\n/** @type {?} */\nFocusTrap.prototype._ngZone;\n}\n\n/**\n * Factory that allows easy instantiation of focus traps.\n */\nexport class FocusTrapFactory {\n/**\n * @param {?} _checker\n * @param {?} _ngZone\n */\nconstructor(private _checker: InteractivityChecker,\nprivate _ngZone: NgZone) { }\n/**\n * @param {?} element\n * @param {?=} deferAnchors\n * @return {?}\n */\ncreate(element: HTMLElement, deferAnchors = false): FocusTrap {\n    return new FocusTrap(element, this._checker, this._ngZone, deferAnchors);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: InteractivityChecker, },\n{type: NgZone, },\n];\n}\n\nfunction FocusTrapFactory_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusTrapFactory.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusTrapFactory.ctorParameters;\n/** @type {?} */\nFocusTrapFactory.prototype._checker;\n/** @type {?} */\nFocusTrapFactory.prototype._ngZone;\n}\n\n/**\n * Directive for trapping focus within a region.\n * @deprecated\n */\nexport class FocusTrapDeprecatedDirective implements OnDestroy, AfterContentInit {\n  focusTrap: FocusTrap;\n/**\n * Whether the focus trap is active.\n * @return {?}\n */\nget disabled(): boolean { return !this.focusTrap.enabled; }\n/**\n * @param {?} val\n * @return {?}\n */\nset disabled(val: boolean) {\n    this.focusTrap.enabled = !coerceBooleanProperty(val);\n  }\n/**\n * @param {?} _elementRef\n * @param {?} _focusTrapFactory\n */\nconstructor(private _elementRef: ElementRef,\nprivate _focusTrapFactory: FocusTrapFactory) {\n    this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.focusTrap.destroy();\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this.focusTrap.attachAnchors();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'cdk-focus-trap',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: FocusTrapFactory, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'disabled': [{ type: Input },],\n};\n}\n\nfunction FocusTrapDeprecatedDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusTrapDeprecatedDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusTrapDeprecatedDirective.ctorParameters;\n/** @type {?} */\nFocusTrapDeprecatedDirective.propDecorators;\n/** @type {?} */\nFocusTrapDeprecatedDirective.prototype.focusTrap;\n/** @type {?} */\nFocusTrapDeprecatedDirective.prototype._elementRef;\n/** @type {?} */\nFocusTrapDeprecatedDirective.prototype._focusTrapFactory;\n}\n\n/**\n * Directive for trapping focus within a region.\n */\nexport class FocusTrapDirective implements OnDestroy, AfterContentInit {\n  focusTrap: FocusTrap;\n/**\n * Whether the focus trap is active.\n * @return {?}\n */\nget enabled(): boolean { return this.focusTrap.enabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset enabled(value: boolean) { this.focusTrap.enabled = coerceBooleanProperty(value); }\n/**\n * @param {?} _elementRef\n * @param {?} _focusTrapFactory\n */\nconstructor(private _elementRef: ElementRef,\nprivate _focusTrapFactory: FocusTrapFactory) {\n    this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.focusTrap.destroy();\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this.focusTrap.attachAnchors();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdkTrapFocus]',\n  exportAs: 'cdkTrapFocus',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: FocusTrapFactory, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'enabled': [{ type: Input, args: ['cdkTrapFocus', ] },],\n};\n}\n\nfunction FocusTrapDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusTrapDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusTrapDirective.ctorParameters;\n/** @type {?} */\nFocusTrapDirective.propDecorators;\n/** @type {?} */\nFocusTrapDirective.prototype.focusTrap;\n/** @type {?} */\nFocusTrapDirective.prototype._elementRef;\n/** @type {?} */\nFocusTrapDirective.prototype._focusTrapFactory;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\nimport {Platform} from '../platform/platform';\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nexport class InteractivityChecker {\n/**\n * @param {?} _platform\n */\nconstructor(private _platform: Platform) {}\n/**\n * Gets whether an element is disabled.\n * \n * @param {?} element Element to be checked.\n * @return {?} Whether the element is disabled.\n */\nisDisabled(element: HTMLElement): boolean {\n    // This does not capture some cases, such as a non-form control with a disabled attribute or\n    // a form control inside of a disabled form, but should capture the most common cases.\n    return element.hasAttribute('disabled');\n  }\n/**\n * Gets whether an element is visible for the purposes of interactivity.\n * \n * This will capture states like `display: none` and `visibility: hidden`, but not things like\n * being clipped by an `overflow: hidden` parent or being outside the viewport.\n * \n * @param {?} element\n * @return {?} Whether the element is visible.\n */\nisVisible(element: HTMLElement): boolean {\n    return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n  }\n/**\n * Gets whether an element can be reached via Tab key.\n * Assumes that the element has already been checked with isFocusable.\n * \n * @param {?} element Element to be checked.\n * @return {?} Whether the element is tabbable.\n */\nisTabbable(element: HTMLElement): boolean {\n\n    let /** @type {?} */ frameElement = /** @type {?} */(( getWindow(element).frameElement as HTMLElement));\n\n    if (frameElement) {\n\n      let /** @type {?} */ frameType = frameElement && frameElement.nodeName.toLowerCase();\n\n      // Frame elements inherit their tabindex onto all child elements.\n      if (getTabIndexValue(frameElement) === -1) {\n        return false;\n      }\n\n      // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n      if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n        return false;\n      }\n\n      // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n      if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n        return false;\n      }\n\n    }\n\n    let /** @type {?} */ nodeName = element.nodeName.toLowerCase();\n    let /** @type {?} */ tabIndexValue = getTabIndexValue(element);\n\n    if (element.hasAttribute('contenteditable')) {\n      return tabIndexValue !== -1;\n    }\n\n    if (nodeName === 'iframe') {\n      // The frames may be tabbable depending on content, but it's not possibly to reliably\n      // investigate the content of the frames.\n      return false;\n    }\n\n    if (nodeName === 'audio') {\n      if (!element.hasAttribute('controls')) {\n        // By default an <audio> element without the controls enabled is not tabbable.\n        return false;\n      } else if (this._platform.BLINK) {\n        // In Blink <audio controls> elements are always tabbable.\n        return true;\n      }\n    }\n\n    if (nodeName === 'video') {\n      if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n        // In Trident a <video> element without the controls enabled is not tabbable.\n        return false;\n      } else if (this._platform.BLINK || this._platform.FIREFOX) {\n        // In Chrome and Firefox <video controls> elements are always tabbable.\n        return true;\n      }\n    }\n\n    if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n      // In all Blink and WebKit based browsers <object> elements are never tabbable.\n      return false;\n    }\n\n    // In iOS the browser only considers some specific elements as tabbable.\n    if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n      return false;\n    }\n\n    return element.tabIndex >= 0;\n  }\n/**\n * Gets whether an element can be focused by the user.\n * \n * @param {?} element Element to be checked.\n * @return {?} Whether the element is focusable.\n */\nisFocusable(element: HTMLElement): boolean {\n    // Perform checks in order of left to most expensive.\n    // Again, naive approach that does not capture many edge cases and browser quirks.\n    return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Platform, },\n];\n}\n\nfunction InteractivityChecker_tsickle_Closure_declarations() {\n/** @type {?} */\nInteractivityChecker.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInteractivityChecker.ctorParameters;\n/** @type {?} */\nInteractivityChecker.prototype._platform;\n}\n\n/**\n * Checks whether the specified element has any geometry / rectangles.\n * @param {?} element\n * @return {?}\n */\nfunction hasGeometry(element: HTMLElement): boolean {\n  // Use logic from jQuery to check for an invisible element.\n  // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n  return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length);\n}\n/**\n * Gets whether an element's\n * @param {?} element\n * @return {?}\n */\nfunction isNativeFormElement(element: Node) {\n  let /** @type {?} */ nodeName = element.nodeName.toLowerCase();\n  return nodeName === 'input' ||\n      nodeName === 'select' ||\n      nodeName === 'button' ||\n      nodeName === 'textarea';\n}\n/**\n * Gets whether an element is an <input type=\"hidden\">.\n * @param {?} element\n * @return {?}\n */\nfunction isHiddenInput(element: HTMLElement): boolean {\n  return isInputElement(element) && element.type == 'hidden';\n}\n/**\n * Gets whether an element is an anchor that has an href attribute.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorWithHref(element: HTMLElement): boolean {\n  return isAnchorElement(element) && element.hasAttribute('href');\n}\n/**\n * Gets whether an element is an input element.\n * @param {?} element\n * @return {?}\n */\nfunction isInputElement(element: HTMLElement): element is HTMLInputElement {\n  return element.nodeName.toLowerCase() == 'input';\n}\n/**\n * Gets whether an element is an anchor element.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorElement(element: HTMLElement): element is HTMLAnchorElement {\n  return element.nodeName.toLowerCase() == 'a';\n}\n/**\n * Gets whether an element has a valid tabindex.\n * @param {?} element\n * @return {?}\n */\nfunction hasValidTabIndex(element: HTMLElement): boolean {\n  if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n    return false;\n  }\n\n  let /** @type {?} */ tabIndex = element.getAttribute('tabindex');\n\n  // IE11 parses tabindex=\"\" as the value \"-32768\"\n  if (tabIndex == '-32768') {\n    return false;\n  }\n\n  return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n * @param {?} element\n * @return {?}\n */\nfunction getTabIndexValue(element: HTMLElement): number {\n  if (!hasValidTabIndex(element)) {\n    return null;\n  }\n\n  // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n  const /** @type {?} */ tabIndex = parseInt(element.getAttribute('tabindex'), 10);\n\n  return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/**\n * Checks whether the specified element is potentially tabbable on iOS\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyTabbableIOS(element: HTMLElement): boolean {\n  let /** @type {?} */ nodeName = element.nodeName.toLowerCase();\n  let /** @type {?} */ inputType = nodeName === 'input' && ( /** @type {?} */((element as HTMLInputElement))).type;\n\n  return inputType === 'text'\n      || inputType === 'password'\n      || nodeName === 'select'\n      || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyFocusable(element: HTMLElement): boolean {\n  // Inputs are potentially focusable *unless* they're type=\"hidden\".\n  if (isHiddenInput(element)) {\n    return false;\n  }\n\n  return isNativeFormElement(element) ||\n      isAnchorWithHref(element) ||\n      element.hasAttribute('contenteditable') ||\n      hasValidTabIndex(element);\n}\n/**\n * Gets the parent window of a DOM node with regards of being inside of an iframe.\n * @param {?} node\n * @return {?}\n */\nfunction getWindow(node: HTMLElement): Window {\n  return node.ownerDocument.defaultView || window;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    NgModule,\n    Directive,\n    EventEmitter,\n    TemplateRef,\n    ViewContainerRef,\n    Optional,\n    Input,\n    OnDestroy,\n    Output,\n    ElementRef,\n    Renderer2,\n    OnChanges,\n    SimpleChanges,\n} from '@angular/core';\nimport {Overlay, OVERLAY_PROVIDERS} from './overlay';\nimport {OverlayRef} from './overlay-ref';\nimport {TemplatePortal} from '../portal/portal';\nimport {OverlayState} from './overlay-state';\nimport {\n    ConnectionPositionPair,\n    ConnectedOverlayPositionChange\n} from './position/connected-position';\nimport {PortalModule} from '../portal/portal-directives';\nimport {ConnectedPositionStrategy} from './position/connected-position-strategy';\nimport {Dir, LayoutDirection} from '../rtl/dir';\nimport {Scrollable} from './scroll/scrollable';\nimport {RepositionScrollStrategy} from './scroll/reposition-scroll-strategy';\nimport {ScrollStrategy} from './scroll/scroll-strategy';\nimport {coerceBooleanProperty} from '../coercion/boolean-property';\nimport {ESCAPE} from '../keyboard/keycodes';\nimport {ScrollDispatcher} from './scroll/scroll-dispatcher';\nimport {Subscription} from 'rxjs/Subscription';\nimport {ScrollDispatchModule} from './scroll/index';\n/**\n * Default set of positions for the overlay. Follows the behavior of a dropdown.\n */\nlet defaultPositionList = [\n  new ConnectionPositionPair(\n      {originX: 'start', originY: 'bottom'},\n      {overlayX: 'start', overlayY: 'top'}),\n  new ConnectionPositionPair(\n      {originX: 'start', originY: 'top'},\n      {overlayX: 'start', overlayY: 'bottom'}),\n];\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nexport class OverlayOrigin {\n/**\n * @param {?} elementRef\n */\nconstructor(public elementRef: ElementRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n  exportAs: 'cdkOverlayOrigin',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\n}\n\nfunction OverlayOrigin_tsickle_Closure_declarations() {\n/** @type {?} */\nOverlayOrigin.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOverlayOrigin.ctorParameters;\n/** @type {?} */\nOverlayOrigin.prototype.elementRef;\n}\n\n/**\n * Directive to facilitate declarative creation of an Overlay using a ConnectedPositionStrategy.\n */\nexport class ConnectedOverlayDirective implements OnDestroy, OnChanges {\nprivate _overlayRef: OverlayRef;\nprivate _templatePortal: TemplatePortal;\nprivate _hasBackdrop = false;\nprivate _backdropSubscription: Subscription;\nprivate _positionSubscription: Subscription;\nprivate _offsetX: number = 0;\nprivate _offsetY: number = 0;\nprivate _position: ConnectedPositionStrategy;\nprivate _escapeListener: Function;\n/**\n * Origin for the connected overlay.\n */\norigin: OverlayOrigin;\n/**\n * Registered connected position pairs.\n */\npositions: ConnectionPositionPair[];\n/**\n * The offset in pixels for the overlay connection point on the x-axis\n * @return {?}\n */\nget offsetX(): number {\n    return this._offsetX;\n  }\n/**\n * @param {?} offsetX\n * @return {?}\n */\nset offsetX(offsetX: number) {\n    this._offsetX = offsetX;\n    if (this._position) {\n      this._position.withOffsetX(offsetX);\n    }\n  }\n/**\n * The offset in pixels for the overlay connection point on the y-axis\n * @return {?}\n */\nget offsetY() {\n    return this._offsetY;\n  }\n/**\n * @param {?} offsetY\n * @return {?}\n */\nset offsetY(offsetY: number) {\n    this._offsetY = offsetY;\n    if (this._position) {\n      this._position.withOffsetY(offsetY);\n    }\n  }\n/**\n * The width of the overlay panel.\n */\nwidth: number | string;\n/**\n * The height of the overlay panel.\n */\nheight: number | string;\n/**\n * The min width of the overlay panel.\n */\nminWidth: number | string;\n/**\n * The min height of the overlay panel.\n */\nminHeight: number | string;\n/**\n * The custom class to be set on the backdrop element.\n */\nbackdropClass: string;\n/**\n * Strategy to be used when handling scroll events while the overlay is open.\n */\nscrollStrategy: ScrollStrategy = new RepositionScrollStrategy(this._scrollDispatcher);\n/**\n * Whether the overlay is open.\n */\nopen: boolean = false;\n/**\n * Whether or not the overlay should attach a backdrop.\n * @return {?}\n */\nget hasBackdrop() {\n    return this._hasBackdrop;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset hasBackdrop(value: any) {\n    this._hasBackdrop = coerceBooleanProperty(value);\n  }\n/**\n * Event emitted when the backdrop is clicked.\n */\nbackdropClick = new EventEmitter<void>();\n/**\n * Event emitted when the position has changed.\n */\npositionChange = new EventEmitter<ConnectedOverlayPositionChange>();\n/**\n * Event emitted when the overlay has been attached.\n */\nattach = new EventEmitter<void>();\n/**\n * Event emitted when the overlay has been detached.\n */\ndetach = new EventEmitter<void>();\n/**\n * @param {?} _overlay\n * @param {?} _renderer\n * @param {?} _scrollDispatcher\n * @param {?} templateRef\n * @param {?} viewContainerRef\n * @param {?} _dir\n */\nconstructor(\nprivate _overlay: Overlay,\nprivate _renderer: Renderer2,\nprivate _scrollDispatcher: ScrollDispatcher,\n      templateRef: TemplateRef<any>,\n      viewContainerRef: ViewContainerRef,\nprivate _dir: Dir) {\n    this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n  }\n/**\n * The associated overlay reference.\n * @return {?}\n */\nget overlayRef(): OverlayRef {\n    return this._overlayRef;\n  }\n/**\n * The element's layout direction.\n * @return {?}\n */\nget dir(): LayoutDirection {\n    return this._dir ? this._dir.value : 'ltr';\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._destroyOverlay();\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (changes['open']) {\n      this.open ? this._attachOverlay() : this._detachOverlay();\n    }\n  }\n/**\n * Creates an overlay\n * @return {?}\n */\nprivate _createOverlay() {\n    if (!this.positions || !this.positions.length) {\n      this.positions = defaultPositionList;\n    }\n\n    this._overlayRef = this._overlay.create(this._buildConfig());\n  }\n/**\n * Builds the overlay config based on the directive's inputs\n * @return {?}\n */\nprivate _buildConfig(): OverlayState {\n    let /** @type {?} */ overlayConfig = new OverlayState();\n\n    if (this.width || this.width === 0) {\n      overlayConfig.width = this.width;\n    }\n\n    if (this.height || this.height === 0) {\n      overlayConfig.height = this.height;\n    }\n\n    if (this.minWidth || this.minWidth === 0) {\n      overlayConfig.minWidth = this.minWidth;\n    }\n\n    if (this.minHeight || this.minHeight === 0) {\n      overlayConfig.minHeight = this.minHeight;\n    }\n\n    overlayConfig.hasBackdrop = this.hasBackdrop;\n\n    if (this.backdropClass) {\n      overlayConfig.backdropClass = this.backdropClass;\n    }\n\n    this._position = /** @type {?} */(( this._createPositionStrategy() as ConnectedPositionStrategy));\n    overlayConfig.positionStrategy = this._position;\n    overlayConfig.scrollStrategy = this.scrollStrategy;\n\n    return overlayConfig;\n  }\n/**\n * Returns the position strategy of the overlay to be set on the overlay config\n * @return {?}\n */\nprivate _createPositionStrategy(): ConnectedPositionStrategy {\n    const /** @type {?} */ pos = this.positions[0];\n    const /** @type {?} */ originPoint = {originX: pos.originX, originY: pos.originY};\n    const /** @type {?} */ overlayPoint = {overlayX: pos.overlayX, overlayY: pos.overlayY};\n\n    const /** @type {?} */ strategy = this._overlay.position()\n      .connectedTo(this.origin.elementRef, originPoint, overlayPoint)\n      .withOffsetX(this.offsetX)\n      .withOffsetY(this.offsetY);\n\n    this._handlePositionChanges(strategy);\n\n    return strategy;\n  }\n/**\n * @param {?} strategy\n * @return {?}\n */\nprivate _handlePositionChanges(strategy: ConnectedPositionStrategy): void {\n    for (let /** @type {?} */ i = 1; i < this.positions.length; i++) {\n      strategy.withFallbackPosition(\n          {originX: this.positions[i].originX, originY: this.positions[i].originY},\n          {overlayX: this.positions[i].overlayX, overlayY: this.positions[i].overlayY}\n      );\n    }\n\n    this._positionSubscription =\n        strategy.onPositionChange.subscribe(pos => this.positionChange.emit(pos));\n  }\n/**\n * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n * @return {?}\n */\nprivate _attachOverlay() {\n    if (!this._overlayRef) {\n      this._createOverlay();\n    }\n\n    this._position.withDirection(this.dir);\n    this._overlayRef.getState().direction = this.dir;\n    this._initEscapeListener();\n\n    if (!this._overlayRef.hasAttached()) {\n      this._overlayRef.attach(this._templatePortal);\n      this.attach.emit();\n    }\n\n    if (this.hasBackdrop) {\n      this._backdropSubscription = this._overlayRef.backdropClick().subscribe(() => {\n        this.backdropClick.emit();\n      });\n    }\n  }\n/**\n * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n * @return {?}\n */\nprivate _detachOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.detach();\n      this.detach.emit();\n    }\n\n    if (this._backdropSubscription) {\n      this._backdropSubscription.unsubscribe();\n      this._backdropSubscription = null;\n    }\n\n    if (this._escapeListener) {\n      this._escapeListener();\n    }\n  }\n/**\n * Destroys the overlay created by this directive.\n * @return {?}\n */\nprivate _destroyOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n    }\n\n    if (this._backdropSubscription) {\n      this._backdropSubscription.unsubscribe();\n    }\n\n    if (this._positionSubscription) {\n      this._positionSubscription.unsubscribe();\n    }\n\n    if (this._escapeListener) {\n      this._escapeListener();\n    }\n  }\n/**\n * Sets the event listener that closes the overlay when pressing Escape.\n * @return {?}\n */\nprivate _initEscapeListener() {\n    this._escapeListener = this._renderer.listen('document', 'keydown', (event: KeyboardEvent) => {\n      if (event.keyCode === ESCAPE) {\n        this._detachOverlay();\n      }\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n  exportAs: 'cdkConnectedOverlay'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n{type: Renderer2, },\n{type: ScrollDispatcher, },\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: Dir, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'origin': [{ type: Input },],\n'positions': [{ type: Input },],\n'offsetX': [{ type: Input },],\n'offsetY': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n'minWidth': [{ type: Input },],\n'minHeight': [{ type: Input },],\n'backdropClass': [{ type: Input },],\n'scrollStrategy': [{ type: Input },],\n'open': [{ type: Input },],\n'hasBackdrop': [{ type: Input },],\n'backdropClick': [{ type: Output },],\n'positionChange': [{ type: Output },],\n'attach': [{ type: Output },],\n'detach': [{ type: Output },],\n};\n}\n\nfunction ConnectedOverlayDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nConnectedOverlayDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nConnectedOverlayDirective.ctorParameters;\n/** @type {?} */\nConnectedOverlayDirective.propDecorators;\n/** @type {?} */\nConnectedOverlayDirective.prototype._overlayRef;\n/** @type {?} */\nConnectedOverlayDirective.prototype._templatePortal;\n/** @type {?} */\nConnectedOverlayDirective.prototype._hasBackdrop;\n/** @type {?} */\nConnectedOverlayDirective.prototype._backdropSubscription;\n/** @type {?} */\nConnectedOverlayDirective.prototype._positionSubscription;\n/** @type {?} */\nConnectedOverlayDirective.prototype._offsetX;\n/** @type {?} */\nConnectedOverlayDirective.prototype._offsetY;\n/** @type {?} */\nConnectedOverlayDirective.prototype._position;\n/** @type {?} */\nConnectedOverlayDirective.prototype._escapeListener;\n/**\n * Origin for the connected overlay.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.origin;\n/**\n * Registered connected position pairs.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.positions;\n/**\n * The width of the overlay panel.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.width;\n/**\n * The height of the overlay panel.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.height;\n/**\n * The min width of the overlay panel.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.minWidth;\n/**\n * The min height of the overlay panel.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.minHeight;\n/**\n * The custom class to be set on the backdrop element.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.backdropClass;\n/**\n * Strategy to be used when handling scroll events while the overlay is open.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.scrollStrategy;\n/**\n * Whether the overlay is open.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.open;\n/**\n * Event emitted when the backdrop is clicked.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.backdropClick;\n/**\n * Event emitted when the position has changed.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.positionChange;\n/**\n * Event emitted when the overlay has been attached.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.attach;\n/**\n * Event emitted when the overlay has been detached.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.detach;\n/** @type {?} */\nConnectedOverlayDirective.prototype._overlay;\n/** @type {?} */\nConnectedOverlayDirective.prototype._renderer;\n/** @type {?} */\nConnectedOverlayDirective.prototype._scrollDispatcher;\n/** @type {?} */\nConnectedOverlayDirective.prototype._dir;\n}\n\nexport class OverlayModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [PortalModule, ScrollDispatchModule],\n  exports: [ConnectedOverlayDirective, OverlayOrigin, ScrollDispatchModule],\n  declarations: [ConnectedOverlayDirective, OverlayOrigin],\n  providers: [OVERLAY_PROVIDERS],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction OverlayModule_tsickle_Closure_declarations() {\n/** @type {?} */\nOverlayModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOverlayModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ComponentFactoryResolver,\n  Injectable,\n  ApplicationRef,\n  Injector,\n  NgZone,\n  Provider,\n} from '@angular/core';\nimport {OverlayState} from './overlay-state';\nimport {DomPortalHost} from '../portal/dom-portal-host';\nimport {OverlayRef} from './overlay-ref';\nimport {OverlayPositionBuilder} from './position/overlay-position-builder';\nimport {VIEWPORT_RULER_PROVIDER} from './position/viewport-ruler';\nimport {OverlayContainer, OVERLAY_CONTAINER_PROVIDER} from './overlay-container';\n/**\n * Next overlay unique ID.\n */\nlet nextUniqueId = 0;\n/**\n * The default state for newly created overlays.\n */\nlet defaultState = new OverlayState();\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n * \n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\nexport class Overlay {\n/**\n * @param {?} _overlayContainer\n * @param {?} _componentFactoryResolver\n * @param {?} _positionBuilder\n * @param {?} _appRef\n * @param {?} _injector\n * @param {?} _ngZone\n */\nconstructor(private _overlayContainer: OverlayContainer,\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _positionBuilder: OverlayPositionBuilder,\nprivate _appRef: ApplicationRef,\nprivate _injector: Injector,\nprivate _ngZone: NgZone) {}\n/**\n * Creates an overlay.\n * @param {?=} state State to apply to the overlay.\n * @return {?} Reference to the created overlay.\n */\ncreate(state: OverlayState = defaultState): OverlayRef {\n    return this._createOverlayRef(this._createPaneElement(), state);\n  }\n/**\n * Returns a position builder that can be used, via fluent API,\n * to construct and configure a position strategy.\n * @return {?}\n */\nposition(): OverlayPositionBuilder {\n    return this._positionBuilder;\n  }\n/**\n * Creates the DOM element for an overlay and appends it to the overlay container.\n * @return {?} Newly-created pane element\n */\nprivate _createPaneElement(): HTMLElement {\n    let /** @type {?} */ pane = document.createElement('div');\n    pane.id = `cdk-overlay-${nextUniqueId++}`;\n    pane.classList.add('cdk-overlay-pane');\n\n    this._overlayContainer.getContainerElement().appendChild(pane);\n\n    return pane;\n  }\n/**\n * Create a DomPortalHost into which the overlay content can be loaded.\n * @param {?} pane The DOM element to turn into a portal host.\n * @return {?} A portal host for the given DOM element.\n */\nprivate _createPortalHost(pane: HTMLElement): DomPortalHost {\n    return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef, this._injector);\n  }\n/**\n * Creates an OverlayRef for an overlay in the given DOM element.\n * @param {?} pane DOM element for the overlay\n * @param {?} state\n * @return {?}\n */\nprivate _createOverlayRef(pane: HTMLElement, state: OverlayState): OverlayRef {\n    return new OverlayRef(this._createPortalHost(pane), pane, state, this._ngZone);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: OverlayContainer, },\n{type: ComponentFactoryResolver, },\n{type: OverlayPositionBuilder, },\n{type: ApplicationRef, },\n{type: Injector, },\n{type: NgZone, },\n];\n}\n\nfunction Overlay_tsickle_Closure_declarations() {\n/** @type {?} */\nOverlay.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOverlay.ctorParameters;\n/** @type {?} */\nOverlay.prototype._overlayContainer;\n/** @type {?} */\nOverlay.prototype._componentFactoryResolver;\n/** @type {?} */\nOverlay.prototype._positionBuilder;\n/** @type {?} */\nOverlay.prototype._appRef;\n/** @type {?} */\nOverlay.prototype._injector;\n/** @type {?} */\nOverlay.prototype._ngZone;\n}\n\n/**\n * Providers for Overlay and its related injectables.\n */\nexport const OVERLAY_PROVIDERS: Provider[] = [\n  Overlay,\n  OverlayPositionBuilder,\n  VIEWPORT_RULER_PROVIDER,\n  OVERLAY_CONTAINER_PROVIDER,\n];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable, Optional, SkipSelf} from '@angular/core';\n/**\n * The OverlayContainer is the container in which all overlays will load.\n * It should be provided in the root component to ensure it is properly shared.\n */\nexport class OverlayContainer {\n  protected _containerElement: HTMLElement;\nprivate _themeClass: string;\n/**\n * Base theme to be applied to all overlay-based components.\n * @return {?}\n */\nget themeClass(): string { return this._themeClass; }\n/**\n * @param {?} value\n * @return {?}\n */\nset themeClass(value: string) {\n    if (this._containerElement) {\n      this._containerElement.classList.remove(this._themeClass);\n\n      if (value) {\n        this._containerElement.classList.add(value);\n      }\n    }\n\n    this._themeClass = value;\n  }\n/**\n * This method returns the overlay container element.  It will lazily\n * create the element the first time  it is called to facilitate using\n * the container in non-browser environments.\n * @return {?} the container element\n */\ngetContainerElement(): HTMLElement {\n    if (!this._containerElement) { this._createContainer(); }\n    return this._containerElement;\n  }\n/**\n * Create the overlay container element, which is simply a div\n * with the 'cdk-overlay-container' class on the document body.\n * @return {?}\n */\nprotected _createContainer(): void {\n    let /** @type {?} */ container = document.createElement('div');\n    container.classList.add('cdk-overlay-container');\n\n    if (this._themeClass) {\n      container.classList.add(this._themeClass);\n    }\n\n    document.body.appendChild(container);\n    this._containerElement = container;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction OverlayContainer_tsickle_Closure_declarations() {\n/** @type {?} */\nOverlayContainer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOverlayContainer.ctorParameters;\n/** @type {?} */\nOverlayContainer.prototype._containerElement;\n/** @type {?} */\nOverlayContainer.prototype._themeClass;\n}\n\n/**\n * @param {?} parentContainer\n * @return {?}\n */\nexport function OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer: OverlayContainer) {\n  return parentContainer || new OverlayContainer();\n}\n\nexport const /** @type {?} */ OVERLAY_CONTAINER_PROVIDER = {\n  // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n  provide: OverlayContainer,\n  deps: [[new Optional(), new SkipSelf(), OverlayContainer]],\n  useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {ViewportRuler} from './viewport-ruler';\nimport {ConnectedPositionStrategy} from './connected-position-strategy';\nimport {ElementRef, Injectable} from '@angular/core';\nimport {GlobalPositionStrategy} from './global-position-strategy';\nimport {OverlayConnectionPosition, OriginConnectionPosition} from './connected-position';\n/**\n * Builder for overlay position strategy.\n */\nexport class OverlayPositionBuilder {\n/**\n * @param {?} _viewportRuler\n */\nconstructor(private _viewportRuler: ViewportRuler) { }\n/**\n * Creates a global position strategy.\n * @return {?}\n */\nglobal(): GlobalPositionStrategy {\n    return new GlobalPositionStrategy();\n  }\n/**\n * Creates a relative position strategy.\n * @param {?} elementRef\n * @param {?} originPos\n * @param {?} overlayPos\n * @return {?}\n */\nconnectedTo(\n      elementRef: ElementRef,\n      originPos: OriginConnectionPosition,\n      overlayPos: OverlayConnectionPosition): ConnectedPositionStrategy {\n    return new ConnectedPositionStrategy(elementRef, originPos, overlayPos, this._viewportRuler);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewportRuler, },\n];\n}\n\nfunction OverlayPositionBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nOverlayPositionBuilder.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOverlayPositionBuilder.ctorParameters;\n/** @type {?} */\nOverlayPositionBuilder.prototype._viewportRuler;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {PositionStrategy} from './position-strategy';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nexport class GlobalPositionStrategy implements PositionStrategy {\nprivate _cssPosition: string = 'static';\nprivate _topOffset: string = '';\nprivate _bottomOffset: string = '';\nprivate _leftOffset: string = '';\nprivate _rightOffset: string = '';\nprivate _alignItems: string = '';\nprivate _justifyContent: string = '';\nprivate _width: string = '';\nprivate _height: string = '';\nprivate _wrapper: HTMLElement;\n/**\n * Sets the top position of the overlay. Clears any previously set vertical position.\n * @param {?} value New top offset.\n * @return {?}\n */\ntop(value: string): this {\n    this._bottomOffset = '';\n    this._topOffset = value;\n    this._alignItems = 'flex-start';\n    return this;\n  }\n/**\n * Sets the left position of the overlay. Clears any previously set horizontal position.\n * @param {?} value New left offset.\n * @return {?}\n */\nleft(value: string): this {\n    this._rightOffset = '';\n    this._leftOffset = value;\n    this._justifyContent = 'flex-start';\n    return this;\n  }\n/**\n * Sets the bottom position of the overlay. Clears any previously set vertical position.\n * @param {?} value New bottom offset.\n * @return {?}\n */\nbottom(value: string): this {\n    this._topOffset = '';\n    this._bottomOffset = value;\n    this._alignItems = 'flex-end';\n    return this;\n  }\n/**\n * Sets the right position of the overlay. Clears any previously set horizontal position.\n * @param {?} value New right offset.\n * @return {?}\n */\nright(value: string): this {\n    this._leftOffset = '';\n    this._rightOffset = value;\n    this._justifyContent = 'flex-end';\n    return this;\n  }\n/**\n * Sets the overlay width and clears any previously set width.\n * @param {?} value New width for the overlay\n * @return {?}\n */\nwidth(value: string): this {\n    this._width = value;\n\n    // When the width is 100%, we should reset the `left` and the offset,\n    // in order to ensure that the element is flush against the viewport edge.\n    if (value === '100%') {\n      this.left('0px');\n    }\n\n    return this;\n  }\n/**\n * Sets the overlay height and clears any previously set height.\n * @param {?} value New height for the overlay\n * @return {?}\n */\nheight(value: string): this {\n    this._height = value;\n\n    // When the height is 100%, we should reset the `top` and the offset,\n    // in order to ensure that the element is flush against the viewport edge.\n    if (value === '100%') {\n      this.top('0px');\n    }\n\n    return this;\n  }\n/**\n * Centers the overlay horizontally with an optional offset.\n * Clears any previously set horizontal position.\n * \n * @param {?=} offset Overlay offset from the horizontal center.\n * @return {?}\n */\ncenterHorizontally(offset = ''): this {\n    this.left(offset);\n    this._justifyContent = 'center';\n    return this;\n  }\n/**\n * Centers the overlay vertically with an optional offset.\n * Clears any previously set vertical position.\n * \n * @param {?=} offset Overlay offset from the vertical center.\n * @return {?}\n */\ncenterVertically(offset = ''): this {\n    this.top(offset);\n    this._alignItems = 'center';\n    return this;\n  }\n/**\n * Apply the position to the element.\n * \\@docs-private \n * \n * @param {?} element Element to which to apply the CSS.\n * @return {?} Resolved when the styles have been applied.\n */\napply(element: HTMLElement): Promise<void> {\n    if (!this._wrapper) {\n      this._wrapper = document.createElement('div');\n      this._wrapper.classList.add('cdk-global-overlay-wrapper');\n      element.parentNode.insertBefore(this._wrapper, element);\n      this._wrapper.appendChild(element);\n    }\n\n    let /** @type {?} */ styles = element.style;\n    let /** @type {?} */ parentStyles = ( /** @type {?} */((element.parentNode as HTMLElement))).style;\n\n    styles.position = this._cssPosition;\n    styles.marginTop = this._topOffset;\n    styles.marginLeft = this._leftOffset;\n    styles.marginBottom = this._bottomOffset;\n    styles.marginRight = this._rightOffset;\n    styles.width = this._width;\n    styles.height = this._height;\n\n    parentStyles.justifyContent = this._justifyContent;\n    parentStyles.alignItems = this._alignItems;\n\n    return Promise.resolve(null);\n  }\n/**\n * Removes the wrapper element from the DOM.\n * @return {?}\n */\ndispose(): void {\n    if (this._wrapper && this._wrapper.parentNode) {\n      this._wrapper.parentNode.removeChild(this._wrapper);\n      this._wrapper = null;\n    }\n  }\n}\n\nfunction GlobalPositionStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nGlobalPositionStrategy.prototype._cssPosition;\n/** @type {?} */\nGlobalPositionStrategy.prototype._topOffset;\n/** @type {?} */\nGlobalPositionStrategy.prototype._bottomOffset;\n/** @type {?} */\nGlobalPositionStrategy.prototype._leftOffset;\n/** @type {?} */\nGlobalPositionStrategy.prototype._rightOffset;\n/** @type {?} */\nGlobalPositionStrategy.prototype._alignItems;\n/** @type {?} */\nGlobalPositionStrategy.prototype._justifyContent;\n/** @type {?} */\nGlobalPositionStrategy.prototype._width;\n/** @type {?} */\nGlobalPositionStrategy.prototype._height;\n/** @type {?} */\nGlobalPositionStrategy.prototype._wrapper;\n}\n\n","import {PositionStrategy} from './position-strategy';\nimport {ElementRef} from '@angular/core';\nimport {ViewportRuler} from './viewport-ruler';\nimport {\n  ConnectionPositionPair,\n  OriginConnectionPosition,\n  OverlayConnectionPosition,\n  ConnectedOverlayPositionChange, ScrollableViewProperties\n} from './connected-position';\nimport {Subject} from 'rxjs/Subject';\nimport {Observable} from 'rxjs/Observable';\nimport {Scrollable} from '../scroll/scrollable';\n\n/**\n * Container to hold the bounding positions of a particular element with respect to the viewport,\n * where top and bottom are the y-axis coordinates of the bounding rectangle and left and right are\n * the x-axis coordinates.\n */\ntype ElementBoundingPositions = {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n};\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nexport class ConnectedPositionStrategy implements PositionStrategy {\nprivate _dir = 'ltr';\n/**\n * The offset in pixels for the overlay connection point on the x-axis\n */\nprivate _offsetX: number = 0;\n/**\n * The offset in pixels for the overlay connection point on the y-axis\n */\nprivate _offsetY: number = 0;\n/**\n * The Scrollable containers used to check scrollable view properties on position change.\n */\nprivate scrollables: Scrollable[] = [];\n/**\n * Whether the we're dealing with an RTL context\n * @return {?}\n */\nget _isRtl() {\n    return this._dir === 'rtl';\n  }\n/**\n * Ordered list of preferred positions, from most to least desirable.\n */\n_preferredPositions: ConnectionPositionPair[] = [];\n/**\n * The origin element against which the overlay will be positioned.\n */\nprivate _origin: HTMLElement;\n/**\n * The overlay pane element.\n */\nprivate _pane: HTMLElement;\n/**\n * The last position to have been calculated as the best fit position.\n */\nprivate _lastConnectedPosition: ConnectionPositionPair;\n\n  _onPositionChange:\n      Subject<ConnectedOverlayPositionChange> = new Subject<ConnectedOverlayPositionChange>();\n/**\n * Emits an event when the connection point changes.\n * @return {?}\n */\nget onPositionChange(): Observable<ConnectedOverlayPositionChange> {\n    return this._onPositionChange.asObservable();\n  }\n/**\n * @param {?} _connectedTo\n * @param {?} _originPos\n * @param {?} _overlayPos\n * @param {?} _viewportRuler\n */\nconstructor(\nprivate _connectedTo: ElementRef,\nprivate _originPos: OriginConnectionPosition,\nprivate _overlayPos: OverlayConnectionPosition,\nprivate _viewportRuler: ViewportRuler) {\n    this._origin = this._connectedTo.nativeElement;\n    this.withFallbackPosition(_originPos, _overlayPos);\n  }\n/**\n * Ordered list of preferred positions, from most to least desirable.\n * @return {?}\n */\nget positions() {\n    return this._preferredPositions;\n  }\n/**\n * To be used to for any cleanup after the element gets destroyed.\n * @return {?}\n */\ndispose() { }\n/**\n * Updates the position of the overlay element, using whichever preferred position relative\n * to the origin fits on-screen.\n * \\@docs-private \n * \n * @param {?} element Element to which to apply the CSS styles.\n * @return {?} Resolves when the styles have been applied.\n */\napply(element: HTMLElement): Promise<void> {\n    // Cache the overlay pane element in case re-calculating position is necessary\n    this._pane = element;\n\n    // We need the bounding rects for the origin and the overlay to determine how to position\n    // the overlay relative to the origin.\n    const /** @type {?} */ originRect = this._origin.getBoundingClientRect();\n    const /** @type {?} */ overlayRect = element.getBoundingClientRect();\n\n    // We use the viewport rect to determine whether a position would go off-screen.\n    const /** @type {?} */ viewportRect = this._viewportRuler.getViewportRect();\n\n    // Fallback point if none of the fallbacks fit into the viewport.\n    let /** @type {?} */ fallbackPoint: OverlayPoint = null;\n    let /** @type {?} */ fallbackPosition: ConnectionPositionPair = null;\n\n    // We want to place the overlay in the first of the preferred positions such that the\n    // overlay fits on-screen.\n    for (let /** @type {?} */ pos of this._preferredPositions) {\n      // Get the (x, y) point of connection on the origin, and then use that to get the\n      // (top, left) coordinate for the overlay at `pos`.\n      let /** @type {?} */ originPoint = this._getOriginConnectionPoint(originRect, pos);\n      let /** @type {?} */ overlayPoint = this._getOverlayPoint(originPoint, overlayRect, viewportRect, pos);\n\n      // If the overlay in the calculated position fits on-screen, put it there and we're done.\n      if (overlayPoint.fitsInViewport) {\n        this._setElementPosition(element, overlayRect, overlayPoint, pos);\n\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastConnectedPosition = pos;\n\n        // Notify that the position has been changed along with its change properties.\n        const /** @type {?} */ scrollableViewProperties = this.getScrollableViewProperties(element);\n        const /** @type {?} */ positionChange = new ConnectedOverlayPositionChange(pos, scrollableViewProperties);\n        this._onPositionChange.next(positionChange);\n\n        return Promise.resolve(null);\n      } else if (!fallbackPoint || fallbackPoint.visibleArea < overlayPoint.visibleArea) {\n        fallbackPoint = overlayPoint;\n        fallbackPosition = pos;\n      }\n    }\n\n    // If none of the preferred positions were in the viewport, take the one\n    // with the largest visible area.\n    this._setElementPosition(element, overlayRect, fallbackPoint, fallbackPosition);\n\n    return Promise.resolve(null);\n  }\n/**\n * This re-aligns the overlay element with the trigger in its last calculated position,\n * even if a position higher in the \"preferred positions\" list would now fit. This\n * allows one to re-align the panel without changing the orientation of the panel.\n * @return {?}\n */\nrecalculateLastPosition(): void {\n    const /** @type {?} */ originRect = this._origin.getBoundingClientRect();\n    const /** @type {?} */ overlayRect = this._pane.getBoundingClientRect();\n    const /** @type {?} */ viewportRect = this._viewportRuler.getViewportRect();\n    const /** @type {?} */ lastPosition = this._lastConnectedPosition || this._preferredPositions[0];\n\n    let /** @type {?} */ originPoint = this._getOriginConnectionPoint(originRect, lastPosition);\n    let /** @type {?} */ overlayPoint = this._getOverlayPoint(originPoint, overlayRect, viewportRect, lastPosition);\n    this._setElementPosition(this._pane, overlayRect, overlayPoint, lastPosition);\n  }\n/**\n * Sets the list of Scrollable containers that host the origin element so that\n * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n * Scrollable must be an ancestor element of the strategy's origin element.\n * @param {?} scrollables\n * @return {?}\n */\nwithScrollableContainers(scrollables: Scrollable[]) {\n    this.scrollables = scrollables;\n  }\n/**\n * Adds a new preferred fallback position.\n * @param {?} originPos\n * @param {?} overlayPos\n * @return {?}\n */\nwithFallbackPosition(\n      originPos: OriginConnectionPosition,\n      overlayPos: OverlayConnectionPosition): this {\n    this._preferredPositions.push(new ConnectionPositionPair(originPos, overlayPos));\n    return this;\n  }\n/**\n * Sets the layout direction so the overlay's position can be adjusted to match.\n * @param {?} dir New layout direction.\n * @return {?}\n */\nwithDirection(dir: 'ltr' | 'rtl'): this {\n    this._dir = dir;\n    return this;\n  }\n/**\n * Sets an offset for the overlay's connection point on the x-axis\n * @param {?} offset New offset in the X axis.\n * @return {?}\n */\nwithOffsetX(offset: number): this {\n    this._offsetX = offset;\n    return this;\n  }\n/**\n * Sets an offset for the overlay's connection point on the y-axis\n * @param {?} offset New offset in the Y axis.\n * @return {?}\n */\nwithOffsetY(offset: number): this {\n    this._offsetY = offset;\n    return this;\n  }\n/**\n * Gets the horizontal (x) \"start\" dimension based on whether the overlay is in an RTL context.\n * @param {?} rect\n * @return {?}\n */\nprivate _getStartX(rect: ClientRect): number {\n    return this._isRtl ? rect.right : rect.left;\n  }\n/**\n * Gets the horizontal (x) \"end\" dimension based on whether the overlay is in an RTL context.\n * @param {?} rect\n * @return {?}\n */\nprivate _getEndX(rect: ClientRect): number {\n    return this._isRtl ? rect.left : rect.right;\n  }\n/**\n * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n * @param {?} originRect\n * @param {?} pos\n * @return {?}\n */\nprivate _getOriginConnectionPoint(originRect: ClientRect, pos: ConnectionPositionPair): Point {\n    const /** @type {?} */ originStartX = this._getStartX(originRect);\n    const /** @type {?} */ originEndX = this._getEndX(originRect);\n\n    let /** @type {?} */ x: number;\n    if (pos.originX == 'center') {\n      x = originStartX + (originRect.width / 2);\n    } else {\n      x = pos.originX == 'start' ? originStartX : originEndX;\n    }\n\n    let /** @type {?} */ y: number;\n    if (pos.originY == 'center') {\n      y = originRect.top + (originRect.height / 2);\n    } else {\n      y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n    }\n\n    return {x, y};\n  }\n/**\n * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n * origin point to which the overlay should be connected, as well as how much of the element\n * would be inside the viewport at that position.\n * @param {?} originPoint\n * @param {?} overlayRect\n * @param {?} viewportRect\n * @param {?} pos\n * @return {?}\n */\nprivate _getOverlayPoint(\n      originPoint: Point,\n      overlayRect: ClientRect,\n      viewportRect: ClientRect,\n      pos: ConnectionPositionPair): OverlayPoint {\n    // Calculate the (overlayStartX, overlayStartY), the start of the potential overlay position\n    // relative to the origin point.\n    let /** @type {?} */ overlayStartX: number;\n    if (pos.overlayX == 'center') {\n      overlayStartX = -overlayRect.width / 2;\n    } else if (pos.overlayX === 'start') {\n      overlayStartX = this._isRtl ? -overlayRect.width : 0;\n    } else {\n      overlayStartX = this._isRtl ? 0 : -overlayRect.width;\n    }\n\n    let /** @type {?} */ overlayStartY: number;\n    if (pos.overlayY == 'center') {\n      overlayStartY = -overlayRect.height / 2;\n    } else {\n      overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n    }\n\n    // The (x, y) coordinates of the overlay.\n    let /** @type {?} */ x = originPoint.x + overlayStartX + this._offsetX;\n    let /** @type {?} */ y = originPoint.y + overlayStartY + this._offsetY;\n\n    // How much the overlay would overflow at this position, on each side.\n    let /** @type {?} */ leftOverflow = 0 - x;\n    let /** @type {?} */ rightOverflow = (x + overlayRect.width) - viewportRect.width;\n    let /** @type {?} */ topOverflow = 0 - y;\n    let /** @type {?} */ bottomOverflow = (y + overlayRect.height) - viewportRect.height;\n\n    // Visible parts of the element on each axis.\n    let /** @type {?} */ visibleWidth = this._subtractOverflows(overlayRect.width, leftOverflow, rightOverflow);\n    let /** @type {?} */ visibleHeight = this._subtractOverflows(overlayRect.height, topOverflow, bottomOverflow);\n\n    // The area of the element that's within the viewport.\n    let /** @type {?} */ visibleArea = visibleWidth * visibleHeight;\n    let /** @type {?} */ fitsInViewport = (overlayRect.width * overlayRect.height) === visibleArea;\n\n    return {x, y, fitsInViewport, visibleArea};\n  }\n/**\n * Gets the view properties of the trigger and overlay, including whether they are clipped\n * or completely outside the view of any of the strategy's scrollables.\n * @param {?} overlay\n * @return {?}\n */\nprivate getScrollableViewProperties(overlay: HTMLElement): ScrollableViewProperties {\n    const /** @type {?} */ originBounds = this._getElementBounds(this._origin);\n    const /** @type {?} */ overlayBounds = this._getElementBounds(overlay);\n    const /** @type {?} */ scrollContainerBounds = this.scrollables.map((scrollable: Scrollable) => {\n      return this._getElementBounds(scrollable.getElementRef().nativeElement);\n    });\n\n    return {\n      isOriginClipped: this.isElementClipped(originBounds, scrollContainerBounds),\n      isOriginOutsideView: this.isElementOutsideView(originBounds, scrollContainerBounds),\n      isOverlayClipped: this.isElementClipped(overlayBounds, scrollContainerBounds),\n      isOverlayOutsideView: this.isElementOutsideView(overlayBounds, scrollContainerBounds),\n    };\n  }\n/**\n * Whether the element is completely out of the view of any of the containers.\n * @param {?} elementBounds\n * @param {?} containersBounds\n * @return {?}\n */\nprivate isElementOutsideView(\n      elementBounds: ElementBoundingPositions,\n      containersBounds: ElementBoundingPositions[]): boolean {\n    return containersBounds.some((containerBounds: ElementBoundingPositions) => {\n      const /** @type {?} */ outsideAbove = elementBounds.bottom < containerBounds.top;\n      const /** @type {?} */ outsideBelow = elementBounds.top > containerBounds.bottom;\n      const /** @type {?} */ outsideLeft = elementBounds.right < containerBounds.left;\n      const /** @type {?} */ outsideRight = elementBounds.left > containerBounds.right;\n\n      return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n  }\n/**\n * Whether the element is clipped by any of the containers.\n * @param {?} elementBounds\n * @param {?} containersBounds\n * @return {?}\n */\nprivate isElementClipped(\n      elementBounds: ElementBoundingPositions,\n      containersBounds: ElementBoundingPositions[]): boolean {\n    return containersBounds.some((containerBounds: ElementBoundingPositions) => {\n      const /** @type {?} */ clippedAbove = elementBounds.top < containerBounds.top;\n      const /** @type {?} */ clippedBelow = elementBounds.bottom > containerBounds.bottom;\n      const /** @type {?} */ clippedLeft = elementBounds.left < containerBounds.left;\n      const /** @type {?} */ clippedRight = elementBounds.right > containerBounds.right;\n\n      return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n  }\n/**\n * Physically positions the overlay element to the given coordinate.\n * @param {?} element\n * @param {?} overlayRect\n * @param {?} overlayPoint\n * @param {?} pos\n * @return {?}\n */\nprivate _setElementPosition(\n      element: HTMLElement,\n      overlayRect: ClientRect,\n      overlayPoint: Point,\n      pos: ConnectionPositionPair) {\n\n    // We want to set either `top` or `bottom` based on whether the overlay wants to appear above\n    // or below the origin and the direction in which the element will expand.\n    let /** @type {?} */ verticalStyleProperty = pos.overlayY === 'bottom' ? 'bottom' : 'top';\n\n    // When using `bottom`, we adjust the y position such that it is the distance\n    // from the bottom of the viewport rather than the top.\n    let /** @type {?} */ y = verticalStyleProperty === 'top' ?\n        overlayPoint.y :\n        document.documentElement.clientHeight - (overlayPoint.y + overlayRect.height);\n\n    // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n    // or \"after\" the origin, which determines the direction in which the element will expand.\n    // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n    // page is in RTL or LTR.\n    let /** @type {?} */ horizontalStyleProperty: string;\n    if (this._dir === 'rtl') {\n      horizontalStyleProperty = pos.overlayX === 'end' ? 'left' : 'right';\n    } else {\n      horizontalStyleProperty = pos.overlayX === 'end' ? 'right' : 'left';\n    }\n\n    // When we're setting `right`, we adjust the x position such that it is the distance\n    // from the right edge of the viewport rather than the left edge.\n    let /** @type {?} */ x = horizontalStyleProperty === 'left' ?\n      overlayPoint.x :\n      document.documentElement.clientWidth - (overlayPoint.x + overlayRect.width);\n\n\n    // Reset any existing styles. This is necessary in case the preferred position has\n    // changed since the last `apply`.\n    ['top', 'bottom', 'left', 'right'].forEach(p => element.style[p] = null);\n\n    element.style[verticalStyleProperty] = `${y}px`;\n    element.style[horizontalStyleProperty] = `${x}px`;\n  }\n/**\n * Returns the bounding positions of the provided element with respect to the viewport.\n * @param {?} element\n * @return {?}\n */\nprivate _getElementBounds(element: HTMLElement): ElementBoundingPositions {\n    const /** @type {?} */ boundingClientRect = element.getBoundingClientRect();\n    return {\n      top: boundingClientRect.top,\n      right: boundingClientRect.left + boundingClientRect.width,\n      bottom: boundingClientRect.top + boundingClientRect.height,\n      left: boundingClientRect.left\n    };\n  }\n/**\n * Subtracts the amount that an element is overflowing on an axis from it's length.\n * @param {?} length\n * @param {...?} overflows\n * @return {?}\n */\nprivate _subtractOverflows(length: number, ...overflows: number[]): number {\n    return overflows.reduce((currentValue: number, currentOverflow: number) => {\n      return currentValue - Math.max(currentOverflow, 0);\n    }, length);\n  }\n}\n\nfunction ConnectedPositionStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nConnectedPositionStrategy.prototype._dir;\n/**\n * The offset in pixels for the overlay connection point on the x-axis\n * @type {?}\n */\nConnectedPositionStrategy.prototype._offsetX;\n/**\n * The offset in pixels for the overlay connection point on the y-axis\n * @type {?}\n */\nConnectedPositionStrategy.prototype._offsetY;\n/**\n * The Scrollable containers used to check scrollable view properties on position change.\n * @type {?}\n */\nConnectedPositionStrategy.prototype.scrollables;\n/**\n * Ordered list of preferred positions, from most to least desirable.\n * @type {?}\n */\nConnectedPositionStrategy.prototype._preferredPositions;\n/**\n * The origin element against which the overlay will be positioned.\n * @type {?}\n */\nConnectedPositionStrategy.prototype._origin;\n/**\n * The overlay pane element.\n * @type {?}\n */\nConnectedPositionStrategy.prototype._pane;\n/**\n * The last position to have been calculated as the best fit position.\n * @type {?}\n */\nConnectedPositionStrategy.prototype._lastConnectedPosition;\n/** @type {?} */\nConnectedPositionStrategy.prototype._onPositionChange;\n/** @type {?} */\nConnectedPositionStrategy.prototype._connectedTo;\n/** @type {?} */\nConnectedPositionStrategy.prototype._originPos;\n/** @type {?} */\nConnectedPositionStrategy.prototype._overlayPos;\n/** @type {?} */\nConnectedPositionStrategy.prototype._viewportRuler;\n}\n\n\n/** A simple (x, y) coordinate. */\ninterface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * Expands the simple (x, y) coordinate by adding info about whether the\n * element would fit inside the viewport at that position, as well as\n * how much of the element would be visible.\n */\ninterface OverlayPoint extends Point {\n  visibleArea?: number;\n  fitsInViewport?: boolean;\n}\n","/** Horizontal dimension of a connection point on the perimeter of the origin or overlay element. */\n\nimport {Optional} from '@angular/core';\nexport type HorizontalConnectionPos = 'start' | 'center' | 'end';\n\n/** Vertical dimension of a connection point on the perimeter of the origin or overlay element. */\nexport type VerticalConnectionPos = 'top' | 'center' | 'bottom';\n\n\n/** A connection point on the origin element. */\nexport interface OriginConnectionPosition {\n  originX: HorizontalConnectionPos;\n  originY: VerticalConnectionPos;\n}\n\n/** A connection point on the overlay element. */\nexport interface OverlayConnectionPosition {\n  overlayX: HorizontalConnectionPos;\n  overlayY: VerticalConnectionPos;\n}\n/**\n * The points of the origin element and the overlay element to connect.\n */\nexport class ConnectionPositionPair {\n  originX: HorizontalConnectionPos;\n  originY: VerticalConnectionPos;\n  overlayX: HorizontalConnectionPos;\n  overlayY: VerticalConnectionPos;\n/**\n * @param {?} origin\n * @param {?} overlay\n */\nconstructor(origin: OriginConnectionPosition, overlay: OverlayConnectionPosition) {\n    this.originX = origin.originX;\n    this.originY = origin.originY;\n    this.overlayX = overlay.overlayX;\n    this.overlayY = overlay.overlayY;\n  }\n}\n\nfunction ConnectionPositionPair_tsickle_Closure_declarations() {\n/** @type {?} */\nConnectionPositionPair.prototype.originX;\n/** @type {?} */\nConnectionPositionPair.prototype.originY;\n/** @type {?} */\nConnectionPositionPair.prototype.overlayX;\n/** @type {?} */\nConnectionPositionPair.prototype.overlayY;\n}\n\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n * \n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n * \n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n * \n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n */\nexport class ScrollableViewProperties {\n  isOriginClipped: boolean;\n  isOriginOutsideView: boolean;\n  isOverlayClipped: boolean;\n  isOverlayOutsideView: boolean;\n}\n\nfunction ScrollableViewProperties_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollableViewProperties.prototype.isOriginClipped;\n/** @type {?} */\nScrollableViewProperties.prototype.isOriginOutsideView;\n/** @type {?} */\nScrollableViewProperties.prototype.isOverlayClipped;\n/** @type {?} */\nScrollableViewProperties.prototype.isOverlayOutsideView;\n}\n\n/**\n * The change event emitted by the strategy when a fallback position is used.\n */\nexport class ConnectedOverlayPositionChange {\n/**\n * @param {?} connectionPair\n * @param {?} scrollableViewProperties\n */\nconstructor(public connectionPair: ConnectionPositionPair,\npublic scrollableViewProperties: ScrollableViewProperties) {}\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ConnectionPositionPair, },\n{type: ScrollableViewProperties, decorators: [{ type: Optional }, ]},\n];\n}\n\nfunction ConnectedOverlayPositionChange_tsickle_Closure_declarations() {\n/**\n * @nocollapse\n * @type {?}\n */\nConnectedOverlayPositionChange.ctorParameters;\n/** @type {?} */\nConnectedOverlayPositionChange.prototype.connectionPair;\n/** @type {?} */\nConnectedOverlayPositionChange.prototype.scrollableViewProperties;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgZone} from '@angular/core';\nimport {PortalHost, Portal} from '../portal/portal';\nimport {OverlayState} from './overlay-state';\nimport {ScrollStrategy} from './scroll/scroll-strategy';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nexport class OverlayRef implements PortalHost {\nprivate _backdropElement: HTMLElement = null;\nprivate _backdropClick: Subject<any> = new Subject();\nprivate _attachments = new Subject<void>();\nprivate _detachments = new Subject<void>();\n/**\n * @param {?} _portalHost\n * @param {?} _pane\n * @param {?} _state\n * @param {?} _ngZone\n */\nconstructor(\nprivate _portalHost: PortalHost,\nprivate _pane: HTMLElement,\nprivate _state: OverlayState,\nprivate _ngZone: NgZone) {\n\n    this._state.scrollStrategy.attach(this);\n  }\n/**\n * The overlay's HTML element\n * @return {?}\n */\nget overlayElement(): HTMLElement {\n    return this._pane;\n  }\n/**\n * Attaches the overlay to a portal instance and adds the backdrop.\n * @param {?} portal Portal instance to which to attach the overlay.\n * @return {?} The portal attachment result.\n */\nattach(portal: Portal<any>): any {\n    let /** @type {?} */ attachResult = this._portalHost.attach(portal);\n\n    // Update the pane element with the given state configuration.\n    this._updateStackingOrder();\n    this.updateSize();\n    this.updateDirection();\n    this.updatePosition();\n    this._attachments.next();\n    this._state.scrollStrategy.enable();\n\n    // Enable pointer events for the overlay pane element.\n    this._togglePointerEvents(true);\n\n    if (this._state.hasBackdrop) {\n      this._attachBackdrop();\n    }\n\n    return attachResult;\n  }\n/**\n * Detaches an overlay from a portal.\n * @return {?} Resolves when the overlay has been detached.\n */\ndetach(): Promise<any> {\n    this.detachBackdrop();\n\n    // When the overlay is detached, the pane element should disable pointer events.\n    // This is necessary because otherwise the pane element will cover the page and disable\n    // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n    this._togglePointerEvents(false);\n    this._state.scrollStrategy.disable();\n    this._detachments.next();\n\n    return this._portalHost.detach();\n  }\n/**\n * Cleans up the overlay from the DOM.\n * @return {?}\n */\ndispose(): void {\n    if (this._state.positionStrategy) {\n      this._state.positionStrategy.dispose();\n    }\n\n    this.detachBackdrop();\n    this._portalHost.dispose();\n    this._state.scrollStrategy.disable();\n    this._detachments.next();\n    this._detachments.complete();\n    this._attachments.complete();\n  }\n/**\n * Checks whether the overlay has been attached.\n * @return {?}\n */\nhasAttached(): boolean {\n    return this._portalHost.hasAttached();\n  }\n/**\n * Returns an observable that emits when the backdrop has been clicked.\n * @return {?}\n */\nbackdropClick(): Observable<void> {\n    return this._backdropClick.asObservable();\n  }\n/**\n * Returns an observable that emits when the overlay has been attached.\n * @return {?}\n */\nattachments(): Observable<void> {\n    return this._attachments.asObservable();\n  }\n/**\n * Returns an observable that emits when the overlay has been detached.\n * @return {?}\n */\ndetachments(): Observable<void> {\n    return this._detachments.asObservable();\n  }\n/**\n * Gets the current state config of the overlay.\n * @return {?}\n */\ngetState(): OverlayState {\n    return this._state;\n  }\n/**\n * Updates the position of the overlay based on the position strategy.\n * @return {?}\n */\nupdatePosition() {\n    if (this._state.positionStrategy) {\n      this._state.positionStrategy.apply(this._pane);\n    }\n  }\n/**\n * Updates the text direction of the overlay panel.\n * @return {?}\n */\nprivate updateDirection() {\n    this._pane.setAttribute('dir', this._state.direction);\n  }\n/**\n * Updates the size of the overlay based on the overlay config.\n * @return {?}\n */\nupdateSize() {\n    if (this._state.width || this._state.width === 0) {\n      this._pane.style.width = formatCssUnit(this._state.width);\n    }\n\n    if (this._state.height || this._state.height === 0) {\n      this._pane.style.height = formatCssUnit(this._state.height);\n    }\n\n    if (this._state.minWidth || this._state.minWidth === 0) {\n      this._pane.style.minWidth = formatCssUnit(this._state.minWidth);\n    }\n\n    if (this._state.minHeight || this._state.minHeight === 0) {\n      this._pane.style.minHeight = formatCssUnit(this._state.minHeight);\n    }\n  }\n/**\n * Toggles the pointer events for the overlay pane element.\n * @param {?} enablePointer\n * @return {?}\n */\nprivate _togglePointerEvents(enablePointer: boolean) {\n    this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n  }\n/**\n * Attaches a backdrop for this overlay.\n * @return {?}\n */\nprivate _attachBackdrop() {\n    this._backdropElement = document.createElement('div');\n    this._backdropElement.classList.add('cdk-overlay-backdrop');\n    this._backdropElement.classList.add(this._state.backdropClass);\n\n    // Insert the backdrop before the pane in the DOM order,\n    // in order to handle stacked overlays properly.\n    this._pane.parentElement.insertBefore(this._backdropElement, this._pane);\n\n    // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n    // action desired when such a click occurs (usually closing the overlay).\n    this._backdropElement.addEventListener('click', () => this._backdropClick.next(null));\n\n    // Add class to fade-in the backdrop after one frame.\n    requestAnimationFrame(() => {\n      if (this._backdropElement) {\n        this._backdropElement.classList.add('cdk-overlay-backdrop-showing');\n      }\n    });\n  }\n/**\n * Updates the stacking order of the element, moving it to the top if necessary.\n * This is required in cases where one overlay was detached, while another one,\n * that should be behind it, was destroyed. The next time both of them are opened,\n * the stacking will be wrong, because the detached element's pane will still be\n * in its original DOM position.\n * @return {?}\n */\nprivate _updateStackingOrder() {\n    if (this._pane.nextSibling) {\n      this._pane.parentNode.appendChild(this._pane);\n    }\n  }\n/**\n * Detaches the backdrop (if any) associated with the overlay.\n * @return {?}\n */\ndetachBackdrop(): void {\n    let /** @type {?} */ backdropToDetach = this._backdropElement;\n\n    if (backdropToDetach) {\n      let /** @type {?} */ finishDetach = () => {\n        // It may not be attached to anything in certain cases (e.g. unit tests).\n        if (backdropToDetach && backdropToDetach.parentNode) {\n          backdropToDetach.parentNode.removeChild(backdropToDetach);\n        }\n\n        // It is possible that a new portal has been attached to this overlay since we started\n        // removing the backdrop. If that is the case, only clear the backdrop reference if it\n        // is still the same instance that we started to remove.\n        if (this._backdropElement == backdropToDetach) {\n          this._backdropElement = null;\n        }\n      };\n\n      backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n      backdropToDetach.classList.remove(this._state.backdropClass);\n      backdropToDetach.addEventListener('transitionend', finishDetach);\n\n      // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n      // In this case we make it unclickable and we try to remove it after a delay.\n      backdropToDetach.style.pointerEvents = 'none';\n\n      // Run this outside the Angular zone because there's nothing that Angular cares about.\n      // If it were to run inside the Angular zone, every test that used Overlay would have to be\n      // either async or fakeAsync.\n      this._ngZone.runOutsideAngular(() => {\n        setTimeout(finishDetach, 500);\n      });\n    }\n  }\n}\n\nfunction OverlayRef_tsickle_Closure_declarations() {\n/** @type {?} */\nOverlayRef.prototype._backdropElement;\n/** @type {?} */\nOverlayRef.prototype._backdropClick;\n/** @type {?} */\nOverlayRef.prototype._attachments;\n/** @type {?} */\nOverlayRef.prototype._detachments;\n/** @type {?} */\nOverlayRef.prototype._portalHost;\n/** @type {?} */\nOverlayRef.prototype._pane;\n/** @type {?} */\nOverlayRef.prototype._state;\n/** @type {?} */\nOverlayRef.prototype._ngZone;\n}\n\n/**\n * @param {?} value\n * @return {?}\n */\nfunction formatCssUnit(value: number | string) {\n  return typeof value === 'string' ? /** @type {?} */(( value as string)) : `${value}px`;\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  ApplicationRef,\n  Injector,\n} from '@angular/core';\nimport {BasePortalHost, ComponentPortal, TemplatePortal} from './portal';\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n * \n * This is the only part of the portal core that directly touches the DOM.\n */\nexport class DomPortalHost extends BasePortalHost {\n/**\n * @param {?} _hostDomElement\n * @param {?} _componentFactoryResolver\n * @param {?} _appRef\n * @param {?} _defaultInjector\n */\nconstructor(\nprivate _hostDomElement: Element,\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _appRef: ApplicationRef,\nprivate _defaultInjector: Injector) {\n    super();\n  }\n/**\n * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n * @template T\n * @param {?} portal Portal to be attached\n * @return {?}\n */\nattachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    let /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n    let /** @type {?} */ componentRef: ComponentRef<T>;\n\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the view to the application.\n    if (portal.viewContainerRef) {\n      componentRef = portal.viewContainerRef.createComponent(\n          componentFactory,\n          portal.viewContainerRef.length,\n          portal.injector || portal.viewContainerRef.parentInjector);\n\n      this.setDisposeFn(() => componentRef.destroy());\n    } else {\n      componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n      this._appRef.attachView(componentRef.hostView);\n      this.setDisposeFn(() => {\n        this._appRef.detachView(componentRef.hostView);\n        componentRef.destroy();\n      });\n    }\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n\n    return componentRef;\n  }\n/**\n * Attaches a template portal to the DOM as an embedded view.\n * @param {?} portal Portal to be attached.\n * @return {?}\n */\nattachTemplatePortal(portal: TemplatePortal): Map<string, any> {\n    let /** @type {?} */ viewContainer = portal.viewContainerRef;\n    let /** @type {?} */ viewRef = viewContainer.createEmbeddedView(portal.templateRef);\n    viewRef.detectChanges();\n\n    // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n    // But for the DomPortalHost the view can be added everywhere in the DOM (e.g Overlay Container)\n    // To move the view to the specified host element. We just re-append the existing root nodes.\n    viewRef.rootNodes.forEach(rootNode => this._hostDomElement.appendChild(rootNode));\n\n    this.setDisposeFn((() => {\n      let /** @type {?} */ index = viewContainer.indexOf(viewRef);\n      if (index !== -1) {\n        viewContainer.remove(index);\n      }\n    }));\n\n    // TODO(jelbourn): Return locals from view.\n    return new Map<string, any>();\n  }\n/**\n * Clears out a portal from the DOM.\n * @return {?}\n */\ndispose(): void {\n    super.dispose();\n    if (this._hostDomElement.parentNode != null) {\n      this._hostDomElement.parentNode.removeChild(this._hostDomElement);\n    }\n  }\n/**\n * Gets the root HTMLElement for an instantiated component.\n * @param {?} componentRef\n * @return {?}\n */\nprivate _getComponentRootNode(componentRef: ComponentRef<any>): HTMLElement {\n    return /** @type {?} */(( ( /** @type {?} */((componentRef.hostView as EmbeddedViewRef<any>))).rootNodes[0] as HTMLElement));\n  }\n}\n\nfunction DomPortalHost_tsickle_Closure_declarations() {\n/** @type {?} */\nDomPortalHost.prototype._hostDomElement;\n/** @type {?} */\nDomPortalHost.prototype._componentFactoryResolver;\n/** @type {?} */\nDomPortalHost.prototype._appRef;\n/** @type {?} */\nDomPortalHost.prototype._defaultInjector;\n}\n\n","import {PositionStrategy} from './position/position-strategy';\nimport {LayoutDirection} from '../rtl/dir';\nimport {ScrollStrategy} from './scroll/scroll-strategy';\nimport {NoopScrollStrategy} from './scroll/noop-scroll-strategy';\n/**\n * OverlayState is a bag of values for either the initial configuration or current state of an\n * overlay.\n */\nexport class OverlayState {\n/**\n * Strategy with which to position the overlay.\n */\npositionStrategy: PositionStrategy;\n/**\n * Strategy to be used when handling scroll events while the overlay is open.\n */\nscrollStrategy: ScrollStrategy = new NoopScrollStrategy();\n/**\n * Whether the overlay has a backdrop.\n */\nhasBackdrop: boolean = false;\n/**\n * Custom class to add to the backdrop\n */\nbackdropClass: string = 'cdk-overlay-dark-backdrop';\n/**\n * The width of the overlay panel. If a number is provided, pixel units are assumed.\n */\nwidth: number | string;\n/**\n * The height of the overlay panel. If a number is provided, pixel units are assumed.\n */\nheight: number | string;\n/**\n * The min-width of the overlay panel. If a number is provided, pixel units are assumed.\n */\nminWidth: number | string;\n/**\n * The min-height of the overlay panel. If a number is provided, pixel units are assumed.\n */\nminHeight: number | string;\n/**\n * The direction of the text in the overlay panel.\n */\ndirection: LayoutDirection = 'ltr';\n\n  // TODO(jelbourn): configuration still to add\n  // - focus trap\n  // - disable pointer events\n  // - z-index\n}\n\nfunction OverlayState_tsickle_Closure_declarations() {\n/**\n * Strategy with which to position the overlay.\n * @type {?}\n */\nOverlayState.prototype.positionStrategy;\n/**\n * Strategy to be used when handling scroll events while the overlay is open.\n * @type {?}\n */\nOverlayState.prototype.scrollStrategy;\n/**\n * Whether the overlay has a backdrop.\n * @type {?}\n */\nOverlayState.prototype.hasBackdrop;\n/**\n * Custom class to add to the backdrop\n * @type {?}\n */\nOverlayState.prototype.backdropClass;\n/**\n * The width of the overlay panel. If a number is provided, pixel units are assumed.\n * @type {?}\n */\nOverlayState.prototype.width;\n/**\n * The height of the overlay panel. If a number is provided, pixel units are assumed.\n * @type {?}\n */\nOverlayState.prototype.height;\n/**\n * The min-width of the overlay panel. If a number is provided, pixel units are assumed.\n * @type {?}\n */\nOverlayState.prototype.minWidth;\n/**\n * The min-height of the overlay panel. If a number is provided, pixel units are assumed.\n * @type {?}\n */\nOverlayState.prototype.minHeight;\n/**\n * The direction of the text in the overlay panel.\n * @type {?}\n */\nOverlayState.prototype.direction;\n}\n\n","import {\n    NgModule,\n    ComponentRef,\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    OnDestroy,\n    Input,\n} from '@angular/core';\nimport {Portal, TemplatePortal, ComponentPortal, BasePortalHost} from './portal';\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n * \n * Usage:\n * <ng-template portal #greeting>\n *   <p> Hello {{name}} </p>\n * </ng-template>\n */\nexport class TemplatePortalDirective extends TemplatePortal {\n/**\n * @param {?} templateRef\n * @param {?} viewContainerRef\n */\nconstructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdk-portal], [cdkPortal], [portal]',\n  exportAs: 'cdkPortal',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\n}\n\nfunction TemplatePortalDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplatePortalDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTemplatePortalDirective.ctorParameters;\n}\n\n/**\n * Directive version of a PortalHost. Because the directive *is* a PortalHost, portals can be\n * directly attached to it, enabling declarative use.\n * \n * Usage:\n * <ng-template [cdkPortalHost]=\"greeting\"></ng-template>\n */\nexport class PortalHostDirective extends BasePortalHost implements OnDestroy {\n/**\n * The attached portal.\n */\nprivate _portal: Portal<any>;\n/**\n * @param {?} _componentFactoryResolver\n * @param {?} _viewContainerRef\n */\nconstructor(\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedPortal() { return this.portal; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _deprecatedPortal(v) { this.portal = v; }\n/**\n * Portal associated with the Portal host.\n * @return {?}\n */\nget portal(): Portal<any> {\n    return this._portal;\n  }\n/**\n * @param {?} portal\n * @return {?}\n */\nset portal(portal: Portal<any>) {\n    if (this.hasAttached()) {\n      super.detach();\n    }\n\n    if (portal) {\n      super.attach(portal);\n    }\n\n    this._portal = portal;\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    super.dispose();\n    this._portal = null;\n  }\n/**\n * Attach the given ComponentPortal to this PortalHost using the ComponentFactoryResolver.\n * \n * @template T\n * @param {?} portal Portal to be attached to the portal host.\n * @return {?}\n */\nattachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    portal.setAttachedHost(this);\n\n    // If the portal specifies an origin, use that as the logical location of the component\n    // in the application tree. Otherwise use the location of this PortalHost.\n    let /** @type {?} */ viewContainerRef = portal.viewContainerRef != null ?\n        portal.viewContainerRef :\n        this._viewContainerRef;\n\n    let /** @type {?} */ componentFactory =\n        this._componentFactoryResolver.resolveComponentFactory(portal.component);\n    let /** @type {?} */ ref = viewContainerRef.createComponent(\n        componentFactory, viewContainerRef.length,\n        portal.injector || viewContainerRef.parentInjector);\n\n    super.setDisposeFn(() => ref.destroy());\n    this._portal = portal;\n\n    return ref;\n  }\n/**\n * Attach the given TemplatePortal to this PortlHost as an embedded View.\n * @param {?} portal Portal to be attached.\n * @return {?}\n */\nattachTemplatePortal(portal: TemplatePortal): Map<string, any> {\n    portal.setAttachedHost(this);\n\n    this._viewContainerRef.createEmbeddedView(portal.templateRef);\n    super.setDisposeFn(() => this._viewContainerRef.clear());\n\n    this._portal = portal;\n\n    // TODO(jelbourn): return locals from view\n    return new Map<string, any>();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdkPortalHost], [portalHost]',\n  inputs: ['portal: cdkPortalHost']\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_deprecatedPortal': [{ type: Input, args: ['portalHost', ] },],\n};\n}\n\nfunction PortalHostDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPortalHostDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPortalHostDirective.ctorParameters;\n/** @type {?} */\nPortalHostDirective.propDecorators;\n/**\n * The attached portal.\n * @type {?}\n */\nPortalHostDirective.prototype._portal;\n/** @type {?} */\nPortalHostDirective.prototype._componentFactoryResolver;\n/** @type {?} */\nPortalHostDirective.prototype._viewContainerRef;\n}\n\nexport class PortalModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [TemplatePortalDirective, PortalHostDirective],\n  declarations: [TemplatePortalDirective, PortalHostDirective],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PortalModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPortalModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPortalModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    TemplateRef,\n    ViewContainerRef,\n    ElementRef,\n    ComponentRef,\n    Injector\n} from '@angular/core';\nimport {\n    throwNullPortalHostError,\n    throwPortalAlreadyAttachedError,\n    throwNoPortalAttachedError,\n    throwNullPortalError,\n    throwPortalHostAlreadyDisposedError,\n    throwUnknownPortalTypeError\n} from './portal-errors';\nimport {ComponentType} from '../overlay/generic-component-type';\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalHost`.\n * @abstract\n */\nexport abstract class Portal<T> {\nprivate _attachedHost: PortalHost;\n/**\n * Attach this portal to a host.\n * @param {?} host\n * @return {?}\n */\nattach(host: PortalHost): T {\n    if (host == null) {\n      throwNullPortalHostError();\n    }\n\n    if (host.hasAttached()) {\n      throwPortalAlreadyAttachedError();\n    }\n\n    this._attachedHost = host;\n    return /** @type {?} */(( <T> host.attach(this)));\n  }\n/**\n * Detach this portal from its host\n * @return {?}\n */\ndetach(): void {\n    let /** @type {?} */ host = this._attachedHost;\n    if (host == null) {\n      throwNoPortalAttachedError();\n    }\n\n    this._attachedHost = null;\n    return host.detach();\n  }\n/**\n * Whether this portal is attached to a host.\n * @return {?}\n */\nget isAttached(): boolean {\n    return this._attachedHost != null;\n  }\n/**\n * Sets the PortalHost reference without performing `attach()`. This is used directly by\n * the PortalHost when it is performing an `attach()` or `detach()`.\n * @param {?} host\n * @return {?}\n */\nsetAttachedHost(host: PortalHost) {\n    this._attachedHost = host;\n  }\n}\n\nfunction Portal_tsickle_Closure_declarations() {\n/** @type {?} */\nPortal.prototype._attachedHost;\n}\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nexport class ComponentPortal<T> extends Portal<ComponentRef<T>> {\n/**\n * The type of the component that will be instantiated for attachment.\n */\ncomponent: ComponentType<T>;\n/**\n * [Optional] Where the attached component should live in Angular's *logical* component tree.\n * This is different from where the component *renders*, which is determined by the PortalHost.\n * The origin is necessary when the host is outside of the Angular application context.\n */\nviewContainerRef: ViewContainerRef;\n/**\n * [Optional] Injector used for the instantiation of the component.\n */\ninjector: Injector;\n/**\n * @param {?} component\n * @param {?=} viewContainerRef\n * @param {?=} injector\n */\nconstructor(\n      component: ComponentType<T>,\n      viewContainerRef: ViewContainerRef = null,\n      injector: Injector = null) {\n    super();\n    this.component = component;\n    this.viewContainerRef = viewContainerRef;\n    this.injector = injector;\n  }\n}\n\nfunction ComponentPortal_tsickle_Closure_declarations() {\n/**\n * The type of the component that will be instantiated for attachment.\n * @type {?}\n */\nComponentPortal.prototype.component;\n/**\n * [Optional] Where the attached component should live in Angular's *logical* component tree.\n * This is different from where the component *renders*, which is determined by the PortalHost.\n * The origin is necessary when the host is outside of the Angular application context.\n * @type {?}\n */\nComponentPortal.prototype.viewContainerRef;\n/**\n * [Optional] Injector used for the instantiation of the component.\n * @type {?}\n */\nComponentPortal.prototype.injector;\n}\n\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nexport class TemplatePortal extends Portal<Map<string, any>> {\n/**\n * The embedded template that will be used to instantiate an embedded View in the host.\n */\ntemplateRef: TemplateRef<any>;\n/**\n * Reference to the ViewContainer into which the template will be stamped out.\n */\nviewContainerRef: ViewContainerRef;\n/**\n * Additional locals for the instantiated embedded view.\n * These locals can be seen as \"exports\" for the template, such as how ngFor has\n * index / event / odd.\n * See https://angular.io/docs/ts/latest/api/core/EmbeddedViewRef-class.html\n */\nlocals: Map<string, any> = new Map<string, any>();\n/**\n * @param {?} template\n * @param {?} viewContainerRef\n */\nconstructor(template: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super();\n    this.templateRef = template;\n    this.viewContainerRef = viewContainerRef;\n  }\n/**\n * @return {?}\n */\nget origin(): ElementRef {\n    return this.templateRef.elementRef;\n  }\n/**\n * @param {?} host\n * @param {?=} locals\n * @return {?}\n */\nattach(host: PortalHost, locals?: Map<string, any>): Map<string, any> {\n    this.locals = locals == null ? new Map<string, any>() : locals;\n    return super.attach(host);\n  }\n/**\n * @return {?}\n */\ndetach(): void {\n    this.locals = new Map<string, any>();\n    return super.detach();\n  }\n}\n\nfunction TemplatePortal_tsickle_Closure_declarations() {\n/**\n * The embedded template that will be used to instantiate an embedded View in the host.\n * @type {?}\n */\nTemplatePortal.prototype.templateRef;\n/**\n * Reference to the ViewContainer into which the template will be stamped out.\n * @type {?}\n */\nTemplatePortal.prototype.viewContainerRef;\n/**\n * Additional locals for the instantiated embedded view.\n * These locals can be seen as \"exports\" for the template, such as how ngFor has\n * index / event / odd.\n * See https://angular.io/docs/ts/latest/api/core/EmbeddedViewRef-class.html\n * @type {?}\n */\nTemplatePortal.prototype.locals;\n}\n\n\n\n/**\n * A `PortalHost` is an space that can contain a single `Portal`.\n */\nexport interface PortalHost {\n  attach(portal: Portal<any>): any;\n\n  detach(): any;\n\n  dispose(): void;\n\n  hasAttached(): boolean;\n}\n/**\n * Partial implementation of PortalHost that only deals with attaching either a\n * ComponentPortal or a TemplatePortal.\n * @abstract\n */\nexport abstract class BasePortalHost implements PortalHost {\n/**\n * The portal currently attached to the host.\n */\nprivate _attachedPortal: Portal<any>;\n/**\n * A function that will permanently dispose this host.\n */\nprivate _disposeFn: () => void;\n/**\n * Whether this host has already been permanently disposed.\n */\nprivate _isDisposed: boolean = false;\n/**\n * Whether this host has an attached portal.\n * @return {?}\n */\nhasAttached(): boolean {\n    return !!this._attachedPortal;\n  }\n/**\n * @param {?} portal\n * @return {?}\n */\nattach(portal: Portal<any>): any {\n    if (!portal) {\n      throwNullPortalError();\n    }\n\n    if (this.hasAttached()) {\n      throwPortalAlreadyAttachedError();\n    }\n\n    if (this._isDisposed) {\n      throwPortalHostAlreadyDisposedError();\n    }\n\n    if (portal instanceof ComponentPortal) {\n      this._attachedPortal = portal;\n      return this.attachComponentPortal(portal);\n    } else if (portal instanceof TemplatePortal) {\n      this._attachedPortal = portal;\n      return this.attachTemplatePortal(portal);\n    }\n\n    throwUnknownPortalTypeError();\n  }\n/**\n * @abstract\n * @template T\n * @param {?} portal\n * @return {?}\n */\nattachComponentPortal<T>(portal: ComponentPortal<T>) {}\n/**\n * @abstract\n * @param {?} portal\n * @return {?}\n */\nattachTemplatePortal(portal: TemplatePortal) {}\n/**\n * @return {?}\n */\ndetach(): void {\n    if (this._attachedPortal) {\n      this._attachedPortal.setAttachedHost(null);\n      this._attachedPortal = null;\n    }\n\n    this._invokeDisposeFn();\n  }\n/**\n * @return {?}\n */\ndispose() {\n    if (this.hasAttached()) {\n      this.detach();\n    }\n\n    this._invokeDisposeFn();\n    this._isDisposed = true;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nsetDisposeFn(fn: () => void) {\n    this._disposeFn = fn;\n  }\n/**\n * @return {?}\n */\nprivate _invokeDisposeFn() {\n    if (this._disposeFn) {\n      this._disposeFn();\n      this._disposeFn = null;\n    }\n  }\n}\n\nfunction BasePortalHost_tsickle_Closure_declarations() {\n/**\n * The portal currently attached to the host.\n * @type {?}\n */\nBasePortalHost.prototype._attachedPortal;\n/**\n * A function that will permanently dispose this host.\n * @type {?}\n */\nBasePortalHost.prototype._disposeFn;\n/**\n * Whether this host has already been permanently disposed.\n * @type {?}\n */\nBasePortalHost.prototype._isDisposed;\n}\n\n","\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * \\@docs-private\n * @return {?}\n */\nexport function throwNullPortalError() {\n  throw new Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * \\@docs-private\n * @return {?}\n */\nexport function throwPortalAlreadyAttachedError() {\n  throw new Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * \\@docs-private\n * @return {?}\n */\nexport function throwPortalHostAlreadyDisposedError() {\n  throw new Error('This PortalHost has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * \\@docs-private\n * @return {?}\n */\nexport function throwUnknownPortalTypeError() {\n  throw new Error('Attempting to attach an unknown Portal type. BasePortalHost accepts either' +\n                  'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * \\@docs-private\n * @return {?}\n */\nexport function throwNullPortalHostError() {\n  throw new Error('Attempting to attach a portal to a null PortalHost');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * \\@docs-privatew\n * @return {?}\n */\nexport function throwNoPortalAttachedError() {\n  throw new Error('Attempting to detach a portal that is not attached to a host');\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  NgModule,\n  ViewEncapsulation,\n  Inject,\n  Optional,\n} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ENTER, SPACE} from '../keyboard/keycodes';\nimport {coerceBooleanProperty} from '../coercion/boolean-property';\nimport {MdRippleModule} from '../ripple/index';\nimport {MdSelectionModule} from '../selection/index';\nimport {MATERIAL_COMPATIBILITY_MODE} from '../../core/compatibility/compatibility';\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MdOption when selected or deselected.\n */\nexport class MdOptionSelectionChange {\n/**\n * @param {?} source\n * @param {?=} isUserInput\n */\nconstructor(public source: MdOption,\npublic isUserInput = false) { }\n}\n\nfunction MdOptionSelectionChange_tsickle_Closure_declarations() {\n/** @type {?} */\nMdOptionSelectionChange.prototype.source;\n/** @type {?} */\nMdOptionSelectionChange.prototype.isUserInput;\n}\n\n/**\n * Single option inside of a `<md-select>` element.\n */\nexport class MdOption {\nprivate _selected: boolean = false;\nprivate _active: boolean = false;\n/**\n * Whether the option is disabled.\n */\nprivate _disabled: boolean = false;\nprivate _id: string = `md-option-${_uniqueIdCounter++}`;\n/**\n * Whether the wrapping component is in multiple selection mode.\n */\nmultiple: boolean = false;\n/**\n * The unique ID of the option.\n * @return {?}\n */\nget id() { return this._id; }\n/**\n * Whether or not the option is currently selected.\n * @return {?}\n */\nget selected(): boolean { return this._selected; }\n/**\n * The form value of the option.\n */\nvalue: any;\n/**\n * Whether the option is disabled.\n * @return {?}\n */\nget disabled() { return this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n/**\n * Event emitted when the option is selected or deselected.\n */\nonSelectionChange = new EventEmitter<MdOptionSelectionChange>();\n/**\n * @param {?} _element\n * @param {?} _isCompatibilityMode\n */\nconstructor(\nprivate _element: ElementRef,\npublic _isCompatibilityMode: boolean) {}\n/**\n * Whether or not the option is currently active and ready to be selected.\n * An active option displays styles as if it is focused, but the\n * focus is actually retained somewhere else. This comes in handy\n * for components like autocomplete where focus must remain on the input.\n * @return {?}\n */\nget active(): boolean {\n    return this._active;\n  }\n/**\n * The displayed value of the option. It is necessary to show the selected option in the\n * select's trigger.\n * @return {?}\n */\nget viewValue(): string {\n    // TODO(kara): Add input property alternative for node envs.\n    return this._getHostElement().textContent.trim();\n  }\n/**\n * Selects the option.\n * @return {?}\n */\nselect(): void {\n    this._selected = true;\n    this._emitSelectionChangeEvent();\n  }\n/**\n * Deselects the option.\n * @return {?}\n */\ndeselect(): void {\n    this._selected = false;\n    this._emitSelectionChangeEvent();\n  }\n/**\n * Sets focus onto this option.\n * @return {?}\n */\nfocus(): void {\n    this._getHostElement().focus();\n  }\n/**\n * This method sets display styles on the option to make it appear\n * active. This is used by the ActiveDescendantKeyManager so key\n * events will display the proper options as active on arrow key events.\n * @return {?}\n */\nsetActiveStyles(): void {\n    this._active = true;\n  }\n/**\n * This method removes display styles on the option that made it appear\n * active. This is used by the ActiveDescendantKeyManager so key\n * events will display the proper options as active on arrow key events.\n * @return {?}\n */\nsetInactiveStyles(): void {\n    this._active = false;\n  }\n/**\n * Ensures the option is selected when activated from the keyboard.\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === ENTER || event.keyCode === SPACE) {\n      this._selectViaInteraction();\n    }\n  }\n/**\n * Selects the option while indicating the selection came from the user. Used to\n * determine if the select's view -> model callback should be invoked.\n * @return {?}\n */\n_selectViaInteraction(): void {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n/**\n * Returns the correct tabindex for the option depending on disabled state.\n * @return {?}\n */\n_getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n/**\n * Fetches the host DOM element.\n * @return {?}\n */\n_getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n/**\n * Emits the selection change event.\n * @param {?=} isUserInput\n * @return {?}\n */\nprivate _emitSelectionChangeEvent(isUserInput = false): void {\n    this.onSelectionChange.emit(new MdOptionSelectionChange(this, isUserInput));\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-option, mat-option',\n  host: {\n    'role': 'option',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[class.mat-selected]': 'selected',\n    '[class.mat-option-multiple]': 'multiple',\n    '[class.mat-active]': 'active',\n    '[id]': 'id',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[class.mat-option-disabled]': 'disabled',\n    '(click)': '_selectViaInteraction()',\n    '(keydown)': '_handleKeydown($event)',\n    '[class.mat-option]': 'true',\n  },\n  templateUrl: 'option.html',\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_COMPATIBILITY_MODE, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'disabled': [{ type: Input },],\n'onSelectionChange': [{ type: Output },],\n};\n}\n\nfunction MdOption_tsickle_Closure_declarations() {\n/** @type {?} */\nMdOption.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdOption.ctorParameters;\n/** @type {?} */\nMdOption.propDecorators;\n/** @type {?} */\nMdOption.prototype._selected;\n/** @type {?} */\nMdOption.prototype._active;\n/**\n * Whether the option is disabled.\n * @type {?}\n */\nMdOption.prototype._disabled;\n/** @type {?} */\nMdOption.prototype._id;\n/**\n * Whether the wrapping component is in multiple selection mode.\n * @type {?}\n */\nMdOption.prototype.multiple;\n/**\n * The form value of the option.\n * @type {?}\n */\nMdOption.prototype.value;\n/**\n * Event emitted when the option is selected or deselected.\n * @type {?}\n */\nMdOption.prototype.onSelectionChange;\n/** @type {?} */\nMdOption.prototype._element;\n/** @type {?} */\nMdOption.prototype._isCompatibilityMode;\n}\n\nexport class MdOptionModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdRippleModule, CommonModule, MdSelectionModule],\n  exports: [MdOption],\n  declarations: [MdOption]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdOptionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdOptionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdOptionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule} from '@angular/core';\nimport {MdPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\nexport class MdSelectionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [MdPseudoCheckbox],\n  declarations: [MdPseudoCheckbox]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdSelectionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSelectionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSelectionModule.ctorParameters;\n}\n\n\n\nexport {MdPseudoCheckboxState,MdPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  ViewEncapsulation,\n  Input,\n  ElementRef,\n  Renderer2,\n} from '@angular/core';\n\nexport type MdPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * \n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with <md-checkbox> and should *not* be used if the user would directly interact\n * with the checkbox. The pseudo-checkbox should only be used as an implementation detail of\n * more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nexport class MdPseudoCheckbox {\n/**\n * Display state of the checkbox.\n */\nstate: MdPseudoCheckboxState = 'unchecked';\n/**\n * Whether the checkbox is disabled.\n */\ndisabled: boolean = false;\n/**\n * Color of the checkbox.\n * @return {?}\n */\nget color(): string { return this._color; }\n/**\n * @param {?} value\n * @return {?}\n */\nset color(value: string) {\n    if (value) {\n      let /** @type {?} */ nativeElement = this._elementRef.nativeElement;\n\n      this._renderer.removeClass(nativeElement, `mat-${this.color}`);\n      this._renderer.addClass(nativeElement, `mat-${value}`);\n      this._color = value;\n    }\n  }\nprivate _color: string;\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer2) {\n    this.color = 'accent';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'md-pseudo-checkbox, mat-pseudo-checkbox',\n  styleUrls: ['pseudo-checkbox.css'],\n  template: '',\n  host: {\n    '[class.mat-pseudo-checkbox]': 'true',\n    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'state': [{ type: Input },],\n'disabled': [{ type: Input },],\n'color': [{ type: Input },],\n};\n}\n\nfunction MdPseudoCheckbox_tsickle_Closure_declarations() {\n/** @type {?} */\nMdPseudoCheckbox.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdPseudoCheckbox.ctorParameters;\n/** @type {?} */\nMdPseudoCheckbox.propDecorators;\n/**\n * Display state of the checkbox.\n * @type {?}\n */\nMdPseudoCheckbox.prototype.state;\n/**\n * Whether the checkbox is disabled.\n * @type {?}\n */\nMdPseudoCheckbox.prototype.disabled;\n/** @type {?} */\nMdPseudoCheckbox.prototype._color;\n/** @type {?} */\nMdPseudoCheckbox.prototype._elementRef;\n/** @type {?} */\nMdPseudoCheckbox.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule} from '@angular/core';\nimport {MdRipple} from './ripple';\nimport {MdCommonModule} from '../common-behaviors/common-module';\nimport {VIEWPORT_RULER_PROVIDER} from '../overlay/position/viewport-ruler';\nimport {ScrollDispatchModule} from '../overlay/scroll/index';\nimport {PlatformModule} from '../platform/index';\n\nexport {MdRipple, RippleGlobalOptions, MD_RIPPLE_GLOBAL_OPTIONS} from './ripple';\nexport {RippleRef, RippleState} from './ripple-ref';\nexport {RippleConfig, RIPPLE_FADE_IN_DURATION, RIPPLE_FADE_OUT_DURATION} from './ripple-renderer';\nexport class MdRippleModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdCommonModule, PlatformModule, ScrollDispatchModule],\n  exports: [MdRipple, MdCommonModule],\n  declarations: [MdRipple],\n  providers: [VIEWPORT_RULER_PROVIDER],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdRippleModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRippleModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdRippleModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule} from '@angular/core';\nimport {SCROLL_DISPATCHER_PROVIDER} from './scroll-dispatcher';\nimport {Scrollable} from './scrollable';\nimport {PlatformModule} from '../../platform/index';\n\nexport {Scrollable} from './scrollable';\nexport {ScrollDispatcher} from './scroll-dispatcher';\n\n// Export pre-defined scroll strategies and interface to build custom ones.\nexport {ScrollStrategy} from './scroll-strategy';\nexport {RepositionScrollStrategy} from './reposition-scroll-strategy';\nexport {CloseScrollStrategy} from './close-scroll-strategy';\nexport {NoopScrollStrategy} from './noop-scroll-strategy';\nexport {BlockScrollStrategy} from './block-scroll-strategy';\nexport class ScrollDispatchModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [PlatformModule],\n  exports: [Scrollable],\n  declarations: [Scrollable],\n  providers: [SCROLL_DISPATCHER_PROVIDER],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollDispatchModule_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollDispatchModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollDispatchModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {ScrollStrategy} from './scroll-strategy';\nimport {ViewportRuler} from '../position/viewport-ruler';\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nexport class BlockScrollStrategy implements ScrollStrategy {\nprivate _previousHTMLStyles = { top: null, left: null };\nprivate _previousScrollPosition: { top: number, left: number };\nprivate _isEnabled = false;\n/**\n * @param {?} _viewportRuler\n */\nconstructor(private _viewportRuler: ViewportRuler) { }\n/**\n * @return {?}\n */\nattach() { }\n/**\n * @return {?}\n */\nenable() {\n    if (this._canBeEnabled()) {\n      const /** @type {?} */ root = document.documentElement;\n\n      this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n\n      // Cache the previous inline styles in case the user had set them.\n      this._previousHTMLStyles.left = root.style.left;\n      this._previousHTMLStyles.top = root.style.top;\n\n      // Note: we're using the `html` node, instead of the `body`, because the `body` may\n      // have the user agent margin, whereas the `html` is guaranteed not to have one.\n      root.style.left = `${-this._previousScrollPosition.left}px`;\n      root.style.top = `${-this._previousScrollPosition.top}px`;\n      root.classList.add('cdk-global-scrollblock');\n      this._isEnabled = true;\n    }\n  }\n/**\n * @return {?}\n */\ndisable() {\n    if (this._isEnabled) {\n      this._isEnabled = false;\n      document.documentElement.style.left = this._previousHTMLStyles.left;\n      document.documentElement.style.top = this._previousHTMLStyles.top;\n      document.documentElement.classList.remove('cdk-global-scrollblock');\n      window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n    }\n  }\n/**\n * @return {?}\n */\nprivate _canBeEnabled(): boolean {\n    // Since the scroll strategies can't be singletons, we have to use a global CSS class\n    // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n    // scrolling multiple times.\n    if (document.documentElement.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n      return false;\n    }\n\n    const /** @type {?} */ body = document.body;\n    const /** @type {?} */ viewport = this._viewportRuler.getViewportRect();\n    return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n  }\n}\n\nfunction BlockScrollStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nBlockScrollStrategy.prototype._previousHTMLStyles;\n/** @type {?} */\nBlockScrollStrategy.prototype._previousScrollPosition;\n/** @type {?} */\nBlockScrollStrategy.prototype._isEnabled;\n/** @type {?} */\nBlockScrollStrategy.prototype._viewportRuler;\n}\n\n","import {ScrollStrategy} from './scroll-strategy';\n/**\n * Scroll strategy that doesn't do anything.\n */\nexport class NoopScrollStrategy implements ScrollStrategy {\n/**\n * @return {?}\n */\nenable() { }\n/**\n * @return {?}\n */\ndisable() { }\n/**\n * @return {?}\n */\nattach() { }\n}\n","import {ScrollStrategy} from './scroll-strategy';\nimport {OverlayRef} from '../overlay-ref';\nimport {Subscription} from 'rxjs/Subscription';\nimport {ScrollDispatcher} from './scroll-dispatcher';\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nexport class CloseScrollStrategy implements ScrollStrategy {\nprivate _scrollSubscription: Subscription|null = null;\nprivate _overlayRef: OverlayRef;\n/**\n * @param {?} _scrollDispatcher\n */\nconstructor(private _scrollDispatcher: ScrollDispatcher) { }\n/**\n * @param {?} overlayRef\n * @return {?}\n */\nattach(overlayRef: OverlayRef) {\n    this._overlayRef = overlayRef;\n  }\n/**\n * @return {?}\n */\nenable() {\n    if (!this._scrollSubscription) {\n      this._scrollSubscription = this._scrollDispatcher.scrolled(null, () => {\n        if (this._overlayRef.hasAttached()) {\n          this._overlayRef.detach();\n        }\n\n        this.disable();\n      });\n    }\n  }\n/**\n * @return {?}\n */\ndisable() {\n    if (this._scrollSubscription) {\n      this._scrollSubscription.unsubscribe();\n      this._scrollSubscription = null;\n    }\n  }\n}\n\nfunction CloseScrollStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nCloseScrollStrategy.prototype._scrollSubscription;\n/** @type {?} */\nCloseScrollStrategy.prototype._overlayRef;\n/** @type {?} */\nCloseScrollStrategy.prototype._scrollDispatcher;\n}\n\n","import {Subscription} from 'rxjs/Subscription';\nimport {ScrollStrategy} from './scroll-strategy';\nimport {OverlayRef} from '../overlay-ref';\nimport {ScrollDispatcher} from './scroll-dispatcher';\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nexport class RepositionScrollStrategy implements ScrollStrategy {\nprivate _scrollSubscription: Subscription|null = null;\nprivate _overlayRef: OverlayRef;\n/**\n * @param {?} _scrollDispatcher\n * @param {?=} _scrollThrottle\n */\nconstructor(private _scrollDispatcher: ScrollDispatcher,\nprivate _scrollThrottle = 0) { }\n/**\n * @param {?} overlayRef\n * @return {?}\n */\nattach(overlayRef: OverlayRef) {\n    this._overlayRef = overlayRef;\n  }\n/**\n * @return {?}\n */\nenable() {\n    if (!this._scrollSubscription) {\n      this._scrollSubscription = this._scrollDispatcher.scrolled(this._scrollThrottle, () => {\n        this._overlayRef.updatePosition();\n      });\n    }\n  }\n/**\n * @return {?}\n */\ndisable() {\n    if (this._scrollSubscription) {\n      this._scrollSubscription.unsubscribe();\n      this._scrollSubscription = null;\n    }\n  }\n}\n\nfunction RepositionScrollStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nRepositionScrollStrategy.prototype._scrollSubscription;\n/** @type {?} */\nRepositionScrollStrategy.prototype._overlayRef;\n/** @type {?} */\nRepositionScrollStrategy.prototype._scrollDispatcher;\n/** @type {?} */\nRepositionScrollStrategy.prototype._scrollThrottle;\n}\n\n","import {Directive, ElementRef, OnInit, OnDestroy, NgZone, Renderer2} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {ScrollDispatcher} from './scroll-dispatcher';\nimport'rxjs/add/observable/fromEvent';\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nexport class Scrollable implements OnInit, OnDestroy {\nprivate _elementScrolled: Subject<Event> = new Subject();\nprivate _scrollListener: Function;\n/**\n * @param {?} _elementRef\n * @param {?} _scroll\n * @param {?} _ngZone\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _scroll: ScrollDispatcher,\nprivate _ngZone: NgZone,\nprivate _renderer: Renderer2) {}\n/**\n * @return {?}\n */\nngOnInit() {\n    this._scrollListener = this._ngZone.runOutsideAngular(() => {\n      return this._renderer.listen(this.getElementRef().nativeElement, 'scroll', (event: Event) => {\n        this._elementScrolled.next(event);\n      });\n    });\n\n    this._scroll.register(this);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._scroll.deregister(this);\n\n    if (this._scrollListener) {\n      this._scrollListener();\n      this._scrollListener = null;\n    }\n  }\n/**\n * Returns observable that emits when a scroll event is fired on the host element.\n * @return {?}\n */\nelementScrolled(): Observable<any> {\n    return this._elementScrolled.asObservable();\n  }\n/**\n * @return {?}\n */\ngetElementRef(): ElementRef {\n    return this._elementRef;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdk-scrollable], [cdkScrollable]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ScrollDispatcher, },\n{type: NgZone, },\n{type: Renderer2, },\n];\n}\n\nfunction Scrollable_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollable.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollable.ctorParameters;\n/** @type {?} */\nScrollable.prototype._elementScrolled;\n/** @type {?} */\nScrollable.prototype._scrollListener;\n/** @type {?} */\nScrollable.prototype._elementRef;\n/** @type {?} */\nScrollable.prototype._scroll;\n/** @type {?} */\nScrollable.prototype._ngZone;\n/** @type {?} */\nScrollable.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  Inject,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  InjectionToken,\n  Optional,\n} from '@angular/core';\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\nimport {RippleRef} from './ripple-ref';\nimport {ViewportRuler} from '../overlay/position/viewport-ruler';\nimport {Platform} from '../platform/platform';\n\nexport interface RippleGlobalOptions {\n  disabled?: boolean;\n  baseSpeedFactor?: number;\n}\n/**\n * Injection token that can be used to specify the global ripple options.\n */\nexport const MD_RIPPLE_GLOBAL_OPTIONS =\n    new InjectionToken<RippleGlobalOptions>('md-ripple-global-options');\nexport class MdRipple implements OnChanges, OnDestroy {\n\n  /**\n   * The element that triggers the ripple when click events are received. Defaults to the\n   * directive's host element.\n   */\n  // Prevent TS metadata emit from referencing HTMLElement in ripple.js\n  // Otherwise running this code in a Node environment (e.g Universal) will not work.\n   trigger: HTMLElement|HTMLElement;\n/**\n * Whether the ripple always originates from the center of the host element's bounds, rather\n * than originating from the location of the click event.\n */\ncentered: boolean;\n/**\n * Whether click events will not trigger the ripple. It can still be triggered by manually\n * calling createRipple()\n */\ndisabled: boolean;\n/**\n * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n * will be the distance from the center of the ripple to the furthest corner of the host element's\n * bounding rectangle.\n */\nradius: number = 0;\n/**\n * If set, the normal duration of ripple animations is divided by this value. For example,\n * setting it to 0.5 will cause the animations to take twice as long.\n * A changed speedFactor will not modify the fade-out duration of the ripples.\n */\nspeedFactor: number = 1;\n/**\n * Custom color for ripples.\n */\ncolor: string;\n/**\n * Whether foreground ripples should be visible outside the component's bounds.\n */\nunbounded: boolean;\n/**\n * Renderer for the ripple DOM manipulations.\n */\nprivate _rippleRenderer: RippleRenderer;\n/**\n * Options that are set globally for all ripples.\n */\nprivate _globalOptions: RippleGlobalOptions;\n/**\n * @param {?} elementRef\n * @param {?} ngZone\n * @param {?} ruler\n * @param {?} platform\n * @param {?} globalOptions\n */\nconstructor(\n    elementRef: ElementRef,\n    ngZone: NgZone,\n    ruler: ViewportRuler,\n    platform: Platform,\n      globalOptions: RippleGlobalOptions\n  ) {\n    this._rippleRenderer = new RippleRenderer(elementRef, ngZone, ruler, platform);\n    this._globalOptions = globalOptions ? globalOptions : {};\n\n    this._updateRippleRenderer();\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (changes['trigger'] && this.trigger) {\n      this._rippleRenderer.setTriggerElement(this.trigger);\n    }\n\n    this._updateRippleRenderer();\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    // Set the trigger element to null to cleanup all listeners.\n    this._rippleRenderer.setTriggerElement(null);\n  }\n/**\n * Launches a manual ripple at the specified position.\n * @param {?} pageX\n * @param {?} pageY\n * @param {?=} config\n * @return {?}\n */\nlaunch(pageX: number, pageY: number, config = this.rippleConfig): RippleRef {\n    return this._rippleRenderer.fadeInRipple(pageX, pageY, config);\n  }\n/**\n * Fades out all currently showing ripple elements.\n * @return {?}\n */\nfadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n/**\n * Ripple configuration from the directive's input values.\n * @return {?}\n */\nget rippleConfig(): RippleConfig {\n    return {\n      centered: this.centered,\n      speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\n      radius: this.radius,\n      color: this.color\n    };\n  }\n/**\n * Updates the ripple renderer with the latest ripple configuration.\n * @return {?}\n */\nprivate _updateRippleRenderer() {\n    this._rippleRenderer.rippleDisabled = this._globalOptions.disabled || this.disabled;\n    this._rippleRenderer.rippleConfig = this.rippleConfig;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-ripple], [mat-ripple], [mdRipple], [matRipple]',\n  exportAs: 'mdRipple',\n  host: {\n    'class': 'mat-ripple',\n    '[class.mat-ripple-unbounded]': 'unbounded'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n{type: ViewportRuler, },\n{type: Platform, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_RIPPLE_GLOBAL_OPTIONS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'trigger': [{ type: Input, args: ['mdRippleTrigger', ] },],\n'centered': [{ type: Input, args: ['mdRippleCentered', ] },],\n'disabled': [{ type: Input, args: ['mdRippleDisabled', ] },],\n'radius': [{ type: Input, args: ['mdRippleRadius', ] },],\n'speedFactor': [{ type: Input, args: ['mdRippleSpeedFactor', ] },],\n'color': [{ type: Input, args: ['mdRippleColor', ] },],\n'unbounded': [{ type: Input, args: ['mdRippleUnbounded', ] },],\n};\n}\n\nfunction MdRipple_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRipple.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdRipple.ctorParameters;\n/** @type {?} */\nMdRipple.propDecorators;\n/** @type {?} */\nMdRipple.prototype.trigger;\n/**\n * Whether the ripple always originates from the center of the host element's bounds, rather\n * than originating from the location of the click event.\n * @type {?}\n */\nMdRipple.prototype.centered;\n/**\n * Whether click events will not trigger the ripple. It can still be triggered by manually\n * calling createRipple()\n * @type {?}\n */\nMdRipple.prototype.disabled;\n/**\n * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n * will be the distance from the center of the ripple to the furthest corner of the host element's\n * bounding rectangle.\n * @type {?}\n */\nMdRipple.prototype.radius;\n/**\n * If set, the normal duration of ripple animations is divided by this value. For example,\n * setting it to 0.5 will cause the animations to take twice as long.\n * A changed speedFactor will not modify the fade-out duration of the ripples.\n * @type {?}\n */\nMdRipple.prototype.speedFactor;\n/**\n * Custom color for ripples.\n * @type {?}\n */\nMdRipple.prototype.color;\n/**\n * Whether foreground ripples should be visible outside the component's bounds.\n * @type {?}\n */\nMdRipple.prototype.unbounded;\n/**\n * Renderer for the ripple DOM manipulations.\n * @type {?}\n */\nMdRipple.prototype._rippleRenderer;\n/**\n * Options that are set globally for all ripples.\n * @type {?}\n */\nMdRipple.prototype._globalOptions;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable, Optional, SkipSelf} from '@angular/core';\nimport {ScrollDispatcher} from '../scroll/scroll-dispatcher';\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * \\@docs-private\n */\nexport class ViewportRuler {\n/**\n * Cached document client rectangle.\n */\nprivate _documentRect?: ClientRect;\n/**\n * @param {?} scrollDispatcher\n */\nconstructor(scrollDispatcher: ScrollDispatcher) {\n    // Subscribe to scroll and resize events and update the document rectangle on changes.\n    scrollDispatcher.scrolled(null, () => this._cacheViewportGeometry());\n  }\n/**\n * Gets a ClientRect for the viewport's bounds.\n * @param {?=} documentRect\n * @return {?}\n */\ngetViewportRect(documentRect = this._documentRect): ClientRect {\n    // Cache the document bounding rect so that we don't recompute it for multiple calls.\n    if (!documentRect) {\n      this._cacheViewportGeometry();\n      documentRect = this._documentRect;\n    }\n\n    // Use the document element's bounding rect rather than the window scroll properties\n    // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n    // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n    // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n    // can disagree when the page is pinch-zoomed (on devices that support touch).\n    // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n    // We use the documentElement instead of the body because, by default (without a css reset)\n    // browsers typically give the document body an 8px margin, which is not included in\n    // getBoundingClientRect().\n    const /** @type {?} */ scrollPosition = this.getViewportScrollPosition(documentRect);\n    const /** @type {?} */ height = window.innerHeight;\n    const /** @type {?} */ width = window.innerWidth;\n\n    return {\n      top: scrollPosition.top,\n      left: scrollPosition.left,\n      bottom: scrollPosition.top + height,\n      right: scrollPosition.left + width,\n      height,\n      width,\n    };\n  }\n/**\n * Gets the (top, left) scroll position of the viewport.\n * @param {?=} documentRect\n * @return {?}\n */\ngetViewportScrollPosition(documentRect = this._documentRect) {\n    // Cache the document bounding rect so that we don't recompute it for multiple calls.\n    if (!documentRect) {\n      this._cacheViewportGeometry();\n      documentRect = this._documentRect;\n    }\n\n    // The top-left-corner of the viewport is determined by the scroll position of the document\n    // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n    // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n    // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n    // `document.documentElement` works consistently, where the `top` and `left` values will\n    // equal negative the scroll position.\n    const /** @type {?} */ top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n                  document.documentElement.scrollTop || 0;\n\n    const /** @type {?} */ left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n                  document.documentElement.scrollLeft || 0;\n\n    return {top, left};\n  }\n/**\n * Caches the latest client rectangle of the document element.\n * @return {?}\n */\n_cacheViewportGeometry?() {\n    this._documentRect = document.documentElement.getBoundingClientRect();\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ScrollDispatcher, },\n];\n}\n\nfunction ViewportRuler_tsickle_Closure_declarations() {\n/** @type {?} */\nViewportRuler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nViewportRuler.ctorParameters;\n/**\n * Cached document client rectangle.\n * @type {?}\n */\nViewportRuler.prototype._documentRect;\n}\n\n/**\n * @param {?} parentRuler\n * @param {?} scrollDispatcher\n * @return {?}\n */\nexport function VIEWPORT_RULER_PROVIDER_FACTORY(parentRuler: ViewportRuler,\n                                                scrollDispatcher: ScrollDispatcher) {\n  return parentRuler || new ViewportRuler(scrollDispatcher);\n}\n\nexport const /** @type {?} */ VIEWPORT_RULER_PROVIDER = {\n  // If there is already a ViewportRuler available, use that. Otherwise, provide a new one.\n  provide: ViewportRuler,\n  deps: [[new Optional(), new SkipSelf(), ViewportRuler], ScrollDispatcher],\n  useFactory: VIEWPORT_RULER_PROVIDER_FACTORY\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {ElementRef, Injectable, NgZone, Optional, SkipSelf} from '@angular/core';\nimport {Platform} from '../../platform/index';\nimport {Scrollable} from './scrollable';\nimport {Subject} from 'rxjs/Subject';\nimport {Observable} from 'rxjs/Observable';\nimport {Subscription} from 'rxjs/Subscription';\nimport'rxjs/add/observable/fromEvent';\nimport'rxjs/add/observable/merge';\nimport'rxjs/add/operator/auditTime';\n/**\n * Time in ms to throttle the scrolling events by default.\n */\nexport const DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nexport class ScrollDispatcher {\n/**\n * @param {?} _ngZone\n * @param {?} _platform\n */\nconstructor(private _ngZone: NgZone,\nprivate _platform: Platform) { }\n/**\n * Subject for notifying that a registered scrollable reference element has been scrolled.\n */\n_scrolled: Subject<void> = new Subject<void>();\n/**\n * Keeps track of the global `scroll` and `resize` subscriptions.\n */\n_globalSubscription: Subscription = null;\n/**\n * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n */\nprivate _scrolledCount = 0;\n/**\n * Map of all the scrollable references that are registered with the service and their\n * scroll event subscriptions.\n */\nscrollableReferences: Map<Scrollable, Subscription> = new Map();\n/**\n * Registers a Scrollable with the service and listens for its scrolled events. When the\n * scrollable is scrolled, the service emits the event in its scrolled observable.\n * @param {?} scrollable Scrollable instance to be registered.\n * @return {?}\n */\nregister(scrollable: Scrollable): void {\n    const /** @type {?} */ scrollSubscription = scrollable.elementScrolled().subscribe(() => this._notify());\n\n    this.scrollableReferences.set(scrollable, scrollSubscription);\n  }\n/**\n * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n * @param {?} scrollable Scrollable instance to be deregistered.\n * @return {?}\n */\nderegister(scrollable: Scrollable): void {\n    if (this.scrollableReferences.has(scrollable)) {\n      this.scrollableReferences.get(scrollable).unsubscribe();\n      this.scrollableReferences.delete(scrollable);\n    }\n  }\n/**\n * Subscribes to an observable that emits an event whenever any of the registered Scrollable\n * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n * to override the default \"throttle\" time.\n * @param {?=} auditTimeInMs\n * @param {?=} callback\n * @return {?}\n */\nscrolled(auditTimeInMs: number = DEFAULT_SCROLL_TIME, callback: () => any): Subscription {\n    // Scroll events can only happen on the browser, so do nothing if we're not on the browser.\n    if (!this._platform.isBrowser) {\n      return Subscription.EMPTY;\n    }\n\n    // In the case of a 0ms delay, use an observable without auditTime\n    // since it does add a perceptible delay in processing overhead.\n    let /** @type {?} */ observable = auditTimeInMs > 0 ?\n      this._scrolled.asObservable().auditTime(auditTimeInMs) :\n      this._scrolled.asObservable();\n\n    this._scrolledCount++;\n\n    if (!this._globalSubscription) {\n      this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n        return Observable.merge(\n          Observable.fromEvent(window.document, 'scroll'),\n          Observable.fromEvent(window, 'resize')\n        ).subscribe(() => this._notify());\n      });\n    }\n\n    // Note that we need to do the subscribing from here, in order to be able to remove\n    // the global event listeners once there are no more subscriptions.\n    let /** @type {?} */ subscription = observable.subscribe(callback);\n\n    subscription.add(() => {\n      this._scrolledCount--;\n\n      if (this._globalSubscription && !this.scrollableReferences.size && !this._scrolledCount) {\n        this._globalSubscription.unsubscribe();\n        this._globalSubscription = null;\n      }\n    });\n\n    return subscription;\n  }\n/**\n * Returns all registered Scrollables that contain the provided element.\n * @param {?} elementRef\n * @return {?}\n */\ngetScrollContainers(elementRef: ElementRef): Scrollable[] {\n    const /** @type {?} */ scrollingContainers: Scrollable[] = [];\n\n    this.scrollableReferences.forEach((subscription: Subscription, scrollable: Scrollable) => {\n      if (this.scrollableContainsElement(scrollable, elementRef)) {\n        scrollingContainers.push(scrollable);\n      }\n    });\n\n    return scrollingContainers;\n  }\n/**\n * Returns true if the element is contained within the provided Scrollable.\n * @param {?} scrollable\n * @param {?} elementRef\n * @return {?}\n */\nscrollableContainsElement(scrollable: Scrollable, elementRef: ElementRef): boolean {\n    let /** @type {?} */ element = elementRef.nativeElement;\n    let /** @type {?} */ scrollableElement = scrollable.getElementRef().nativeElement;\n\n    // Traverse through the element parents until we reach null, checking if any of the elements\n    // are the scrollable's element.\n    do {\n      if (element == scrollableElement) { return true; }\n    } while (element = element.parentElement);\n  }\n/**\n * Sends a notification that a scroll event has been fired.\n * @return {?}\n */\n_notify() {\n    this._scrolled.next();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n{type: Platform, },\n];\n}\n\nfunction ScrollDispatcher_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollDispatcher.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollDispatcher.ctorParameters;\n/**\n * Subject for notifying that a registered scrollable reference element has been scrolled.\n * @type {?}\n */\nScrollDispatcher.prototype._scrolled;\n/**\n * Keeps track of the global `scroll` and `resize` subscriptions.\n * @type {?}\n */\nScrollDispatcher.prototype._globalSubscription;\n/**\n * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n * @type {?}\n */\nScrollDispatcher.prototype._scrolledCount;\n/**\n * Map of all the scrollable references that are registered with the service and their\n * scroll event subscriptions.\n * @type {?}\n */\nScrollDispatcher.prototype.scrollableReferences;\n/** @type {?} */\nScrollDispatcher.prototype._ngZone;\n/** @type {?} */\nScrollDispatcher.prototype._platform;\n}\n\n/**\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @param {?} platform\n * @return {?}\n */\nexport function SCROLL_DISPATCHER_PROVIDER_FACTORY(\n    parentDispatcher: ScrollDispatcher, ngZone: NgZone, platform: Platform) {\n  return parentDispatcher || new ScrollDispatcher(ngZone, platform);\n}\n\nexport const /** @type {?} */ SCROLL_DISPATCHER_PROVIDER = {\n  // If there is already a ScrollDispatcher available, use that. Otherwise, provide a new one.\n  provide: ScrollDispatcher,\n  deps: [[new Optional(), new SkipSelf(), ScrollDispatcher], NgZone, Platform],\n  useFactory: SCROLL_DISPATCHER_PROVIDER_FACTORY\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule} from '@angular/core';\nimport {Platform} from './platform';\nexport class PlatformModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [Platform]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PlatformModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPlatformModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPlatformModule.ctorParameters;\n}\n\n\n\nexport {Platform} from './platform';\nexport {getSupportedInputTypes} from './features';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","let /** @type {?} */ supportedInputTypes: Set<string>;\n/**\n * @return {?} The input types supported by this browser.\n */\nexport function getSupportedInputTypes(): Set<string> {\n  if (!supportedInputTypes) {\n    let /** @type {?} */ featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set([\n      // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n      // first changing it to something else:\n      // The specified value \"\" does not conform to the required format.\n      // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n      'color',\n      'button',\n      'checkbox',\n      'date',\n      'datetime-local',\n      'email',\n      'file',\n      'hidden',\n      'image',\n      'month',\n      'number',\n      'password',\n      'radio',\n      'range',\n      'reset',\n      'search',\n      'submit',\n      'tel',\n      'text',\n      'time',\n      'url',\n      'week',\n    ].filter(value => {\n      featureTestInput.setAttribute('type', value);\n      return featureTestInput.type === value;\n    }));\n  }\n  return supportedInputTypes;\n}\n","import {Injectable} from '@angular/core';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nconst /** @type {?} */ hasV8BreakIterator = (typeof(Intl) !== 'undefined' && ( /** @type {?} */((Intl as any))).v8BreakIterator);\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n * \\@docs-private\n */\nexport class Platform {\n  isBrowser: boolean = typeof document === 'object' && !!document;\n/**\n * Layout Engines\n */\nEDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n  TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n\n  // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n  BLINK = this.isBrowser &&\n      (!!(( /** @type {?} */((window as any))).chrome || hasV8BreakIterator) && !!CSS && !this.EDGE && !this.TRIDENT);\n\n  // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n  // ensure that Webkit runs standalone and is not used as another engine's base.\n  WEBKIT = this.isBrowser &&\n      /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n/**\n * Browsers and Platform Types\n */\nIOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !(window as any).MSStream;\n\n  // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n  // them self as Gecko-like browsers and modify the userAgent's according to that.\n  // Since we only cover one explicit Firefox case, we can simply check for Firefox\n  // instead of having an unstable check for Gecko.\n  FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n\n  // Trident on mobile adds the android platform to the userAgent to trick detections.\n  ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Platform_tsickle_Closure_declarations() {\n/** @type {?} */\nPlatform.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPlatform.ctorParameters;\n/** @type {?} */\nPlatform.prototype.isBrowser;\n/**\n * Layout Engines\n * @type {?}\n */\nPlatform.prototype.EDGE;\n/** @type {?} */\nPlatform.prototype.TRIDENT;\n/** @type {?} */\nPlatform.prototype.BLINK;\n/** @type {?} */\nPlatform.prototype.WEBKIT;\n/**\n * Browsers and Platform Types\n * @type {?}\n */\nPlatform.prototype.IOS;\n/** @type {?} */\nPlatform.prototype.FIREFOX;\n/** @type {?} */\nPlatform.prototype.ANDROID;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {ElementRef, NgZone} from '@angular/core';\nimport {Platform} from '../platform/platform';\nimport {ViewportRuler} from '../overlay/position/viewport-ruler';\nimport {RippleRef, RippleState} from './ripple-ref';\n/**\n * Fade-in duration for the ripples. Can be modified with the speedFactor option.\n */\nexport const RIPPLE_FADE_IN_DURATION = 450;\n/**\n * Fade-out duration for the ripples in milliseconds. This can't be modified by the speedFactor.\n */\nexport const RIPPLE_FADE_OUT_DURATION = 400;\n\nexport type RippleConfig = {\n  color?: string;\n  centered?: boolean;\n  radius?: number;\n  speedFactor?: number;\n  persistent?: boolean;\n};\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nexport class RippleRenderer {\n/**\n * Element where the ripples are being added to.\n */\nprivate _containerElement: HTMLElement;\n/**\n * Element which triggers the ripple elements on mouse events.\n */\nprivate _triggerElement: HTMLElement;\n/**\n * Whether the mouse is currently down or not.\n */\nprivate _isMousedown: boolean = false;\n/**\n * Events to be registered on the trigger element.\n */\nprivate _triggerEvents = new Map<string, any>();\n/**\n * Set of currently active ripple references.\n */\nprivate _activeRipples = new Set<RippleRef>();\n/**\n * Ripple config for all ripples created by events.\n */\nrippleConfig: RippleConfig = {};\n/**\n * Whether mouse ripples should be created or not.\n */\nrippleDisabled: boolean = false;\n/**\n * @param {?} elementRef\n * @param {?} _ngZone\n * @param {?} _ruler\n * @param {?} platform\n */\nconstructor(\n      elementRef: ElementRef,\nprivate _ngZone: NgZone,\nprivate _ruler: ViewportRuler,\n      platform: Platform) {\n    // Only do anything if we're on the browser.\n    if (platform.isBrowser) {\n      this._containerElement = elementRef.nativeElement;\n\n      // Specify events which need to be registered on the trigger.\n      this._triggerEvents.set('mousedown', this.onMousedown.bind(this));\n      this._triggerEvents.set('mouseup', this.onMouseup.bind(this));\n      this._triggerEvents.set('mouseleave', this.onMouseLeave.bind(this));\n\n      // By default use the host element as trigger element.\n      this.setTriggerElement(this._containerElement);\n    }\n  }\n/**\n * Fades in a ripple at the given coordinates.\n * @param {?} pageX\n * @param {?} pageY\n * @param {?=} config\n * @return {?}\n */\nfadeInRipple(pageX: number, pageY: number, config: RippleConfig = {}): RippleRef {\n    let /** @type {?} */ containerRect = this._containerElement.getBoundingClientRect();\n\n    if (config.centered) {\n      pageX = containerRect.left + containerRect.width / 2;\n      pageY = containerRect.top + containerRect.height / 2;\n    } else {\n      // Subtract scroll values from the coordinates because calculations below\n      // are always relative to the viewport rectangle.\n      let /** @type {?} */ scrollPosition = this._ruler.getViewportScrollPosition();\n      pageX -= scrollPosition.left;\n      pageY -= scrollPosition.top;\n    }\n\n    let /** @type {?} */ radius = config.radius || distanceToFurthestCorner(pageX, pageY, containerRect);\n    let /** @type {?} */ duration = RIPPLE_FADE_IN_DURATION * (1 / (config.speedFactor || 1));\n    let /** @type {?} */ offsetX = pageX - containerRect.left;\n    let /** @type {?} */ offsetY = pageY - containerRect.top;\n\n    let /** @type {?} */ ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n\n    // If the color is not set, the default CSS color will be used.\n    ripple.style.backgroundColor = config.color;\n    ripple.style.transitionDuration = `${duration}ms`;\n\n    this._containerElement.appendChild(ripple);\n\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    enforceStyleRecalculation(ripple);\n\n    ripple.style.transform = 'scale(1)';\n\n    // Exposed reference to the ripple that will be returned.\n    let /** @type {?} */ rippleRef = new RippleRef(this, ripple, config);\n\n    rippleRef.state = RippleState.FADING_IN;\n\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.add(rippleRef);\n\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    this.runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.VISIBLE;\n\n      if (!config.persistent && !this._isMousedown) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n\n    return rippleRef;\n  }\n/**\n * Fades out a ripple reference.\n * @param {?} rippleRef\n * @return {?}\n */\nfadeOutRipple(rippleRef: RippleRef) {\n    // For ripples that are not active anymore, don't re-un the fade-out animation.\n    if (!this._activeRipples.delete(rippleRef)) {\n      return;\n    }\n\n    let /** @type {?} */ rippleEl = rippleRef.element;\n\n    rippleEl.style.transitionDuration = `${RIPPLE_FADE_OUT_DURATION}ms`;\n    rippleEl.style.opacity = '0';\n\n    rippleRef.state = RippleState.FADING_OUT;\n\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    this.runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.HIDDEN;\n      rippleEl.parentNode.removeChild(rippleEl);\n    }, RIPPLE_FADE_OUT_DURATION);\n  }\n/**\n * Fades out all currently active ripples.\n * @return {?}\n */\nfadeOutAll() {\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\n  }\n/**\n * Sets the trigger element and registers the mouse events.\n * @param {?} element\n * @return {?}\n */\nsetTriggerElement(element: HTMLElement) {\n    // Remove all previously register event listeners from the trigger element.\n    if (this._triggerElement) {\n      this._triggerEvents.forEach((fn, type) => this._triggerElement.removeEventListener(type, fn));\n    }\n\n    if (element) {\n      // If the element is not null, register all event listeners on the trigger element.\n      this._ngZone.runOutsideAngular(() => {\n        this._triggerEvents.forEach((fn, type) => element.addEventListener(type, fn));\n      });\n    }\n\n    this._triggerElement = element;\n  }\n/**\n * Listener being called on mousedown event.\n * @param {?} event\n * @return {?}\n */\nprivate onMousedown(event: MouseEvent) {\n    if (!this.rippleDisabled) {\n      this._isMousedown = true;\n      this.fadeInRipple(event.pageX, event.pageY, this.rippleConfig);\n    }\n  }\n/**\n * Listener being called on mouseup event.\n * @return {?}\n */\nprivate onMouseup() {\n    this._isMousedown = false;\n\n    // Fade-out all ripples that are completely visible and not persistent.\n    this._activeRipples.forEach(ripple => {\n      if (!ripple.config.persistent && ripple.state === RippleState.VISIBLE) {\n        ripple.fadeOut();\n      }\n    });\n  }\n/**\n * Listener being called on mouseleave event.\n * @return {?}\n */\nprivate onMouseLeave() {\n    if (this._isMousedown) {\n      this.onMouseup();\n    }\n  }\n/**\n * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n * @param {?} fn\n * @param {?=} delay\n * @return {?}\n */\nprivate runTimeoutOutsideZone(fn: Function, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n\n}\n\nfunction RippleRenderer_tsickle_Closure_declarations() {\n/**\n * Element where the ripples are being added to.\n * @type {?}\n */\nRippleRenderer.prototype._containerElement;\n/**\n * Element which triggers the ripple elements on mouse events.\n * @type {?}\n */\nRippleRenderer.prototype._triggerElement;\n/**\n * Whether the mouse is currently down or not.\n * @type {?}\n */\nRippleRenderer.prototype._isMousedown;\n/**\n * Events to be registered on the trigger element.\n * @type {?}\n */\nRippleRenderer.prototype._triggerEvents;\n/**\n * Set of currently active ripple references.\n * @type {?}\n */\nRippleRenderer.prototype._activeRipples;\n/**\n * Ripple config for all ripples created by events.\n * @type {?}\n */\nRippleRenderer.prototype.rippleConfig;\n/**\n * Whether mouse ripples should be created or not.\n * @type {?}\n */\nRippleRenderer.prototype.rippleDisabled;\n/** @type {?} */\nRippleRenderer.prototype._ngZone;\n/** @type {?} */\nRippleRenderer.prototype._ruler;\n}\n\n/**\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element: HTMLElement) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x: number, y: number, rect: ClientRect) {\n  const /** @type {?} */ distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const /** @type {?} */ distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n","import {RippleConfig, RippleRenderer} from './ripple-renderer';\nexport type RippleState = number;\nexport let RippleState: any = {};\nRippleState.FADING_IN = 0;\nRippleState.VISIBLE = 1;\nRippleState.FADING_OUT = 2;\nRippleState.HIDDEN = 3;\nRippleState[RippleState.FADING_IN] = \"FADING_IN\";\nRippleState[RippleState.VISIBLE] = \"VISIBLE\";\nRippleState[RippleState.FADING_OUT] = \"FADING_OUT\";\nRippleState[RippleState.HIDDEN] = \"HIDDEN\";\n\n/**\n * Reference to a previously launched ripple element.\n */\nexport class RippleRef {\n/**\n * Current state of the ripple reference.\n */\nstate: RippleState = RippleState.HIDDEN;\n/**\n * @param {?} _renderer\n * @param {?} element\n * @param {?} config\n */\nconstructor(\nprivate _renderer: RippleRenderer,\npublic element: HTMLElement,\npublic config: RippleConfig) {\n  }\n/**\n * Fades out the ripple element.\n * @return {?}\n */\nfadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n\nfunction RippleRef_tsickle_Closure_declarations() {\n/**\n * Current state of the ripple reference.\n * @type {?}\n */\nRippleRef.prototype.state;\n/** @type {?} */\nRippleRef.prototype._renderer;\n/** @type {?} */\nRippleRef.prototype.element;\n/** @type {?} */\nRippleRef.prototype.config;\n}\n\n","\n/**\n * Coerces a data-bound value (typically a string) to a boolean.\n * @param {?} value\n * @return {?}\n */\nexport function coerceBooleanProperty(value: any): boolean {\n  return value != null && `${value}` !== 'false';\n}\n","\n// Due to a bug in the ChromeDriver, Angular keyboard events are not triggered by `sendKeys`\n// during E2E tests when using dot notation such as `(keydown.rightArrow)`. To get around this,\n// we are temporarily using a single (keydown) handler.\n// See: https://github.com/angular/angular/issues/9419\n\nexport const /** @type {?} */ UP_ARROW = 38;\nexport const /** @type {?} */ DOWN_ARROW = 40;\nexport const /** @type {?} */ RIGHT_ARROW = 39;\nexport const /** @type {?} */ LEFT_ARROW = 37;\n\nexport const /** @type {?} */ PAGE_UP = 33;\nexport const /** @type {?} */ PAGE_DOWN = 34;\n\nexport const /** @type {?} */ HOME = 36;\nexport const /** @type {?} */ END = 35;\n\nexport const /** @type {?} */ ENTER = 13;\nexport const /** @type {?} */ SPACE = 32;\nexport const /** @type {?} */ TAB = 9;\n\nexport const /** @type {?} */ ESCAPE = 27;\nexport const /** @type {?} */ BACKSPACE = 8;\nexport const /** @type {?} */ DELETE = 46;\n","import {\n  Directive,\n  ElementRef,\n  NgModule,\n  Output,\n  Input,\n  EventEmitter,\n  OnDestroy,\n  AfterContentInit,\n  Injectable,\n} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\nimport'rxjs/add/operator/debounceTime';\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * \\@docs-private\n */\nexport class MdMutationObserverFactory {\n/**\n * @param {?} callback\n * @return {?}\n */\ncreate(callback): MutationObserver {\n    return new MutationObserver(callback);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdMutationObserverFactory_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMutationObserverFactory.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMutationObserverFactory.ctorParameters;\n}\n\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nexport class ObserveContent implements AfterContentInit, OnDestroy {\nprivate _observer: MutationObserver;\n/**\n * Event emitted for each change in the element's content.\n */\nevent = new EventEmitter<MutationRecord[]>();\n/**\n * Used for debouncing the emitted values to the observeContent event.\n */\nprivate _debouncer = new Subject<MutationRecord[]>();\n/**\n * Debounce interval for emitting the changes.\n */\ndebounce: number;\n/**\n * @param {?} _mutationObserverFactory\n * @param {?} _elementRef\n */\nconstructor(\nprivate _mutationObserverFactory: MdMutationObserverFactory,\nprivate _elementRef: ElementRef) { }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    if (this.debounce > 0) {\n      this._debouncer\n        .debounceTime(this.debounce)\n        .subscribe(mutations => this.event.emit(mutations));\n    } else {\n      this._debouncer.subscribe(mutations => this.event.emit(mutations));\n    }\n\n    this._observer = this._mutationObserverFactory.create((mutations: MutationRecord[]) => {\n      this._debouncer.next(mutations);\n    });\n\n    this._observer.observe(this._elementRef.nativeElement, {\n      characterData: true,\n      childList: true,\n      subtree: true\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._observer) {\n      this._observer.disconnect();\n      this._debouncer.complete();\n      this._debouncer = this._observer = null;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdkObserveContent]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdMutationObserverFactory, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'event': [{ type: Output, args: ['cdkObserveContent', ] },],\n'debounce': [{ type: Input },],\n};\n}\n\nfunction ObserveContent_tsickle_Closure_declarations() {\n/** @type {?} */\nObserveContent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nObserveContent.ctorParameters;\n/** @type {?} */\nObserveContent.propDecorators;\n/** @type {?} */\nObserveContent.prototype._observer;\n/**\n * Event emitted for each change in the element's content.\n * @type {?}\n */\nObserveContent.prototype.event;\n/**\n * Used for debouncing the emitted values to the observeContent event.\n * @type {?}\n */\nObserveContent.prototype._debouncer;\n/**\n * Debounce interval for emitting the changes.\n * @type {?}\n */\nObserveContent.prototype.debounce;\n/** @type {?} */\nObserveContent.prototype._mutationObserverFactory;\n/** @type {?} */\nObserveContent.prototype._elementRef;\n}\n\nexport class ObserveContentModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [ObserveContent],\n  declarations: [ObserveContent],\n  providers: [MdMutationObserverFactory]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ObserveContentModule_tsickle_Closure_declarations() {\n/** @type {?} */\nObserveContentModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nObserveContentModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  NgModule,\n  Directive,\n  HostBinding,\n  Output,\n  Input,\n  EventEmitter\n} from '@angular/core';\n\nexport type LayoutDirection = 'ltr' | 'rtl';\n/**\n * Directive to listen for changes of direction of part of the DOM.\n * \n * Applications should use this directive instead of the native attribute so that Material\n * components can listen on changes of direction.\n */\nexport class Dir {\n/**\n * Layout direction of the element.\n */\n_dir: LayoutDirection = 'ltr';\n/**\n * Event emitted when the direction changes.\n */\ndirChange = new EventEmitter<void>();\n/**\n * \\@docs-private\n * @return {?}\n */\nget dir(): LayoutDirection {\n    return this._dir;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset dir(v: LayoutDirection) {\n    let /** @type {?} */ old = this._dir;\n    this._dir = v;\n    if (old != this._dir) {\n      this.dirChange.emit();\n    }\n  }\n/**\n * Current layout direction of the element.\n * @return {?}\n */\nget value(): LayoutDirection { return this.dir; }\n/**\n * @param {?} v\n * @return {?}\n */\nset value(v: LayoutDirection) { this.dir = v; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[dir]',\n  // TODO(hansl): maybe `$implicit` isn't the best option here, but for now that's the best we got.\n  exportAs: '$implicit'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_dir': [{ type: Input, args: ['dir', ] },],\n'dirChange': [{ type: Output },],\n'dir': [{ type: HostBinding, args: ['attr.dir', ] },],\n};\n}\n\nfunction Dir_tsickle_Closure_declarations() {\n/** @type {?} */\nDir.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDir.ctorParameters;\n/** @type {?} */\nDir.propDecorators;\n/**\n * Layout direction of the element.\n * @type {?}\n */\nDir.prototype._dir;\n/**\n * Event emitted when the direction changes.\n * @type {?}\n */\nDir.prototype.dirChange;\n}\n\nexport class RtlModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [Dir],\n  declarations: [Dir]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RtlModule_tsickle_Closure_declarations() {\n/** @type {?} */\nRtlModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRtlModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  NgModule,\n  Directive,\n  Renderer2,\n  ElementRef,\n  QueryList,\n} from '@angular/core';\nimport {MdCommonModule} from '../common-behaviors/common-module';\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MdLine) query, then\n * counted by checking the query list's length.\n */\nexport class MdLine {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-line], [mat-line]',\n  host: {\n    '[class.mat-line]': 'true'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdLine_tsickle_Closure_declarations() {\n/** @type {?} */\nMdLine.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdLine.ctorParameters;\n}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n */\nexport class MdLineSetter {\n/**\n * @param {?} _lines\n * @param {?} _renderer\n * @param {?} _element\n */\nconstructor(private _lines: QueryList<MdLine>,\nprivate _renderer: Renderer2,\nprivate _element: ElementRef) {\n    this._setLineClass(this._lines.length);\n\n    this._lines.changes.subscribe(() => {\n      this._setLineClass(this._lines.length);\n    });\n  }\n/**\n * @param {?} count\n * @return {?}\n */\nprivate _setLineClass(count: number): void {\n    this._resetClasses();\n    if (count === 2 || count === 3) {\n      this._setClass(`mat-${count}-line`, true);\n    } else if (count > 3) {\n      this._setClass(`mat-multi-line`, true);\n    }\n  }\n/**\n * @return {?}\n */\nprivate _resetClasses(): void {\n    this._setClass('mat-2-line', false);\n    this._setClass('mat-3-line', false);\n    this._setClass('mat-multi-line', false);\n  }\n/**\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nprivate _setClass(className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this._renderer.addClass(this._element.nativeElement, className);\n    } else {\n      this._renderer.removeClass(this._element.nativeElement, className);\n    }\n  }\n\n}\n\nfunction MdLineSetter_tsickle_Closure_declarations() {\n/** @type {?} */\nMdLineSetter.prototype._lines;\n/** @type {?} */\nMdLineSetter.prototype._renderer;\n/** @type {?} */\nMdLineSetter.prototype._element;\n}\n\nexport class MdLineModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdCommonModule],\n  exports: [MdLine, MdCommonModule],\n  declarations: [MdLine],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdLineModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdLineModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdLineModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule} from '@angular/core';\nimport {CompatibilityModule} from '../compatibility/compatibility';\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, compatibility mode, etc.\n * \n * This module should be imported to each top-level component module (e.g., MdTabsModule).\n */\nexport class MdCommonModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CompatibilityModule],\n  exports: [CompatibilityModule],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCommonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCommonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCommonModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  NgModule,\n  Directive,\n  Inject,\n  Optional,\n  isDevMode,\n  ElementRef,\n  InjectionToken,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/platform-browser';\n\nexport const /** @type {?} */ MATERIAL_COMPATIBILITY_MODE = new InjectionToken<boolean>('md-compatibility-mode');\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n */\nexport const MATERIAL_SANITY_CHECKS = new InjectionToken<boolean>('md-sanity-checks');\n/**\n * Returns an exception to be thrown if the consumer has used\n * an invalid Material prefix on a component.\n * \\@docs-private\n * @param {?} prefix\n * @param {?} nodeName\n * @return {?}\n */\nexport function getMdCompatibilityInvalidPrefixError(prefix: string, nodeName: string) {\n  return new Error(`The \"${prefix}-\" prefix cannot be used in ng-material v1 compatibility mode. ` +\n                   `It was used on an \"${nodeName.toLowerCase()}\" element.`);\n}\n/**\n * Selector that matches all elements that may have style collisions with AngularJS Material.\n */\nexport const MAT_ELEMENTS_SELECTOR = `\n  [mat-button],\n  [mat-card-subtitle],\n  [mat-card-title],\n  [mat-dialog-actions],\n  [mat-dialog-close],\n  [mat-dialog-content],\n  [mat-dialog-title],\n  [mat-fab],\n  [mat-icon-button],\n  [mat-menu-trigger-for],\n  [mat-mini-fab],\n  [mat-raised-button],\n  [mat-tab-label],\n  [mat-tab-link],\n  [mat-tab-nav-bar],\n  [matTooltip],\n  mat-autocomplete,\n  mat-button-toggle,\n  mat-button-toggle-group,\n  mat-button-toggle,\n  mat-card,\n  mat-card-actions,\n  mat-card-content,\n  mat-card-footer,\n  mat-card-header,\n  mat-card-subtitle,\n  mat-card-title,\n  mat-card-title-group,\n  mat-checkbox,\n  mat-chip,\n  mat-dialog-actions,\n  mat-dialog-container,\n  mat-dialog-content,\n  mat-divider,\n  mat-grid-list,\n  mat-grid-tile,\n  mat-grid-tile-footer,\n  mat-grid-tile-header,\n  mat-hint,\n  mat-icon,\n  mat-list,\n  mat-list-item,\n  mat-menu,\n  mat-nav-list,\n  mat-option,\n  mat-placeholder,\n  mat-progress-bar,\n  mat-pseudo-checkbox,\n  mat-radio-button,\n  mat-radio-group,\n  mat-select,\n  mat-sidenav,\n  mat-sidenav-container,\n  mat-slider,\n  mat-spinner,\n  mat-tab,\n  mat-tab-group,\n  mat-toolbar,\n  mat-error`;\n/**\n * Selector that matches all elements that may have style collisions with AngularJS Material.\n */\nexport const MD_ELEMENTS_SELECTOR = `\n  [md-button],\n  [md-card-subtitle],\n  [md-card-title],\n  [md-dialog-actions],\n  [md-dialog-close],\n  [md-dialog-content],\n  [md-dialog-title],\n  [md-fab],\n  [md-icon-button],\n  [md-menu-trigger-for],\n  [md-mini-fab],\n  [md-raised-button],\n  [md-tab-label],\n  [md-tab-link],\n  [md-tab-nav-bar],\n  [mdTooltip],\n  md-autocomplete,\n  md-button-toggle,\n  md-button-toggle-group,\n  md-button-toggle,\n  md-card,\n  md-card-actions,\n  md-card-content,\n  md-card-footer,\n  md-card-header,\n  md-card-subtitle,\n  md-card-title,\n  md-card-title-group,\n  md-checkbox,\n  md-chip,\n  md-dialog-actions,\n  md-dialog-container,\n  md-dialog-content,\n  md-divider,\n  md-grid-list,\n  md-grid-tile,\n  md-grid-tile-footer,\n  md-grid-tile-header,\n  md-hint,\n  md-icon,\n  md-list,\n  md-list-item,\n  md-menu,\n  md-nav-list,\n  md-option,\n  md-placeholder,\n  md-progress-bar,\n  md-pseudo-checkbox,\n  md-radio-button,\n  md-radio-group,\n  md-select,\n  md-sidenav,\n  md-sidenav-container,\n  md-slider,\n  md-spinner,\n  md-tab,\n  md-tab-group,\n  md-toolbar,\n  md-error`;\n/**\n * Directive that enforces that the `mat-` prefix cannot be used.\n */\nexport class MatPrefixRejector {\n/**\n * @param {?} isCompatibilityMode\n * @param {?} elementRef\n */\nconstructor(\n      isCompatibilityMode: boolean,\n    elementRef: ElementRef) {\n\n    if (!isCompatibilityMode) {\n      throw getMdCompatibilityInvalidPrefixError('mat', elementRef.nativeElement.nodeName);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: MAT_ELEMENTS_SELECTOR}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_COMPATIBILITY_MODE, ] }, ]},\n{type: ElementRef, },\n];\n}\n\nfunction MatPrefixRejector_tsickle_Closure_declarations() {\n/** @type {?} */\nMatPrefixRejector.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatPrefixRejector.ctorParameters;\n}\n\n/**\n * Directive that enforces that the `md-` prefix cannot be used.\n */\nexport class MdPrefixRejector {\n/**\n * @param {?} isCompatibilityMode\n * @param {?} elementRef\n */\nconstructor(\n      isCompatibilityMode: boolean,\n    elementRef: ElementRef) {\n\n    if (isCompatibilityMode) {\n      throw getMdCompatibilityInvalidPrefixError('md', elementRef.nativeElement.nodeName);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: MD_ELEMENTS_SELECTOR}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_COMPATIBILITY_MODE, ] }, ]},\n{type: ElementRef, },\n];\n}\n\nfunction MdPrefixRejector_tsickle_Closure_declarations() {\n/** @type {?} */\nMdPrefixRejector.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdPrefixRejector.ctorParameters;\n}\n\n/**\n * Module that enforces the default compatibility mode settings. When this module is loaded\n * without NoConflictStyleCompatibilityMode also being imported, it will throw an error if\n * there are any uses of the `mat-` prefix.\n */\nexport class CompatibilityModule {\n/**\n * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n */\nprivate _hasDoneGlobalChecks = false;\n/**\n * @param {?} _document\n * @param {?} _sanityChecksEnabled\n */\nconstructor(\nprivate _document: any,\n      _sanityChecksEnabled: boolean) {\n\n    if (_sanityChecksEnabled && !this._hasDoneGlobalChecks && _document && isDevMode()) {\n      // Delay running the check to allow more time for the user's styles to load.\n      this._checkDoctype();\n      this._checkTheme();\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n/**\n * @return {?}\n */\nprivate _checkDoctype(): void {\n    if (!this._document.doctype) {\n      console.warn(\n        'Current document does not have a doctype. This may cause ' +\n        'some Angular Material components not to behave as expected.'\n      );\n    }\n  }\n/**\n * @return {?}\n */\nprivate _checkTheme(): void {\n    if (typeof getComputedStyle === 'function') {\n      const /** @type {?} */ testElement = this._document.createElement('div');\n\n      testElement.classList.add('mat-theme-loaded-marker');\n      this._document.body.appendChild(testElement);\n\n      if (getComputedStyle(testElement).display !== 'none') {\n        console.warn(\n          'Could not find Angular Material core theme. Most Material ' +\n          'components may not work as expected. For more info refer ' +\n          'to the theming guide: https://material.angular.io/guide/theming'\n        );\n      }\n\n      this._document.body.removeChild(testElement);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [MatPrefixRejector, MdPrefixRejector],\n  exports: [MatPrefixRejector, MdPrefixRejector],\n  providers: [{\n    provide: MATERIAL_SANITY_CHECKS, useValue: true,\n  }],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT, ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS, ] }, ]},\n];\n}\n\nfunction CompatibilityModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCompatibilityModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCompatibilityModule.ctorParameters;\n/**\n * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n * @type {?}\n */\nCompatibilityModule.prototype._hasDoneGlobalChecks;\n/** @type {?} */\nCompatibilityModule.prototype._document;\n}\n\n/**\n * Module that enforces \"no-conflict\" compatibility mode settings. When this module is loaded,\n * it will throw an error if there are any uses of the `md-` prefix.\n */\nexport class NoConflictStyleCompatibilityMode {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [{\n    provide: MATERIAL_COMPATIBILITY_MODE, useValue: true,\n  }],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NoConflictStyleCompatibilityMode_tsickle_Closure_declarations() {\n/** @type {?} */\nNoConflictStyleCompatibilityMode.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNoConflictStyleCompatibilityMode.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["state"],"mappings":"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"}